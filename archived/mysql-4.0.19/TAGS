
client/insert_test.c,46
#define INSERT_QUERY 21,804
int main(24,880

client/mysqladmin.c,2859
#define ADMIN_VERSION 27,930
#define MAX_MYSQL_VAR 28,959
#define SHUTDOWN_DEF_TIMEOUT 29,985
#define MAX_TRUNC_LENGTH 30,1044
char *host=host32,1072
char truncated_var_names[truncated_var_names33,1118
char ex_var_names[ex_var_names34,1177
ulonglong last_values[last_values35,1222
static int interval=36,1260
static my_bool option_force=37,1283
static uint tcp_port 40,1448
static ulong opt_connect_timeout,42,1560
static ulong opt_connect_timeout, opt_shutdown_timeout;42,1560
static my_string unix_port=43,1616
static uint ex_val_max_len[ex_val_max_len51,1867
static my_bool ex_status_printed 52,1910
static uint ex_var_count,53,1984
static uint ex_var_count, max_var_length,53,1984
static uint ex_var_count, max_var_length, max_val_length;53,1984
enum commands 81,3089
  ADMIN_ERROR,82,3106
  ADMIN_CREATE,83,3122
  ADMIN_CREATE,           ADMIN_DROP,83,3122
  ADMIN_CREATE,           ADMIN_DROP,            ADMIN_SHUTDOWN,83,3122
  ADMIN_RELOAD,84,3187
  ADMIN_RELOAD,           ADMIN_REFRESH,84,3187
  ADMIN_RELOAD,           ADMIN_REFRESH,         ADMIN_VER,84,3187
  ADMIN_PROCESSLIST,85,3248
  ADMIN_PROCESSLIST,      ADMIN_STATUS,85,3248
  ADMIN_PROCESSLIST,      ADMIN_STATUS,          ADMIN_KILL,85,3248
  ADMIN_DEBUG,86,3310
  ADMIN_DEBUG,            ADMIN_VARIABLES,86,3310
  ADMIN_DEBUG,            ADMIN_VARIABLES,       ADMIN_FLUSH_LOGS,86,3310
  ADMIN_FLUSH_HOSTS,87,3378
  ADMIN_FLUSH_HOSTS,      ADMIN_FLUSH_TABLES,87,3378
  ADMIN_FLUSH_HOSTS,      ADMIN_FLUSH_TABLES,    ADMIN_PASSWORD,87,3378
  ADMIN_PING,88,3444
  ADMIN_PING,             ADMIN_EXTENDED_STATUS,88,3444
  ADMIN_PING,             ADMIN_EXTENDED_STATUS, ADMIN_FLUSH_STATUS,88,3444
  ADMIN_FLUSH_PRIVILEGES,89,3514
  ADMIN_FLUSH_PRIVILEGES, ADMIN_START_SLAVE,89,3514
  ADMIN_FLUSH_PRIVILEGES, ADMIN_START_SLAVE,     ADMIN_STOP_SLAVE,89,3514
  ADMIN_FLUSH_THREADS90,3582
static const char *command_names[command_names92,3607
static TYPELIB command_typelib=104,4109
static struct my_option my_long_options[my_long_options107,4204
static const char *load_default_groups[load_default_groups178,7826
get_one_option(181,7913
int main(247,9121
static sig_handler endprog(336,11030
static my_bool sql_connect(342,11123
static int execute_commands(420,12817
static void print_version(819,22481
static void usage(826,22645
static int drop_db(864,24312
static void nice_time(892,25099
static void print_header(921,25635
static void print_top(937,25927
static void print_row(959,26399
static void print_relative_row(977,26791
static void print_relative_row_vert(995,27272
static void store_values(1017,27863
static void print_relative_header(1039,28349
static void print_relative_line(1050,28541
static void truncate_names(1066,28768
static my_bool get_pidfile(1102,29680
static my_bool wait_pidfile(1127,30232

client/mysqlcheck.c,1434
#define CHECK_VERSION 19,804
#define EX_USAGE 29,978
#define EX_MYSQLERR 30,997
static MYSQL mysql_connection,32,1020
static MYSQL mysql_connection, *sock sock32,1020
static my_bool opt_alldbs 33,1062
static uint verbose 38,1392
static my_string opt_mysql_unix_port 39,1435
static char *opt_password opt_password40,1477
static int first_error 42,1580
DYNAMIC_ARRAY tables4repair;43,1608
enum operations 45,1638
enum operations {DO_CHECK,DO_CHECK45,1638
enum operations {DO_CHECK, DO_REPAIR,45,1638
enum operations {DO_CHECK, DO_REPAIR, DO_ANALYZE,45,1638
enum operations {DO_CHECK, DO_REPAIR, DO_ANALYZE, DO_OPTIMIZE}DO_OPTIMIZE45,1638
static struct my_option my_long_options[my_long_options47,1703
static const char *load_default_groups[load_default_groups142,7130
int what_to_do 160,7891
static void print_version(162,7912
static void usage(169,8100
get_one_option(198,9624
static int get_options(260,10891
static int process_all_databases(315,12228
static int process_databases(338,12703
static int process_selected_tables(350,12919
static char *fix_table_name(fix_table_name388,13994
static int process_all_tables_in_db(404,14286
static int use_db(456,15496
static int handle_request_for_tables(467,15672
static void print_result(527,17303
static int dbConnect(570,18323
static void dbDisconnect(595,19028
static void DBerror(603,19206
static void safe_exit(613,19452
int main(625,19618

client/mysqldump.c,2118
#define DUMP_VERSION 39,1570
#define EX_USAGE 53,1802
#define EX_MYSQLERR 54,1821
#define EX_CONSCHECK 55,1843
#define EX_EOM 56,1866
#define SHOW_FIELDNAME 60,1927
#define SHOW_TYPE 61,1953
#define SHOW_NULL 62,1974
#define SHOW_DEFAULT 63,1995
#define SHOW_EXTRA 64,2019
#define QUOTE_CHAR	65,2041
#define QUERY_LENGTH 68,2110
static my_bool  verbose=74,2296
static MYSQL  mysql_connection,82,2763
static MYSQL  mysql_connection,*sock=sock82,2763
static char  insert_pat[insert_pat83,2803
static char  insert_pat[12 * 1024],*opt_password=opt_password83,2803
static uint     opt_mysql_port=87,3047
static my_string opt_mysql_unix_port=88,3081
static int   first_error=89,3121
static DYNAMIC_STRING extended_row;91,3181
FILE  *md_result_file;md_result_file93,3242
static struct my_option my_long_options[my_long_options95,3266
static const char *load_default_groups[load_default_groups254,12498
static void print_version(271,13230
static void short_usage_sub(278,13413
static void usage(286,13681
static void short_usage(299,14152
static void write_header(306,14269
static void write_footer(326,14880
get_one_option(335,15039
static int get_options(399,16452
static void DBerror(461,18062
static void safe_exit(471,18308
static int dbConnect(488,18616
static void dbDisconnect(517,19374
static void unescape(525,19553
static my_bool test_if_special_chars(543,19998
static char *quote_name(quote_name554,20212
static char *quote_for_like(quote_for_like573,20572
static uint getTableStructure(597,21022
static char *add_load_option(add_load_option890,29682
static char *field_escape(field_escape917,30419
static void dumpTable(944,31074
static void print_quoted_xml(1247,39218
static char *getTableName(getTableName1268,39712
static int dump_all_databases(1292,40129
static int dump_databases(1315,40591
static int init_dumping(1327,40794
static int dump_all_tables_in_db(1356,41649
static int dump_selected_tables(1401,42895
static void print_value(1447,44173
static const char *check_if_ignore_table(check_if_ignore_table1491,45118
int main(1529,46155

client/mysqlimport.c,922
#define IMPORT_VERSION 28,997
static my_bool	verbose=39,1334
static MYSQL	mysql_connection;42,1520
static char	*opt_password=opt_password43,1551
static uint     opt_mysql_port=47,1754
static my_string opt_mysql_unix_port=48,1788
static longlong opt_ignore_lines=49,1828
static struct my_option my_long_options[my_long_options52,1892
static const char *load_default_groups[load_default_groups135,6489
static void print_version(137,6562
static void usage(145,6730
get_one_option(165,7598
static int get_options(202,8377
static int write_to_table(238,9122
static void lock_table(318,11506
static MYSQL *db_connect(db_connect340,12082
static void db_disconnect(375,13067
static void safe_exit(384,13236
static void db_error_with_table(395,13372
static void db_error(404,13556
static char *add_load_option(add_load_option411,13682
static char *field_escape(field_escape437,14398
int main(462,14970

client/mysqlmanager-pwgen.c,301
#define MANAGER_PWGEN_VERSION 17,745
const char* outfile=28,955
static struct my_option my_long_options[my_long_options30,992
static void die(44,1590
static void print_version(60,1861
void usage(67,2034
get_one_option(79,2374
int parse_args(94,2626
void get_pass(104,2799
int main(135,3344

client/mysqlmanagerc.c,566
#define MANAGER_CLIENT_VERSION 17,745
#define MYSQL_MANAGER_PORT 31,1033
const char* user=36,1113
char* pass=37,1156
my_bool quiet=38,1170
uint port=39,1187
static const char *load_default_groups[load_default_groups40,1217
char** default_argv;41,1282
MYSQL_MANAGER *manager;manager42,1303
FILE* fp,43,1327
FILE* fp, *fp_out;fp_out43,1327
static struct my_option my_long_options[my_long_options45,1347
static void die(65,2283
static void print_version(81,2554
void usage(88,2728
get_one_option(102,3168
int parse_args(129,3669
int main(143,3921

client/mysqlshow.c,753
#define SHOW_VERSION 19,786
static my_string host=30,992
static my_bool opt_show_keys=31,1039
static uint opt_verbose=32,1115
static uint opt_mysql_port=35,1192
static const char *load_default_groups[load_default_groups48,1852
static my_string opt_mysql_unix_port=49,1922
int main(51,1963
static struct my_option my_long_options[my_long_options139,3982
static void print_version(185,6141
static void usage(191,6302
get_one_option(211,7237
get_options(254,8081
list_dbs(268,8324
list_tables(373,10703
list_table_status(481,13210
list_fields(518,14223
print_header(580,15964
print_row(643,17300
print_trailer(670,17820
static void print_res_header(691,18139
static void print_res_top(707,18443
static void print_res_row(728,18859

client/mysqltest.c,9630
#define MTEST_VERSION 45,1621
#define MAX_QUERY	62,1959
#define MAX_COLUMNS	63,1983
#define PAD_SIZE	64,2007
#define MAX_CONS	65,2028
#define MAX_INCLUDE_DEPTH 66,2049
#define LAZY_GUESS_BUF_SIZE 67,2078
#define INIT_Q_LINES	68,2111
#define MIN_VAR_ALLOC	69,2139
#define BLOCK_STACK_DEPTH 70,2166
#define MAX_EXPECTED_ERRORS 71,2196
#define QUERY_SEND 72,2227
#define QUERY_REAP 73,2249
#define MYSQL_MANAGER_PORT 75,2298
#define MAX_SERVER_ARGS 77,2338
#define charset_info 80,2413
#define my_isvar(81,2455
#define my_hash_insert(82,2486
#define CON_RETRY_SLEEP 90,2696
#define MAX_CON_TRIES	91,2722
#define SLAVE_POLL_INTERVAL 93,2747
enum {OPT_MANAGER_USER=OPT_MANAGER_USER96,2803
enum {OPT_MANAGER_USER=256,OPT_MANAGER_HOST,96,2803
enum {OPT_MANAGER_USER=256,OPT_MANAGER_HOST,OPT_MANAGER_PASSWD,96,2803
      OPT_MANAGER_PORT,97,2867
      OPT_MANAGER_PORT,OPT_MANAGER_WAIT_TIMEOUT,97,2867
      OPT_MANAGER_PORT,OPT_MANAGER_WAIT_TIMEOUT, OPT_SKIP_SAFEMALLOC,97,2867
      OPT_SSL_SSL,98,2937
      OPT_SSL_SSL, OPT_SSL_KEY,98,2937
      OPT_SSL_SSL, OPT_SSL_KEY, OPT_SSL_CERT,98,2937
      OPT_SSL_SSL, OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA,98,2937
      OPT_SSL_SSL, OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA, OPT_SSL_CAPATH,98,2937
      OPT_SSL_CIPHER}OPT_SSL_CIPHER99,3011
static int record 101,3035
static char *db db102,3071
const char* user 103,3101
static int port 104,3169
static my_bool opt_big_test=105,3190
static uint start_lineno,107,3288
static uint start_lineno, *lineno;lineno107,3288
const char* manager_user=108,3323
char *manager_pass=manager_pass109,3372
int manager_port=110,3394
int manager_wait_timeout=111,3431
MYSQL_MANAGER* manager=112,3459
static char **default_argv;default_argv114,3486
static const char *load_default_groups[load_default_groups115,3514
static FILE* file_stack[file_stack117,3585
static FILE** cur_file;118,3629
static FILE** file_stack_end;119,3653
static uint lineno_stack[lineno_stack120,3683
static char TMPDIR[TMPDIR121,3728
static int *cur_block,cur_block123,3760
static int *cur_block, *block_stack_end;block_stack_end123,3760
static int block_stack[block_stack124,3801
static int block_ok_stack[block_ok_stack126,3845
static uint global_expected_errno[global_expected_errno127,3891
static uint global_expected_errno[MAX_EXPECTED_ERRORS], global_expected_errors;127,3891
static int embedded_server_arg_count=129,3972
static char *embedded_server_args[embedded_server_args130,4012
static const char *embedded_server_groups[embedded_server_groups132,4065
DYNAMIC_ARRAY q_lines;139,4173
} MASTER_POS 147,4277
struct connection149,4293
} PARSER;158,4394
MYSQL_RES *last_result=last_result160,4405
PARSER parser;162,4432
MASTER_POS master_pos;163,4447
int *block_ok;block_ok164,4470
int false_block_depth 165,4544
const char *result_file result_file167,4641
} VAR;179,4882
VAR var_reg[var_reg181,4890
HASH var_hash;183,4947
my_bool disable_query_log=184,4962
my_bool disable_info=185,5033
struct connection cons[cons187,5082
struct connection* cur_con,188,5116
struct connection* cur_con, *next_con,next_con188,5116
struct connection* cur_con, *next_con, *cons_end;cons_end188,5116
enum enum_commands 192,5211
Q_CONNECTION=193,5232
Q_CONNECTION=1,     Q_QUERY,193,5232
Q_CONNECT,194,5261
Q_CONNECT,	    Q_SLEEP,194,5261
Q_CONNECT,	    Q_SLEEP, Q_REAL_SLEEP,194,5261
Q_INC,195,5300
Q_INC,		    Q_DEC,195,5300
Q_SOURCE,196,5319
Q_SOURCE,	    Q_DISCONNECT,196,5319
Q_LET,197,5347
Q_LET,		    Q_ECHO,197,5347
Q_WHILE,198,5367
Q_WHILE,	    Q_END_BLOCK,198,5367
Q_SYSTEM,199,5393
Q_SYSTEM,	    Q_RESULT,199,5393
Q_REQUIRE,200,5417
Q_REQUIRE,	    Q_SAVE_MASTER_POS,200,5417
Q_SYNC_WITH_MASTER,201,5451
Q_SYNC_SLAVE_WITH_MASTER,202,5471
Q_ERROR,203,5497
Q_SEND,204,5506
Q_SEND,		    Q_REAP,204,5506
Q_DIRTY_CLOSE,205,5527
Q_DIRTY_CLOSE,	    Q_REPLACE,205,5527
Q_DIRTY_CLOSE,	    Q_REPLACE, Q_REPLACE_COLUMN,205,5527
Q_PING,206,5575
Q_PING,		    Q_EVAL,206,5575
Q_RPL_PROBE,207,5596
Q_RPL_PROBE,	    Q_ENABLE_RPL_PARSE,207,5596
Q_DISABLE_RPL_PARSE,208,5633
Q_DISABLE_RPL_PARSE, Q_EVAL_RESULT,208,5633
Q_ENABLE_QUERY_LOG,209,5669
Q_ENABLE_QUERY_LOG, Q_DISABLE_QUERY_LOG,209,5669
Q_ENABLE_RESULT_LOG,210,5710
Q_ENABLE_RESULT_LOG, Q_DISABLE_RESULT_LOG,210,5710
Q_SERVER_START,211,5753
Q_SERVER_START, Q_SERVER_STOP,211,5753
Q_SERVER_START, Q_SERVER_STOP,Q_REQUIRE_MANAGER,211,5753
Q_WAIT_FOR_SLAVE_TO_STOP,212,5802
Q_REQUIRE_VERSION,213,5828
Q_ENABLE_WARNINGS,214,5847
Q_ENABLE_WARNINGS, Q_DISABLE_WARNINGS,214,5847
Q_ENABLE_INFO,215,5886
Q_ENABLE_INFO, Q_DISABLE_INFO,215,5886
Q_EXEC,216,5917
Q_UNKNOWN,217,5925
Q_COMMENT,218,5970
Q_COMMENT_WITH_COMMAND219,6015
struct st_query223,6085
const char *command_names[command_names234,6343
TYPELIB command_typelib=291,7462
DYNAMIC_STRING ds_res;294,7544
typedef struct st_pointer_array 315,8286
} POINTER_ARRAY;320,8532
struct st_replace *glob_replace;glob_replace336,9182
static char *out_buff;out_buff337,9215
static uint out_length;338,9238
static int eval_result 339,9262
char *replace_column[replace_column342,9316
uint max_replace_column=343,9351
void mysql_enable_rpl_parse(350,9579
void mysql_disable_rpl_parse(351,9648
int mysql_rpl_parse_enabled(352,9718
int mysql_rpl_probe(353,9798
static void do_eval(358,9973
static void close_cons(398,10659
static void close_files(412,10938
static void free_used_memory(424,11149
static void die(460,12042
static void abort_not_supported_test(479,12401
static void verbose_msg(489,12632
void init_parser(506,12950
int dyn_string_cmp(513,13061
static int check_result(579,14589
VAR* var_get(606,15165
static VAR* var_obtain(660,16453
int var_set(670,16667
int open_file(692,17154
int do_wait_for_slave_to_stop(714,17641
int do_require_manager(742,18325
int do_server_start(750,18482
int do_server_stop(755,18561
int do_server_op(760,18638
int do_require_version(791,19492
int do_source(827,20382
int do_exec(856,20860
int var_query_set(916,22116
void var_copy(967,23367
int eval_expr(979,23725
int do_inc(1020,24635
int do_dec(1030,24785
int do_system(1040,24935
int do_echo(1061,25509
int do_sync_with_master2(1078,25792
int do_sync_with_master(1119,26945
int do_save_master_pos(1124,27044
int do_let(1155,27906
int do_rpl_probe(1172,28339
int do_enable_rpl_parse(1180,28569
int do_disable_rpl_parse(1186,28697
int do_sleep(1193,28828
static void get_file_name(1207,29150
static uint get_ints(1218,29383
static char *get_string(get_string1247,29939
static void get_replace(1328,31750
void free_replace(1370,32998
int select_connection(1382,33190
int close_connection(1408,33720
char* safe_get_param(1452,34721
void init_manager(1471,35095
int safe_connect(1483,35408
int do_connect(1502,35786
int do_done(1588,38531
int do_while(1605,38817
int read_line(1641,39533
  enum {R_NORMAL,R_NORMAL1646,39640
  enum {R_NORMAL, R_Q1,1646,39640
  enum {R_NORMAL, R_Q1, R_ESC_Q_Q1,1646,39640
  enum {R_NORMAL, R_Q1, R_ESC_Q_Q1, R_ESC_Q_Q2,1646,39640
	R_ESC_SLASH_Q1,1647,39688
	R_ESC_SLASH_Q1, R_ESC_SLASH_Q2,1647,39688
	R_Q2,1648,39721
	R_Q2, R_COMMENT,1648,39721
	R_Q2, R_COMMENT, R_LINE_START}R_LINE_START1648,39721
static char read_query_buf[read_query_buf1772,41790
int read_query(1774,41830
static struct my_option my_long_options[my_long_options1861,43954
static void print_version(1932,47904
void usage(1938,48066
get_one_option(1952,48564
int parse_args(2030,50431
char* safe_str_append(2051,50786
void str_to_file(2060,50955
void reject_dump(2079,51443
static void replace_dynstr_append_mem(2088,51675
static void append_result(2107,52108
int run_query(2147,53013
void get_query_type(2308,57049
static byte *get_var_key(get_var_key2332,57552
static VAR *var_init(var_init2341,57751
static void var_free(2375,58701
static void var_from_env(2383,58844
static void init_var_hash(2395,59067
int main(2415,59712
static int read_server_arguments(2652,66354
#define PC_MALLOC	2696,67500
#define PS_MALLOC	2697,67548
#define SPACE_CHAR	2699,67593
#define START_OF_LINE	2700,67616
#define END_OF_LINE	2701,67642
#define LAST_CHAR_CODE	2702,67666
typedef struct st_replace 2704,67694
} REPLACE;2707,67769
typedef struct st_replace_found 2709,67781
} REPLACE_STRING;2714,67890
#define WORD_BIT 2717,67926
static int insert_pointer_name(2721,67969
void free_pointer_array(2794,70349
#define SET_MALLOC_HUNC 2808,70631
typedef struct st_rep_set 2810,70659
} REP_SET;2817,70920
typedef struct st_rep_sets 2819,70932
} REP_SETS;2826,71155
typedef struct st_found_set 2828,71168
} FOUND_SET;2831,71239
typedef struct st_follow 2833,71253
} FOLLOWS;2837,71324
static uint found_sets=2858,72116
REPLACE *init_replace(init_replace2863,72195
static int init_sets(3144,79830
static void make_sets_invisible(3162,80315
static REP_SET *make_new_set(make_new_set3169,80442
static void free_last_set(3206,81480
static void free_sets(3213,81571
static void set_bit(3220,81708
static void clear_bit(3226,81821
static void or_bits(3233,81941
static void copy_bits(3241,82091
static int cmp_bits(3247,82238
static int get_next_bit(3256,82424
static int find_set(3281,82989
static int find_found(3302,83580
static uint start_at_word(3317,84032
static uint end_of_word(3322,84153
static uint replace_len(3331,84335
uint replace_strings(3347,84557
static int initialize_replace_buffer(3392,85662
static void free_replace_buffer(3400,85809
static void free_replace_column(3410,86074
static void get_replace_column(3432,86573

client/select_test.c,46
#define SELECT_QUERY 24,871
int main(27,933

client/thread_test.c,979
int main(21,785
static my_bool version,33,1049
static my_bool version, verbose,33,1049
static my_bool version, verbose, tty_password=33,1049
static uint thread_count,34,1099
static uint thread_count,number_of_tests=34,1099
static pthread_cond_t COND_thread_count;35,1166
static pthread_mutex_t LOCK_thread_count;36,1207
static char *database,database38,1250
static char *database,*host,host38,1250
static char *database,*host,*user,user38,1250
static char *database,*host,*user,*password,password38,1250
static char *database,*host,*user,*password,*unix_socket,unix_socket38,1250
static char *database,*host,*user,*password,*unix_socket,*query;query38,1250
uint tcp_port;39,1315
void *test_thread(test_thread42,1347
static struct my_option my_long_options[my_long_options87,2469
static const char *load_default_groups[load_default_groups120,4231
static void usage(122,4290
get_one_option(140,4796
static void get_options(169,5331
int main(185,5649

dbug/dbug.c,3529
#undef DBUG_OFF71,2586
#define _DBUG_START_CONDITION_	81,2765
#define _DBUG_START_CONDITION_	83,2808
#define EOS	90,2923
#define PRINTBUF	96,3047
#define INDENT	97,3102
#define MAXDEPTH	98,3166
#define TRACE_ON	106,3358
#define DEBUG_ON	107,3402
#define FILE_ON	108,3446
#define LINE_ON	109,3500
#define DEPTH_ON	110,3556
#define PROCESS_ON	111,3620
#define NUMBER_ON	112,3679
#define PROFILE_ON	113,3737
#define PID_ON	114,3794
#define SANITY_CHECK_ON 115,3858
#define FLUSH_ON_WRITE	116,3926
#define TRACING 118,3984
#define DEBUGGING 119,4028
#define PROFILING 120,4074
#define STREQ(121,4122
typedef int BOOLEAN;128,4226
#define BOOLEAN 130,4253
#define IMPORT 137,4346
#define EXPORT	138,4400
#define AUTO 139,4458
#define REGISTER 140,4514
#define PROF_FILE	155,5103
#define PROF_EFMT	156,5135
#define PROF_SFMT	157,5168
#define PROF_XFMT	158,5206
#define AUTOS_REVERSE 161,5294
EXPORT FILE *_db_fp_ _db_fp_169,5443
EXPORT char *_db_process_ _db_process_170,5514
EXPORT FILE *_db_pfp_ _db_pfp_171,5597
EXPORT BOOLEAN _db_on_ 172,5668
EXPORT BOOLEAN _db_pon_ 173,5738
EXPORT BOOLEAN _no_db_ 174,5806
struct link 192,6216
struct state 205,6628
static my_bool init_done 226,7319
static struct state *stack=stack227,7396
typedef struct st_code_state 229,7427
} CODE_STATE;252,8401
#define ERR_MISSING_RETURN 301,9936
#define ERR_OPEN 302,10036
#define ERR_CLOSE 303,10099
#define ERR_ABORT 304,10148
#define ERR_CHOWN 305,10203
#undef EXISTS311,10348
#define EXISTS(313,10406
#define Writable(314,10465
#define EXISTS(316,10501
#define WRITABLE(317,10558
#define ChangeOwner(320,10638
# define Delay(328,10804
pthread_mutex_t THR_LOCK_dbug;342,11050
static void init_dbug_state(344,11082
static CODE_STATE *code_state(code_state349,11178
#define init_dbug_state(369,11580
#define code_state(370,11606
#define pthread_mutex_lock(371,11648
#define pthread_mutex_unlock(372,11681
static CODE_STATE  static_code_state 373,11716
void _db_push_ 494,15553
void _db_pop_ 623,18345
void _db_enter_ 695,20436
void _db_return_ 787,23038
void _db_pargs_ 861,24639
void _db_doprnt_ 900,25511
void _db_dump_(948,26607
static struct link *ListParse ListParse1021,28254
static BOOLEAN InList 1069,29469
static void PushState 1113,30384
static BOOLEAN DoTrace 1158,31456
static BOOLEAN DoProfile 1191,32187
BOOLEAN _db_keyword_ 1233,33228
static void Indent 1275,34127
static void FreeList 1308,34681
static char *StrDup StrDup1344,35308
static void DoPrefix 1373,35905
static void DBUGOpenFile 1422,36940
static FILE *OpenProfile OpenProfile1494,38531
static void CloseFile 1547,39385
static void DbugExit 1580,40033
static char *DbugMalloc DbugMalloc1609,40682
static char *static_strtok static_strtok1625,40995
static char *BaseName BaseName1674,41823
static BOOLEAN Writable 1711,42668
static void ChangeOwner 1765,43811
EXPORT void _db_setjmp_ 1797,44329
EXPORT void _db_longjmp_ 1824,44819
#define HZ 1863,45723
static int DelayArg 1866,45795
static int Delay 1887,46227
static void perror 1921,46949
static void dbug_flush(1936,47321
void _db_lock_file(1967,47963
void _db_unlock_file(1975,48089
static unsigned long Clock 2001,48559
static ulong Clock(2011,48789
struct DateStamp 2017,48877
static int first_clock 2023,49075
static struct DateStamp begin;2024,49106
static struct DateStamp elapsed;2025,49137
static unsigned long Clock 2027,49171
static unsigned long Clock 2049,49841
static int vfprintf 2063,50062

dbug/dbug_analyze.c,1365
static char *my_name;my_name55,2081
static int verbose;56,2103
#define PRO_FILE	62,2159
#define STACKSIZ	63,2221
#define MAXPROCS	64,2274
#	define EX_SOFTWARE 69,2380
#	define EX_DATAERR 70,2403
#	define EX_USAGE 71,2425
#	define EX_OSERR 72,2445
#	define EX_IOERR 73,2465
#	define EX_OK 75,2499
#define __MERF_OO_ 79,2532
#define MALLOC(81,2584
#define Malloc(86,2793
#define FILEOPEN(91,2977
#define Fileopen(96,3157
struct stack_t 102,3317
static struct stack_t fn_stack[fn_stack108,3505
static unsigned int stacktop 110,3550
static unsigned long tot_time 112,3624
static unsigned long tot_calls 113,3659
static unsigned long highstack 114,3695
static unsigned long lowstack 115,3731
#define top(122,3874
void push 128,3963
unsigned int pop 154,4627
struct module_t 182,5267
static struct module_t modules[modules189,5386
struct bnode 196,5542
static struct bnode s_table[s_table202,5724
static unsigned int n_items 204,5764
char *strsave strsave210,5917
unsigned int add 232,6439
void process 301,8243
void out_header 423,11698
void out_trailer 448,12541
void out_item 466,13024
void out_body 513,14272
void output 542,15073
#define usage(560,15452
int main 568,15643
int	opterr 650,18440
int	optind 651,18456
int	optopt;652,18472
char	*optarg;optarg653,18484
static void _ERR(655,18499
int getopt(671,18750

dbug/example1.c,11
main 4,25

dbug/example2.c,27
int debug 4,25
main 6,41

dbug/example3.c,11
main 4,25

dbug/factorial.c,41
#undef DBUG_OFF2,45
int factorial 7,93

dbug/main.c,37
#undef DBUG_OFF2,45
int main 7,120

dbug/sanity.c,19
int _sanity(8,204

extra/comp_err.c,414
#define MAXLENGTH 24,909
#define MAX_ROWS 25,932
#define MAX_FILES 26,955
int	row_count;28,977
uint	file_pos[file_pos29,992
uint	file_pos[MAX_ROWS],file_row_pos[file_row_pos29,992
my_string saved_row[saved_row30,1041
uchar   file_head[file_head31,1072
int main(41,1333
static void get_options(121,2942
static int count_rows(163,4122
static int remember_rows(187,4695
static int copy_rows(249,5987

extra/my_print_defaults.c,233
const char *config_file=config_file28,943
uint verbose=29,1001
static struct my_option my_long_options[my_long_options31,1046
static void usage(59,2314
get_one_option(75,2927
static int get_options(99,3322
int main(114,3555

extra/mysql_install.c,864
#define INSTALL_VERSION 21,896
#define DONT_USE_RAID23,927
#define ANSWERS_CHUNCK 32,1105
int have_gui=34,1132
static struct my_option my_long_options[my_long_options36,1149
} QUESTION_WIDGET;55,1662
enum {IMODE_STANDARD=IMODE_STANDARD71,2271
enum {IMODE_STANDARD=0,IMODE_CUSTOM,71,2271
enum {IMODE_STANDARD=0,IMODE_CUSTOM,IMODE_UPGRAGE}IMODE_UPGRAGE71,2271
static char get_answer_char(74,2355
static void invalid_answer(79,2425
static char answer_from_char(87,2566
static void die(92,2626
static void display_question(103,2831
static void add_answer(121,3260
static int init_question_widget(126,3367
static void end_question_widget(146,3763
static int get_answer(151,3851
static int ask_user(175,4313
get_one_option(202,4783
static int parse_args(217,5034
static void print_version(227,5214
static void usage(233,5378
int main(244,5700

extra/mysql_waitpid.c,247
static const char *VER=VER27,907
static char *progname;progname28,938
static my_bool verbose;29,961
static struct my_option my_long_options[my_long_options33,1005
get_one_option(48,1592
int main(63,1885
void usage(93,2430
main(111,3020

extra/perror.c,481
#define PERROR_VERSION 19,815
static my_bool verbose,27,953
static my_bool verbose, print_all_codes;27,953
static struct my_option my_long_options[my_long_options29,995
typedef struct ha_errors 50,1842
} HA_ERRORS;53,1903
static HA_ERRORS ha_errlist[ha_errlist56,1918
static void print_version(104,4052
static void usage(110,4182
get_one_option(123,4833
static int get_options(144,5157
static const char *get_ha_error_msg(get_ha_error_msg160,5425
int main(171,5652

extra/replace.c,2031
#define DONT_USE_RAID43,1809
#define PC_MALLOC	50,1937
#define PS_MALLOC	51,1985
typedef struct st_pointer_array 53,2030
} POINTER_ARRAY;58,2277
#define SPACE_CHAR	60,2295
#define START_OF_LINE	61,2318
#define END_OF_LINE	62,2344
#define LAST_CHAR_CODE	63,2368
typedef struct st_replace 65,2396
} REPLACE;68,2472
typedef struct st_replace_found 70,2484
} REPLACE_STRING;75,2593
#define WORD_BIT 78,2629
static int silent=100,3426
int main(104,3493
static int static_get_options(152,4529
static int get_replace_strings(221,6736
int insert_pointer_name(252,7454
void free_pointer_array(326,9923
#define SET_MALLOC_HUNC 342,10224
typedef struct st_rep_set 344,10252
} REP_SET;351,10516
typedef struct st_rep_sets 353,10528
} REP_SETS;360,10751
typedef struct st_found_set 362,10764
} FOUND_SET;365,10835
typedef struct st_follow 367,10849
} FOLLOWS;371,10920
static uint found_sets=392,11712
REPLACE *init_replace(init_replace397,11791
static int init_sets(678,19426
static void make_sets_invisible(696,19911
static REP_SET *make_new_set(make_new_set703,20038
static void free_last_set(740,21076
static void free_sets(747,21167
static void set_bit(754,21304
static void clear_bit(760,21417
static void or_bits(767,21537
static void copy_bits(775,21687
static int cmp_bits(781,21834
static int get_next_bit(790,22020
static int find_set(815,22585
static int find_found(836,23176
static uint start_at_word(851,23628
static uint end_of_word(856,23749
static uint replace_len(865,23931
uint replace_strings(881,24120
static char *buffer;buffer926,25237
static int bufbytes;927,25301
static int bufread,928,25360
static int bufread,my_eof;928,25360
static uint bufalloc;929,25435
static char *out_buff;out_buff930,25457
static uint out_length;931,25480
static int initialize_buffer(933,25505
static void reset_buffer(946,25785
static void free_buffer(951,25838
static int fill_buffer_retaining(964,26107
static int convert_pipe(1008,27006
static int convert_file(1050,28008

extra/resolve_stack_dump.c,968
#define DONT_USE_RAID21,884
#define INIT_SYM_TABLE 30,1062
#define INC_SYM_TABLE 31,1091
#define MAX_SYM_SIZE 32,1119
#define DUMP_VERSION 33,1146
#define HEX_INVALID 34,1173
typedef ulong my_long_addr_t 36,1206
typedef struct sym_entry40,1318
} SYM_ENTRY;44,1389
static char* dump_fname 47,1404
static DYNAMIC_ARRAY sym_table;48,1449
static FILE* fp_dump,49,1527
static FILE* fp_dump, *fp_sym fp_sym49,1527
static struct my_option my_long_options[my_long_options51,1573
static void print_version(68,2223
static void usage(74,2384
static void die(92,3007
get_one_option(105,3228
static int parse_args(120,3479
static void open_files(158,4126
static uchar hex_val(175,4623
static my_long_addr_t read_addr(186,4821
static int init_sym_entry(199,5030
static void init_sym_table(220,5516
static void clean_up(239,6003
static void verify_sort(244,6061
static SYM_ENTRY* resolve_addr(261,6420
static void do_resolve(282,6782
int main(311,7269

extra/resolveip.c,265
#define RESOLVE_VERSION 19,800
static my_bool silent;39,1256
static struct my_option my_long_options[my_long_options41,1280
static void print_version(55,1807
static void usage(62,1939
get_one_option(74,2383
static int get_options(89,2712
int main(106,2965

heap/_check.c,63
int heap_check_heap(40,1212
static int check_one_key(92,2475

heap/_rectest.c,24
int _hp_rectest(22,906

heap/hp_block.c,120
byte *_hp_find_block(_hp_find_block23,921
int _hp_get_new_block(40,1378
byte *_hp_free_level(_hp_free_level87,2620

heap/hp_clear.c,48
void heap_clear(25,954
void _hp_clear(30,1012

heap/hp_close.c,46
int heap_close(24,919
int _hp_close(35,1116

heap/hp_create.c,78
int heap_create(25,928
int heap_delete_table(43,1256
void _hp_free(67,1678

heap/hp_delete.c,52
int heap_delete(21,853
int _hp_delete_key(65,2007

heap/hp_extra.c,24
int heap_extra(26,1033

heap/hp_hash.c,374
byte *_hp_search(_hp_search26,1021
byte *_hp_search_next(_hp_search_next105,3088
ulong _hp_mask(127,3604
void _hp_movelink(136,3826
ulong _hp_hashnr(152,4117
ulong _hp_rec_hashnr(194,4987
ulong _hp_hashnr(248,6325
ulong _hp_rec_hashnr(289,7058
int _hp_rec_key_cmp(330,7824
int _hp_key_cmp(360,8492
void _hp_make_key(393,9141
my_bool hp_if_null_in_key(414,9588

heap/hp_info.c,98
byte *heap_position(heap_position22,850
ulong heap_position_old(36,1104
int heap_info(47,1386

heap/hp_open.c,131
HP_INFO *heap_open(heap_open29,1035
HP_SHARE *_hp_find_named_heap(_hp_find_named_heap141,4418
static void init_block(161,4821

heap/hp_panic.c,23
int heap_panic(22,888

heap/hp_rename.c,24
int heap_rename(23,831

heap/hp_rfirst.c,24
int heap_rfirst(21,853

heap/hp_rkey.c,46
int heap_rkey(19,807
gptr heap_find(48,1523

heap/hp_rlast.c,23
int heap_rlast(22,855

heap/hp_rnext.c,23
int heap_rnext(21,849

heap/hp_rprev.c,23
int heap_rprev(22,841

heap/hp_rrnd.c,49
int heap_rrnd(28,984
int heap_rrnd_old(63,1945

heap/hp_rsame.c,24
int heap_rsame(29,1097

heap/hp_scan.c,50
int heap_scan_init(28,969
int heap_scan(38,1190

heap/hp_static.c,44
LIST *heap_open_list=heap_open_list26,932

heap/hp_test1.c,76
static int flag=30,1108
int main(32,1161
static int get_options(163,4333

heap/hp_test2.c,464
#define USE_MY_FUNC20,886
#undef DBUG_OFF23,929
#define SAFEMALLOC26,971
#define MAX_RECORDS 32,1073
#define MAX_KEYS 33,1100
static uint flag=39,1244
static uint keys=40,1307
static uint16 key1[key141,1334
static my_bool key3[key342,1360
static int reclength=43,1394
int main(52,1587
static int get_options(603,15429
static int rnd(645,16356
static sig_handler endprog(651,16455
static int calc_check(665,16693
static void make_record(673,16830

heap/hp_update.c,24
int heap_update(21,853

heap/hp_write.c,280
#define LOWFIND 24,886
#define LOWUSED 25,904
#define HIGHFIND 26,922
#define HIGHUSED 27,941
int heap_write(33,1108
static byte *next_free_record_pos(next_free_record_pos88,2354
int _hp_write_key(124,3293
static HASH_INFO *_hp_find_free_hash(_hp_find_free_hash266,6732

isam/_cache.c,91
#define READING_NEXT	22,924
#define READING_HEADER	23,947
int _nisam_read_cache(29,1136

isam/_dbug.c,30
void _nisam_print_key(23,905

isam/_dynrec.c,1003
static char zero_string[zero_string22,911
#undef my_alloca37,1507
#undef my_afree38,1524
#define my_alloca(39,1540
#define my_afree(40,1583
int _nisam_write_dynamic_record(45,1670
int _nisam_update_dynamic_record(51,1867
int _nisam_write_blob_record(57,2075
int _nisam_update_blob_record(78,2654
int _nisam_delete_dynamic_record(99,3260
static int write_dynamic_record(107,3401
static int _nisam_find_writepos(133,3941
int _nisam_write_part_record(179,5271
static int update_dynamic_record(320,9298
static int delete_dynamic_record(366,10577
uint _nisam_rec_pack(402,11653
my_bool _nisam_rec_check(509,14193
uint _nisam_rec_unpack(612,16456
uint _calc_total_blob_length(725,19745
uint _calc_blob_length(739,20050
int _nisam_read_dynamic_record(771,20597
byte *fix_rec_buff_for_blob(fix_rec_buff_for_blob842,22523
int _nisam_cmp_dynamic_record(863,23131
static int _nisam_cmp_buffer(944,25155
int _nisam_read_rnd_dynamic_record(971,25845
uint _nisam_get_block_info(1118,29712

isam/_key.c,145
uint _nisam_make_key(28,1054
uint _nisam_pack_key(112,3233
static void _nisam_put_key_in_record(184,4965
int _nisam_read_key_record(224,5947

isam/_locking.c,131
int nisam_lock_database(31,1100
int _nisam_readinfo(216,5619
int _nisam_writeinfo(271,6966
int _nisam_test_if_changed(322,8247

isam/_packrec.c,1943
#define IS_CHAR 21,847
#define BITS_SAVED 24,940
#define MAX_QUICK_TABLE_BITS 25,962
#define BITS_SAVED 27,1038
#define MAX_QUICK_TABLE_BITS 28,1060
#define get_bit(31,1099
#define skipp_to_next_byte(35,1313
#define get_bits(36,1361
#define decode_bytes_test_bit(38,1505
static uint mask[mask103,4230
my_bool _nisam_read_pack_info(121,4776
static void read_huff_table(250,8965
static void make_quick_table(315,10727
static void fill_quick_table(344,11542
static uint copy_decode_table(354,11775
static uint find_longest_bitstream(382,12369
int _nisam_read_pack_record(400,12763
int _nisam_pack_rec_unpack(426,13421
static void (*get_unpack_function(get_unpack_function456,14295
static void uf_zerofill_skipp_zero(504,15706
static void uf_skipp_zero(521,16147
static void uf_space_normal(529,16347
static void uf_space_endspace_selected(537,16546
static void uf_endspace_selected(560,17060
static void uf_space_endspace(578,17487
static void uf_endspace(596,17908
static void uf_space_prespace_selected(610,18234
static void uf_prespace_selected(634,18741
static void uf_space_prespace(653,19161
static void uf_prespace(671,19574
static void uf_zerofill_normal(684,19889
static void uf_constant(696,20255
static void uf_intervall(703,20432
static void uf_zero(713,20707
static void decode_bytes(725,20958
static void decode_bytes(789,22559
static uint decode_pos(882,25025
int _nisam_read_rnd_pack_record(896,25272
uint _nisam_pack_get_block_info(958,26856
static void init_bit_buffer(992,27598
static uint fill_and_get_bits(1000,27843
static void fill_buffer(1013,28244
static uint max_bit(1049,29413
#define MAP_NORESERVE 1071,29973
#define MAP_FAILED 1074,30039
my_bool _nisam_memmap_file(1077,30069
void _nisam_unmap_file(1109,30937
static void _nisam_mempack_get_block_info(1118,31124
static int _nisam_read_mempack_record(1130,31427
static int _nisam_read_rnd_mempack_record(1148,31951

isam/_page.c,146
uchar *_nisam_fetch_keypage(_nisam_fetch_keypage26,920
int _nisam_write_keypage(58,1702
int _nisam_dispose(94,2810
ulong _nisam_new(111,3339

isam/_search.c,602
#define CMP(22,902
int _nisam_check_index(26,968
int _nisam_search(52,1737
int _nisam_bin_search(152,4855
int _nisam_seq_search(193,6056
ulong _nisam_kpos(225,7004
void _nisam_kpointer(244,7388
ulong _nisam_dpos(258,7747
void _nisam_dpointer(282,8307
int _nisam_key_cmp(304,8940
uint _nisam_get_key(625,17676
uint _nisam_get_static_key(677,19013
uchar *_nisam_get_last_key(_nisam_get_last_key689,19422
uint _nisam_keylength(717,20104
uchar *_nisam_move_key(_nisam_move_key739,20581
int _nisam_search_next(750,20895
int _nisam_search_first(818,23174
int _nisam_search_last(856,24223

isam/_statrec.c,243
int _nisam_write_static_record(22,857
int _nisam_update_static_record(73,2448
int _nisam_delete_static_record(82,2743
int _nisam_cmp_static_record(98,3240
int _nisam_read_static_record(138,4468
int _nisam_read_rnd_static_record(169,5351

isam/changed.c,29
int nisam_is_changed(23,914

isam/close.c,24
int nisam_close(21,836

isam/create.c,26
int nisam_create(34,1173

isam/delete.c,178
int nisam_delete(36,1426
int _nisam_ck_delete(101,3171
static int d_search(156,4519
static int del(248,7236
static int underflow(338,10297
static uint remove_key(553,18621

isam/extra.c,25
int nisam_extra(32,1120

isam/info.c,53
ulong nisam_position(24,911
int nisam_info(32,1093

isam/isamchk.c,4198
#define T_VERBOSE	32,1091
#define T_SILENT	33,1111
#define T_DESCRIPT	34,1130
#define T_EXTEND	35,1151
#define T_INFO	36,1170
#define T_REP	37,1189
#define T_OPT	38,1207
#define T_FORCE_CREATE	39,1251
#define T_WRITE_LOOP	40,1278
#define T_UNPACK	41,1303
#define T_STATISTICS	42,1324
#define T_VERY_SILENT	43,1350
#define T_SORT_RECORDS	44,1377
#define T_SORT_INDEX	45,1405
#define T_WAIT_FOREVER	46,1431
#define T_REP_BY_SORT	47,1460
#define O_NEW_INDEX	50,1491
#define O_NEW_DATA	51,1541
#define USE_BUFFER_INIT	54,1606
#define READ_BUFFER_INIT	55,1642
#define SORT_BUFFER_INIT	56,1698
#define MIN_SORT_BUFFER	57,1755
#define USE_BUFFER_INIT	59,1812
#define READ_BUFFER_INIT	60,1886
#define SORT_BUFFER_INIT	61,1940
#define MIN_SORT_BUFFER	62,1995
#define NEED_MEM	65,2051
#define MAXERR	66,2123
#define BUFFERS_WHEN_SORTING	67,2143
#define WRITE_COUNT	68,2206
#define INDEX_TMP_EXT	69,2249
#define DATA_TMP_EXT	70,2279
#define MYF_RW	71,2308
#define UPDATE_TIME	73,2364
#define UPDATE_STAT	74,2387
#define UPDATE_SORT	75,2410
typedef struct st_isam_sort_key_blocks 77,2434
} ISAM_SORT_KEY_BLOCKS;82,2599
typedef struct st_isam_sort_info 84,2624
} ISAM_SORT_INFO;95,2972
enum ic_options 97,2991
enum ic_options {OPT_CHARSETS_DIR_IC=OPT_CHARSETS_DIR_IC97,2991
enum ic_options {OPT_CHARSETS_DIR_IC=256, OPT_KEY_BUFFER_SIZE,97,2991
		 OPT_READ_BUFFER_SIZE,98,3054
		 OPT_READ_BUFFER_SIZE, OPT_WRITE_BUFFER_SIZE,98,3054
		 OPT_SORT_BUFFER_SIZE,99,3102
		 OPT_SORT_BUFFER_SIZE, OPT_SORT_KEY_BLOCKS,99,3102
		 OPT_DECODE_BITS}OPT_DECODE_BITS100,3148
static ulong	use_buffers=102,3170
static uint testflag=104,3304
static my_bool rep_quick=106,3415
static uint opt_sort_key=107,3444
static ulong keydata=108,3515
static ulong new_file_pos=109,3564
static ulong total_records=110,3641
static ulong search_after_block=111,3687
static byte *record_buff;record_buff112,3733
static char **defaults_alloc;defaults_alloc113,3759
static const char *type_names[type_names114,3789
static char temp_filename[temp_filename125,4164
static char temp_filename[FN_REFLEN], *isam_file_name,isam_file_name125,4164
static char temp_filename[FN_REFLEN], *isam_file_name, *default_charset;default_charset125,4164
static IO_CACHE read_cache;126,4238
static ISAM_SORT_INFO sort_info;127,4266
static int tmpfile_createflag=128,4299
static const char *load_default_groups[load_default_groups130,4357
int main(193,7101
static struct my_option my_long_options[my_long_options241,8343
static void print_version(336,13606
static void usage(342,13726
static int nisamchk(357,14251
get_one_option(583,21698
static void get_options(658,23346
static int chk_del(693,24099
static int check_k_link(778,26328
static int chk_size(814,27302
static int chk_key(881,29469
static int chk_index(970,32643
static ulong calc_checksum(1082,36117
static uint isam_key_length(1107,36480
static int chk_data_link(1124,36871
static int rep(1441,46327
static int writekeys(1622,51863
static void descript(1653,52575
static int movepoint(1825,57931
static void lock_memory(1872,59162
static int flush_blocks(1887,59497
static int sort_records(1902,59765
static int sort_record_index(2049,63927
static int sort_index(2137,66131
static int sort_one_index(2208,68187
static int change_to_newfile(2278,69965
static int lock_file(2292,70378
static int filecopy(2316,70961
static int rep_by_sort(2354,71975
static int sort_key_read(2564,79019
static int sort_get_next_record(2589,79625
static int sort_write_record(2849,87123
static int sort_key_cmp(2930,89543
static int sort_key_write(2938,89768
static ulong get_record_for_key(2972,90786
static int sort_insert_key(2980,90999
static int sort_delete_record(3051,93212
static int flush_pending_blocks(3105,94697
static ISAM_SORT_KEY_BLOCKS *alloc_key_blocks(alloc_key_blocks3139,95735
static void print_info(3164,96340
static void print_warning(3177,96535
void print_error(3199,97012
static int test_if_almost_full(3222,97538
static int recreate_database(3242,98190
static void save_integer(3335,101274
static int write_data_suffix(3349,101619
static int update_state_info(3369,102080

isam/isamlog.c,954
#define USE_MY_FUNC20,836
#define FILENAME(30,982
struct isamlog_file_info 32,1034
struct test_if_open_param 41,1188
struct st_access_param46,1252
#define NO_FILEPOS 52,1338
static uint verbose=73,2364
static my_string log_filename=75,2481
static ulong com_count[com_count76,2560
static ulong com_count[10][3],number_of_commands=76,2560
static const char *command_name[command_name78,2699
int main(82,2811
static void get_options(130,4201
static int examine_log(297,7494
static int read_string(655,17922
static int file_info_compare(674,18322
static int test_if_open 687,18638
static void fix_blob_pointers(697,18891
static uint set_maximum_open_files(712,19271
static int test_when_accessed 747,20324
static void file_info_free(760,20657
static int close_some_file(777,21008
static int reopen_closed_file(795,21452
static int find_record_with_key(813,21920
static void printf_log(833,22386
static bool cmp_filename(848,22723

isam/log.c,213
#undef GETPID32,1044
#define GETPID(33,1058
#define GETPID(35,1133
static int log_type=40,1236
int nisam_log(42,1260
void _nisam_log(72,1877
void _nisam_log_command(95,2594
void _nisam_log_record(118,3319

isam/open.c,209
#define get_next_element(34,1116
static N_INFO *test_if_reopen(test_if_reopen42,1484
N_INFO *nisam_open(nisam_open67,2258
static void setup_functions(405,12438
static void setup_key_functions(445,13685

isam/pack_isam.c,3037
#define USE_MY_FUNC	20,801
#define __GNU_LIBRARY__	31,1009
#define BITS_SAVED 36,1119
#define BITS_SAVED 38,1147
#define IS_OFFSET 41,1177
#define HEAD_LENGTH	42,1246
#define ALLOWED_JOIN_DIFF	43,1269
#define DATA_TMP_EXT	45,1333
#define OLD_EXT	46,1362
#define WRITE_COUNT	47,1387
static double ulonglong2double(50,1446
#define my_off_t2double(59,1640
#define my_off_t2double(61,1693
struct st_file_buffer 65,1773
typedef struct st_huff_counts 76,1936
} HUFF_COUNTS;89,2368
typedef struct st_huff_element HUFF_ELEMENT;91,2384
struct st_huff_element 93,2430
  union un_element 95,2473
    struct st_nod 96,2494
    struct st_leaf 99,2558
typedef struct st_huff_tree 107,2677
} HUFF_TREE;117,2953
typedef struct st_isam_mrg 120,2968
} MRG_INFO;127,3168
static int error_on_write=185,5895
static my_bool backup,187,6003
static my_bool backup, opt_wait;187,6003
static int tmpfile_createflag=188,6036
static uint tree_buff_length=189,6093
static char tmp_dir[tmp_dir190,6166
static my_off_t intervall_length;191,6214
static ulong  crc;192,6248
static struct st_file_buffer file_buffer;193,6267
static QUEUE queue;194,6309
static HUFF_COUNTS *global_count;global_count195,6329
static char zero_string[zero_string196,6363
static const char *load_default_groups[load_default_groups197,6424
int main(201,6511
static struct my_option my_long_options[my_long_options244,7449
static void print_version(279,9167
static void usage(284,9284
get_one_option(304,9987
static void get_options(352,10917
static N_INFO *open_isam_file(open_isam_file377,11301
static bool open_isam_files(421,12547
static int compress(462,13601
static HUFF_COUNTS *init_huff_count(init_huff_count670,19524
static void free_counts_and_tree_and_queue(703,20531
static int get_statistic(736,21323
static int compare_huff_elements(868,24763
static void check_counts(878,25099
test_space_compress(1028,29983
static HUFF_TREE* make_huff_trees(1095,31883
static int make_huff_tree(1121,32522
static int compare_tree(1247,35679
static int save_counts_in_queue(1258,35966
static my_off_t calc_packed_length(1275,36435
static uint join_same_trees(1324,37692
static int make_huff_decode_table(1370,38966
static void make_traverse_code_tree(1391,39512
static int write_header(1416,40131
static void write_field_info(1442,40977
static my_off_t write_huff_tree(1466,41629
static uint *make_offset_code_tree(make_offset_code_tree1552,44246
static uint max_bit(1585,45071
static int compress_isam_file(1595,45193
static char *make_new_name(make_new_name1805,51092
static char *make_old_name(make_old_name1810,51215
static void init_file_buffer(1817,51372
static int flush_buffer(1839,51856
static void end_file_buffer(1855,52306
static void write_bits 1862,52432
static void flush_bits 1905,53550
static void save_integer(1924,53914
static void save_state(1941,54466
static int save_state_mrg(1970,55440
static void mrg_reset(2000,56347
static int mrg_rrnd(2009,56487
static int mrg_close(2048,57447

isam/panic.c,25
int nisam_panic(27,1213

isam/range.c,155
ulong nisam_records_in_range(36,1403
static ulong _nisam_record_pos(70,2534
static double _nisam_search_pos(103,3675
static uint _nisam_keynr(164,5467

isam/rfirst.c,26
int nisam_rfirst(28,1131

isam/rkey.c,23
int nisam_rkey(25,948

isam/rlast.c,25
int nisam_rlast(28,1129

isam/rnext.c,25
int nisam_rnext(28,1121

isam/rprev.c,25
int nisam_rprev(28,1131

isam/rrnd.c,24
int nisam_rrnd(31,1074

isam/rsame.c,25
int nisam_rsame(28,1024

isam/rsamepos.c,34
int nisam_rsame_with_pos(31,1098

isam/sort.c,627
#define MERGEBUFF 32,1079
#define MERGEBUFF2 33,1100
#define MIN_SORT_MEMORY 34,1122
#define MYF_RW	35,1169
typedef struct st_buffpek 37,1225
} BUFFPEK;43,1559
int _create_index_by_sort(78,2833
static ulong NEAR_F find_all_keys(184,5518
static int NEAR_F write_keys(225,6575
static int NEAR_F write_index(250,7202
static int NEAR_F merge_many_buff(268,7613
static uint NEAR_F read_to_buffer(320,8938
static int NEAR_F merge_buffers(346,9634
static int NEAR_F merge_index(485,12804
static char **make_char_array(make_char_array503,13213
static FILE *opentemp(opentemp525,13724
static void closetemp(547,14295

isam/static.c,379
LIST	*nisam_open_list=nisam_open_list26,932
uchar	NEAR nisam_file_magic[nisam_file_magic27,957
uchar	NEAR nisam_pack_file_magic[nisam_pack_file_magic29,1034
my_string    nisam_log_filename=31,1116
File	nisam_log_file=32,1169
uint	nisam_quick_table_bits=33,1194
uint	nisam_block_size=34,1225
my_bool nisam_flush=35,1274
uint NEAR nisam_read_vec[nisam_read_vec40,1413

isam/test1.c,87
static int rec_pointer_size=21,857
int main(24,970
static void get_options(146,4467

isam/test2.c,880
#define USE_MY_FUNC20,886
#undef DBUG_OFF23,929
#define SAFEMALLOC26,971
#define STANDAR_LENGTH 31,1020
#define NISAM_KEYS 32,1046
#define labs(34,1105
static	int verbose=44,1427
static uint keys=47,1604
static uint use_blob=48,1645
static uint16 key1[key149,1669
static uint16 key1[1000],key3[key349,1669
static char record[record50,1706
static char record[300],record2[record250,1706
static char record[300],record2[300],key[key50,1706
static char record[300],record2[300],key[100],key2[key250,1706
	    read_record[read_record51,1763
	    read_record[300],read_record2[read_record251,1763
	    read_record[300],read_record2[300],read_record3[read_record351,1763
int main(56,1846
static void get_options(693,21289
static uint rnd(784,23498
static void fix_length(792,23643
static void put_blob_in_record(803,23920
static void copy_key(831,24448

isam/test3.c,444
# define WEXITSTATUS(27,944
# define WIFEXITED(30,1028
#define rnd(35,1118
#define rnd_init(36,1149
#define rnd(38,1186
#define rnd_init(39,1216
const char *filename=filename43,1256
uint tests=44,1291
struct record 51,1533
} record;55,1593
int main(58,1605
static void get_options(113,2990
void start_test(160,3962
int test_read(222,5469
int test_rrnd(290,6767
int test_write(338,7753
int test_update(394,8944
main(487,10989

isam/update.c,25
int nisam_update(26,954

isam/write.c,396
int nisam_write(36,1288
int _nisam_ck_write(118,3598
int _nisam_enlarge_root(133,3996
static int w_search(161,5024
int _nisam_insert(220,6908
int _nisam_splitt_page(286,9234
uint _nisam_get_pack_key_length(339,11033
_nisam_get_pack_key_length(461,14128
void _nisam_store_key(627,18901
uchar *_nisam_find_half_pos(_nisam_find_half_pos675,20339
static int _nisam_balance_page(707,21274

libmysql/conf_to_src.c,385
#define CHARSETS_SUBDIR 25,915
#define CTYPE_TABLE_SIZE 26,960
#define TO_LOWER_TABLE_SIZE 27,994
#define TO_UPPER_TABLE_SIZE 28,1028
#define SORT_ORDER_TABLE_SIZE 29,1062
#define ROW_LEN 30,1096
char *prog;prog34,1151
char buf[buf35,1163
char buf[1024], *p,p35,1163
char buf[1024], *p, *endptr;endptr35,1163
main(38,1197
print_array(67,1760
print_arrays_for(115,2661

libmysql/errmsg.c,178
const char *client_errors[client_errors25,931
const char *client_errors[client_errors61,2386
const char *client_errors[client_errors95,3885
void init_client_errs(130,5167

libmysql/get_password.c,351
#undef HAVE_GETPASS28,1012
#define TERMIO	40,1302
#define TERMIO	44,1405
#define TERMIO	47,1459
#define getpass(62,1784
#undef _getch69,1980
#undef _cputs70,1994
#define _getch 71,2008
#define _cputs(72,2036
char *get_tty_password(get_tty_password75,2075
static void get_password(118,2952
char *get_tty_password(get_tty_password159,3658

libmysql/libmysql.c,4818
#define INADDR_NONE	59,1684
static my_bool	mysql_client_init=62,1715
uint		mysql_port=63,1751
my_string	mysql_unix_port=64,1771
ulong 		net_buffer_length=65,1800
ulong		max_allowed_packet=66,1832
ulong		net_read_timeout=67,1878
ulong		net_write_timeout=68,1929
#define CLIENT_CAPABILITIES	70,1982
#define CONNECT_TIMEOUT 73,2090
#define CONNECT_TIMEOUT 75,2123
#define perror(80,2259
#define SOCKET_ERROR 83,2302
static my_bool org_my_init_done=99,2941
int STDCALL mysql_server_init(101,2977
void STDCALL mysql_server_end(108,3174
my_bool STDCALL mysql_thread_init(124,3487
void STDCALL mysql_thread_end(133,3598
#define init_sigpipe_variables 146,3895
#define set_sigpipe(147,3973
#define reset_sigpipe(148,4106
#define init_sigpipe_variables150,4227
#define set_sigpipe(151,4258
#define reset_sigpipe(152,4285
int my_connect(173,5051
static int wait_for_data(218,6234
HANDLE create_named_pipe(315,8879
net_safe_read(390,11241
net_field_length(439,12492
net_field_length_ll(469,13012
static void free_rows(501,13589
simple_command(512,13724
static void free_old_query(572,15285
static void read_user_name(591,15799
static void read_user_name(599,16012
static void read_user_name(629,16666
static my_bool is_NT(638,16850
append_wild(650,17019
mysql_debug(676,17627
pipe_sig_handler(715,18651
end_server(729,19020
mysql_free_result(748,19419
static const char *default_options[default_options782,20395
static TYPELIB option_types=794,20873
static void mysql_read_default_options(797,20974
unpack_fields(965,25622
static MYSQL_DATA *read_rows(read_rows1008,26875
read_one_row(1100,29223
int STDCALL mysql_master_query(1142,30328
int STDCALL mysql_master_send_query(1151,30577
int STDCALL mysql_slave_query(1164,30969
int STDCALL mysql_slave_send_query(1173,31214
void STDCALL mysql_enable_rpl_parse(1197,32013
void STDCALL mysql_disable_rpl_parse(1202,32100
int STDCALL mysql_rpl_parse_enabled(1208,32228
void STDCALL mysql_enable_reads_from_master(1214,32358
void STDCALL mysql_disable_reads_from_master(1219,32459
int STDCALL mysql_reads_from_master_enabled(1225,32607
static void expand_error(1237,32848
static int get_master(1254,33340
static int get_slaves_from_master(1274,33826
int STDCALL mysql_rpl_probe(1341,35100
STDCALL mysql_rpl_query_type(1402,36947
mysql_init(1439,38009
int mysql_once_init(1488,39090
#define strdup_if_not_null(1543,40381
mysql_ssl_set(1546,40466
mysql_ssl_free(1570,41377
mysql_connect(1597,42317
static int check_license(1628,43065
} gethostbyname_buff;1674,44326
mysql_real_connect(1683,44480
static void mysql_fix_pointers(2141,58567
static my_bool mysql_reconnect(2159,59033
my_bool	STDCALL mysql_change_user(2200,60362
mysql_select_db(2234,61344
mysql_close(2254,61947
mysql_query(2316,64106
static MYSQL* spawn_init(2322,64219
STDCALL mysql_set_master(2358,65201
STDCALL mysql_add_slave(2370,65519
mysql_send_query(2391,66006
int STDCALL mysql_read_query_result(2414,66682
mysql_real_query(2469,68415
send_file_to_server(2482,68740
mysql_store_result(2546,70748
mysql_use_result(2602,72639
mysql_fetch_field(2646,73929
mysql_fetch_row(2659,74304
mysql_fetch_lengths(2702,75470
mysql_data_seek(2736,76296
mysql_row_seek(2753,76960
mysql_field_seek(2763,77179
mysql_list_dbs(2775,77571
mysql_list_tables(2793,78115
mysql_list_fields(2813,78719
mysql_list_processes(2849,79767
mysql_create_db(2876,80515
mysql_drop_db(2885,80726
mysql_shutdown(2895,80937
mysql_refresh(2903,81073
mysql_kill(2912,81274
mysql_dump_debug_info(2922,81459
mysql_stat(2929,81614
mysql_ping(2946,82066
mysql_get_server_info(2954,82199
mysql_get_host_info(2961,82303
mysql_get_proto_info(2968,82384
mysql_get_client_info(2974,82481
ulong STDCALL mysql_get_client_version(2979,82553
mysql_options(2986,82643
my_ulonglong STDCALL mysql_num_rows(3038,84511
unsigned int STDCALL mysql_num_fields(3043,84593
my_bool STDCALL mysql_eof(3048,84679
MYSQL_FIELD * STDCALL mysql_fetch_field_direct(3053,84745
MYSQL_FIELD * STDCALL mysql_fetch_fields(3058,84860
MYSQL_ROW_OFFSET STDCALL mysql_row_tell(3063,84946
MYSQL_FIELD_OFFSET STDCALL mysql_field_tell(3068,85034
unsigned int STDCALL mysql_field_count(3075,85143
my_ulonglong STDCALL mysql_affected_rows(3080,85245
my_ulonglong STDCALL mysql_insert_id(3085,85351
uint STDCALL mysql_errno(3090,85449
const char * STDCALL mysql_error(3095,85525
const char *STDCALL mysql_info(3100,85609
ulong STDCALL mysql_thread_id(3105,85681
const char * STDCALL mysql_character_set_name(3110,85759
uint STDCALL mysql_thread_safe(3116,85856
void my_net_local_init(3133,86217
mysql_escape_string(3149,86676
mysql_real_escape_string(3155,86826
mysql_sub_escape_string(3163,86994
mysql_odbc_escape_string(3222,88152
myodbc_remove_escape(3293,89591

libmysql/manager.c,331
#define INADDR_NONE	57,1556
#define RES_BUF_SHIFT 60,1587
#define NET_BUF_SIZE 61,1611
MYSQL_MANAGER*  STDCALL mysql_manager_init(63,1639
MYSQL_MANAGER*  STDCALL mysql_manager_connect(85,2163
void STDCALL mysql_manager_close(201,5175
int STDCALL mysql_manager_command(215,5534
int STDCALL mysql_manager_fetch_line(231,5872

libmysql/password.c,339
void randominit(43,1797
static void old_randominit(54,2170
double my_rnd(62,2438
void hash_password(69,2694
void make_scrambled_password(87,3213
static inline unsigned int char_val(94,3387
void get_salt_from_password(106,3646
void make_password_from_salt(123,3919
char *scramble(scramble134,4175
my_bool check_scramble(163,4934

libmysql_r/conf_to_src.c,385
#define CHARSETS_SUBDIR 25,915
#define CTYPE_TABLE_SIZE 26,960
#define TO_LOWER_TABLE_SIZE 27,994
#define TO_UPPER_TABLE_SIZE 28,1028
#define SORT_ORDER_TABLE_SIZE 29,1062
#define ROW_LEN 30,1096
char *prog;prog34,1151
char buf[buf35,1163
char buf[1024], *p,p35,1163
char buf[1024], *p, *endptr;endptr35,1163
main(38,1197
print_array(67,1760
print_arrays_for(115,2661

libmysql_r/errmsg.c,178
const char *client_errors[client_errors25,931
const char *client_errors[client_errors61,2386
const char *client_errors[client_errors95,3885
void init_client_errs(130,5167

libmysql_r/get_password.c,351
#undef HAVE_GETPASS28,1012
#define TERMIO	40,1302
#define TERMIO	44,1405
#define TERMIO	47,1459
#define getpass(62,1784
#undef _getch69,1980
#undef _cputs70,1994
#define _getch 71,2008
#define _cputs(72,2036
char *get_tty_password(get_tty_password75,2075
static void get_password(118,2952
char *get_tty_password(get_tty_password159,3658

libmysql_r/libmysql.c,4818
#define INADDR_NONE	59,1684
static my_bool	mysql_client_init=62,1715
uint		mysql_port=63,1751
my_string	mysql_unix_port=64,1771
ulong 		net_buffer_length=65,1800
ulong		max_allowed_packet=66,1832
ulong		net_read_timeout=67,1878
ulong		net_write_timeout=68,1929
#define CLIENT_CAPABILITIES	70,1982
#define CONNECT_TIMEOUT 73,2090
#define CONNECT_TIMEOUT 75,2123
#define perror(80,2259
#define SOCKET_ERROR 83,2302
static my_bool org_my_init_done=99,2941
int STDCALL mysql_server_init(101,2977
void STDCALL mysql_server_end(108,3174
my_bool STDCALL mysql_thread_init(124,3487
void STDCALL mysql_thread_end(133,3598
#define init_sigpipe_variables 146,3895
#define set_sigpipe(147,3973
#define reset_sigpipe(148,4106
#define init_sigpipe_variables150,4227
#define set_sigpipe(151,4258
#define reset_sigpipe(152,4285
int my_connect(173,5051
static int wait_for_data(218,6234
HANDLE create_named_pipe(315,8879
net_safe_read(390,11241
net_field_length(439,12492
net_field_length_ll(469,13012
static void free_rows(501,13589
simple_command(512,13724
static void free_old_query(572,15285
static void read_user_name(591,15799
static void read_user_name(599,16012
static void read_user_name(629,16666
static my_bool is_NT(638,16850
append_wild(650,17019
mysql_debug(676,17627
pipe_sig_handler(715,18651
end_server(729,19020
mysql_free_result(748,19419
static const char *default_options[default_options782,20395
static TYPELIB option_types=794,20873
static void mysql_read_default_options(797,20974
unpack_fields(965,25622
static MYSQL_DATA *read_rows(read_rows1008,26875
read_one_row(1100,29223
int STDCALL mysql_master_query(1142,30328
int STDCALL mysql_master_send_query(1151,30577
int STDCALL mysql_slave_query(1164,30969
int STDCALL mysql_slave_send_query(1173,31214
void STDCALL mysql_enable_rpl_parse(1197,32013
void STDCALL mysql_disable_rpl_parse(1202,32100
int STDCALL mysql_rpl_parse_enabled(1208,32228
void STDCALL mysql_enable_reads_from_master(1214,32358
void STDCALL mysql_disable_reads_from_master(1219,32459
int STDCALL mysql_reads_from_master_enabled(1225,32607
static void expand_error(1237,32848
static int get_master(1254,33340
static int get_slaves_from_master(1274,33826
int STDCALL mysql_rpl_probe(1341,35100
STDCALL mysql_rpl_query_type(1402,36947
mysql_init(1439,38009
int mysql_once_init(1488,39090
#define strdup_if_not_null(1543,40381
mysql_ssl_set(1546,40466
mysql_ssl_free(1570,41377
mysql_connect(1597,42317
static int check_license(1628,43065
} gethostbyname_buff;1674,44326
mysql_real_connect(1683,44480
static void mysql_fix_pointers(2141,58567
static my_bool mysql_reconnect(2159,59033
my_bool	STDCALL mysql_change_user(2200,60362
mysql_select_db(2234,61344
mysql_close(2254,61947
mysql_query(2316,64106
static MYSQL* spawn_init(2322,64219
STDCALL mysql_set_master(2358,65201
STDCALL mysql_add_slave(2370,65519
mysql_send_query(2391,66006
int STDCALL mysql_read_query_result(2414,66682
mysql_real_query(2469,68415
send_file_to_server(2482,68740
mysql_store_result(2546,70748
mysql_use_result(2602,72639
mysql_fetch_field(2646,73929
mysql_fetch_row(2659,74304
mysql_fetch_lengths(2702,75470
mysql_data_seek(2736,76296
mysql_row_seek(2753,76960
mysql_field_seek(2763,77179
mysql_list_dbs(2775,77571
mysql_list_tables(2793,78115
mysql_list_fields(2813,78719
mysql_list_processes(2849,79767
mysql_create_db(2876,80515
mysql_drop_db(2885,80726
mysql_shutdown(2895,80937
mysql_refresh(2903,81073
mysql_kill(2912,81274
mysql_dump_debug_info(2922,81459
mysql_stat(2929,81614
mysql_ping(2946,82066
mysql_get_server_info(2954,82199
mysql_get_host_info(2961,82303
mysql_get_proto_info(2968,82384
mysql_get_client_info(2974,82481
ulong STDCALL mysql_get_client_version(2979,82553
mysql_options(2986,82643
my_ulonglong STDCALL mysql_num_rows(3038,84511
unsigned int STDCALL mysql_num_fields(3043,84593
my_bool STDCALL mysql_eof(3048,84679
MYSQL_FIELD * STDCALL mysql_fetch_field_direct(3053,84745
MYSQL_FIELD * STDCALL mysql_fetch_fields(3058,84860
MYSQL_ROW_OFFSET STDCALL mysql_row_tell(3063,84946
MYSQL_FIELD_OFFSET STDCALL mysql_field_tell(3068,85034
unsigned int STDCALL mysql_field_count(3075,85143
my_ulonglong STDCALL mysql_affected_rows(3080,85245
my_ulonglong STDCALL mysql_insert_id(3085,85351
uint STDCALL mysql_errno(3090,85449
const char * STDCALL mysql_error(3095,85525
const char *STDCALL mysql_info(3100,85609
ulong STDCALL mysql_thread_id(3105,85681
const char * STDCALL mysql_character_set_name(3110,85759
uint STDCALL mysql_thread_safe(3116,85856
void my_net_local_init(3133,86217
mysql_escape_string(3149,86676
mysql_real_escape_string(3155,86826
mysql_sub_escape_string(3163,86994
mysql_odbc_escape_string(3222,88152
myodbc_remove_escape(3293,89591

libmysql_r/manager.c,331
#define INADDR_NONE	57,1556
#define RES_BUF_SHIFT 60,1587
#define NET_BUF_SIZE 61,1611
MYSQL_MANAGER*  STDCALL mysql_manager_init(63,1639
MYSQL_MANAGER*  STDCALL mysql_manager_connect(85,2163
void STDCALL mysql_manager_close(201,5175
int STDCALL mysql_manager_command(215,5534
int STDCALL mysql_manager_fetch_line(231,5872

libmysql_r/password.c,339
void randominit(43,1797
static void old_randominit(54,2170
double my_rnd(62,2438
void hash_password(69,2694
void make_scrambled_password(87,3213
static inline unsigned int char_val(94,3387
void get_salt_from_password(106,3646
void make_password_from_salt(123,3919
char *scramble(scramble134,4175
my_bool check_scramble(163,4934

libmysqld/errmsg.c,178
const char *client_errors[client_errors25,931
const char *client_errors[client_errors61,2386
const char *client_errors[client_errors95,3885
void init_client_errs(130,5167

libmysqld/get_password.c,351
#undef HAVE_GETPASS28,1012
#define TERMIO	40,1302
#define TERMIO	44,1405
#define TERMIO	47,1459
#define getpass(62,1784
#undef _getch69,1980
#undef _cputs70,1994
#define _getch 71,2008
#define _cputs(72,2036
char *get_tty_password(get_tty_password75,2075
static void get_password(118,2952
char *get_tty_password(get_tty_password159,3658

libmysqld/lib_vio.c,642
#define HANDLE 39,1261
struct st_vio42,1291
Vio *vio_new(vio_new61,1870
Vio *vio_new_win32pipe(vio_new_win32pipe78,2232
void vio_delete(85,2299
void vio_reset(98,2521
int vio_errno(107,2746
int vio_read(112,2870
int vio_write(130,3435
int vio_blocking(153,3943
vio_is_blocking(159,4044
int vio_fastsend(164,4089
int vio_keepalive(169,4135
vio_should_retry(176,4215
int vio_close(184,4383
const char *vio_description(vio_description190,4427
enum enum_vio_type vio_type(195,4496
my_socket vio_fd(200,4560
my_bool vio_peer_addr(206,4605
void vio_in_addr(212,4682
my_bool vio_poll_read(216,4734
void vio_timeout(222,4797

libmysqld/libmysqld.c,3068
#define INADDR_NONE	46,1316
static my_bool	mysql_client_init=49,1347
uint		mysql_port=50,1383
my_string	mysql_unix_port=51,1403
#define CLIENT_CAPABILITIES	53,1433
#define ERRNO 56,1565
#define perror(57,1597
#define ERRNO 60,1640
#define SOCKET_ERROR 61,1660
#define closesocket(62,1684
#define init_sigpipe_variables77,2261
#define set_sigpipe(78,2292
#define reset_sigpipe(79,2319
net_safe_read(87,2615
net_field_length(143,3997
net_field_length_ll(173,4517
static void free_rows(205,5094
simple_command(216,5229
static void free_old_query(248,6048
static void read_user_name(265,6489
static void read_user_name(303,7327
static my_bool is_NT(312,7493
append_wild(324,7663
mysql_debug(350,8272
end_server(386,9178
mysql_free_result(401,9441
static const char *default_options[default_options435,10424
static TYPELIB option_types=443,10701
static void mysql_read_default_options(446,10802
unpack_fields(566,13956
static MYSQL_DATA *read_rows(read_rows608,15177
read_one_row(691,17272
mysql_init(730,18338
static void mysqld_once_init(746,18622
mysql_connect(768,19149
mysql_real_connect(791,19653
my_bool	STDCALL mysql_change_user(1025,26719
mysql_select_db(1059,27702
mysql_close(1079,28307
mysql_query(1126,30131
mysql_send_query(1132,30256
mysql_read_query_result(1139,30399
int my_connect(1196,32405
mysql_real_query(1289,35191
send_file_to_server(1301,35513
mysql_store_result(1362,37553
mysql_use_result(1414,39349
mysql_fetch_field(1456,40607
mysql_fetch_row(1469,40983
mysql_fetch_lengths(1510,42088
mysql_data_seek(1544,42914
mysql_row_seek(1561,43581
mysql_field_seek(1571,43800
mysql_list_dbs(1583,44193
mysql_list_tables(1601,44739
mysql_list_fields(1621,45347
mysql_list_processes(1657,46394
mysql_create_db(1683,47118
mysql_drop_db(1692,47329
mysql_shutdown(1701,47533
mysql_refresh(1709,47670
mysql_kill(1718,47871
mysql_dump_debug_info(1728,48056
mysql_stat(1735,48212
mysql_ping(1752,48665
mysql_get_server_info(1760,48799
mysql_get_host_info(1767,48903
mysql_get_proto_info(1774,48984
mysql_get_client_info(1780,49081
mysql_options(1787,49158
my_ulonglong STDCALL mysql_num_rows(1833,50798
unsigned int STDCALL mysql_num_fields(1838,50880
my_bool STDCALL mysql_eof(1843,50966
MYSQL_FIELD * STDCALL mysql_fetch_field_direct(1848,51032
MYSQL_FIELD * STDCALL mysql_fetch_fields(1853,51147
MYSQL_ROWS * STDCALL mysql_row_tell(1858,51233
uint STDCALL mysql_field_tell(1863,51317
unsigned int STDCALL mysql_field_count(1870,51412
my_ulonglong STDCALL mysql_affected_rows(1875,51499
my_ulonglong STDCALL mysql_insert_id(1880,51592
uint STDCALL mysql_errno(1885,51677
const char * STDCALL mysql_error(1890,51755
const char *STDCALL mysql_info(1895,51841
ulong STDCALL mysql_thread_id(1900,51915
const char * STDCALL mysql_character_set_name(1905,51993
uint STDCALL mysql_thread_safe(1911,52090
mysql_escape_string(1931,52558
mysql_real_escape_string(1937,52708
mysql_sub_escape_string(1945,52876
mysql_odbc_escape_string(2004,54034
myodbc_remove_escape(2075,55473

libmysqld/password.c,339
void randominit(43,1797
static void old_randominit(54,2170
double my_rnd(62,2438
void hash_password(69,2694
void make_scrambled_password(87,3213
static inline unsigned int char_val(94,3387
void get_salt_from_password(106,3646
void make_password_from_salt(123,3919
char *scramble(scramble134,4175
my_bool check_scramble(163,4934

libmysqld/stacktrace.c,321
#define PTR_SANE(25,881
char *heap_start;heap_start27,962
void safe_print_str(29,981
#define SIGRETURN_FRAME_COUNT 47,1375
#define MAX_INSTR_IN_FUNC 57,1683
inline uchar** find_prev_fp(59,1717
inline uint32* find_prev_pc(73,1977
void  print_stacktrace(90,2329
void write_core(210,5703
void write_core(217,5854

merge/mrg_close.c,22
int mrg_close(21,836

merge/mrg_create.c,23
int mrg_create(26,987

merge/mrg_delete.c,23
int mrg_delete(21,838

merge/mrg_extra.c,23
int mrg_extra(25,1007

merge/mrg_info.c,49
ulong mrg_position(19,807
int mrg_info(34,1186

merge/mrg_locking.c,30
int mrg_lock_database(23,854

merge/mrg_open.c,37
MRG_INFO *mrg_open(mrg_open33,1073

merge/mrg_panic.c,23
int mrg_panic(27,1213

merge/mrg_rrnd.c,71
int mrg_rrnd(34,1189
static MRG_TABLE *find_table(find_table97,3041

merge/mrg_rsame.c,22
int mrg_rsame(20,808

merge/mrg_static.c,42
LIST	*mrg_open_list=mrg_open_list26,929

merge/mrg_update.c,23
int mrg_update(21,838

myisam/ft_boolean_search.c,1180
#define FT_CORE21,931
static double _wghts[_wghts27,1023
static double *wghts=wghts40,1283
static double _nwghts[_nwghts42,1339
static double *nwghts=nwghts55,1600
#define FTB_FLAG_TRUNC 57,1664
#define FTB_FLAG_YES 58,1739
#define FTB_FLAG_NO 59,1814
#define FTB_FLAG_WONLY 60,1889
typedef struct st_ftb_expr FTB_EXPR;62,1965
struct st_ftb_expr63,2002
typedef struct st_ftb_word78,2495
} FTB_WORD;89,2763
typedef struct st_ft_info91,2776
  enum { UNINITIALIZED,97,2894
  enum { UNINITIALIZED, READY,97,2894
  enum { UNINITIALIZED, READY, INDEX_SEARCH,97,2894
  enum { UNINITIALIZED, READY, INDEX_SEARCH, INDEX_DONE 97,2894
} FTB;105,3120
static int FTB_WORD_cmp(107,3128
static int FTB_WORD_cmp_list(122,3425
static void _ftb_parse_query(132,3740
static int _ftb_no_dupes_cmp(194,5844
static void _ftb_init_index_search(200,6011
FT_INFO * ft_init_boolean_search(304,9241
static int _ftb_strstr(364,11195
static void _ftb_climb_the_tree(388,11712
int ft_boolean_read_next(462,13596
float ft_boolean_find_relevance(565,16692
void ft_boolean_close_search(647,18731
float ft_boolean_get_relevance(658,18928
void ft_boolean_reinit_search(664,19011

myisam/ft_nlq_search.c,592
#define FT_CORE19,864
typedef struct ft_doc_rec24,945
} FT_DOC;28,1011
struct st_ft_info30,1022
typedef struct st_all_in_one39,1149
} ALL_IN_ONE;48,1335
typedef struct st_ft_superdoc50,1350
} FT_SUPERDOC;55,1448
static int FT_SUPERDOC_cmp(57,1464
static int walk_and_match(67,1687
static int walk_and_copy(153,4018
static int FT_DOC_cmp(165,4308
FT_INFO *ft_init_nlq_search(ft_init_nlq_search171,4395
int ft_nlq_read_next(236,6082
float ft_nlq_find_relevance(258,6559
void ft_nlq_close_search(285,7093
float ft_nlq_get_relevance(291,7175
void ft_nlq_reinit_search(297,7281

myisam/ft_parser.c,420
ulong collstat=23,919
typedef struct st_ft_docstat 27,967
} FT_DOCSTAT;36,1130
static int FT_WORD_cmp(38,1145
static int walk_and_copy(44,1335
FT_WORD * ft_linearize(62,1809
#define true_word_char(108,2739
#define misc_word_char(110,2813
#define misc_word_char(112,2857
#define word_char(114,2914
byte ft_get_word(123,3065
byte ft_simple_get_word(185,4889
void ft_parse_init(217,5519
int ft_parse(225,5733

myisam/ft_static.c,464
ulong ft_min_word_len=21,885
ulong ft_max_word_len=22,910
ulong ft_max_word_len_for_sort=23,946
const char *ft_boolean_syntax=ft_boolean_syntax24,981
const MI_KEYSEG ft_keysegs[ft_keysegs26,1032
const struct _ft_vft _ft_vft_nlq 51,1827
const struct _ft_vft _ft_vft_boolean 55,1977
FT_INFO *ft_init_search(ft_init_search63,2271
const char *ft_stopword_file ft_stopword_file70,2478
const char *ft_precompiled_stopwords[ft_precompiled_stopwords71,2512

myisam/ft_stopwords.c,303
typedef struct st_ft_stopwords 21,885
} FT_STOPWORD;24,952
static TREE *stopwords3=stopwords326,968
static int FT_STOPWORD_cmp(28,999
static void FT_STOPWORD_free(36,1223
static int ft_add_stopword(43,1418
int ft_init_stopwords(51,1618
int is_stopword(109,2958
void ft_free_stopwords(118,3095

myisam/ft_update.c,553
#undef set_if_smaller27,1144
#define set_if_smaller(28,1166
void _mi_ft_segiterator_init(31,1297
void _mi_ft_segiterator_dummy_init(39,1523
uint _mi_ft_segiterator(57,1860
uint _mi_ft_parse(91,2754
FT_WORD * _mi_ft_parserecord(106,3129
static int _mi_ft_store(119,3443
static int _mi_ft_erase(133,3761
#define THOSE_TWO_DAMN_KEYS_ARE_REALLY_DIFFERENT 152,4204
#define GEE_THEY_ARE_ABSOLUTELY_IDENTICAL	153,4255
int _mi_ft_cmp(155,4301
int _mi_ft_update(176,4987
int _mi_ft_add(228,6478
int _mi_ft_del(245,6839
uint _ft_make_key(258,7152

myisam/mi_cache.c,28
int _mi_read_cache(39,1510

myisam/mi_changed.c,26
int mi_is_changed(23,916

myisam/mi_check.c,1740
#define my_raid_create(32,1068
#define my_raid_delete(33,1125
static double ulonglong2double(66,2717
#define my_off_t2double(75,2911
#define my_off_t2double(77,2964
void myisamchk_init(81,3058
int chk_status(100,3693
int chk_del(128,4631
static int check_k_link(235,7532
int chk_size(275,8692
int chk_key(348,11227
static int chk_index(530,17774
static ha_checksum calc_checksum(665,22253
static uint isam_key_length(689,22643
int chk_data_link(706,23030
int mi_repair(1133,36066
static int writekeys(1404,44671
int movepoint(1463,46063
void lock_memory(1508,47357
int flush_blocks(1524,47775
int mi_sort_index(1539,48102
static int sort_one_index(1633,51152
int change_to_newfile(1712,53423
int lock_file(1736,54220
int filecopy(1753,54751
int mi_repair_by_sort(1804,56000
int mi_repair_parallel(2169,67826
static int sort_key_read(2558,80870
static int sort_ft_key_read(2586,81712
static int sort_get_next_record(2640,83163
int sort_write_record(3010,94285
static int sort_key_cmp(3116,97617
static int sort_key_write(3125,97869
static my_off_t get_record_for_key(3175,99349
static int sort_insert_key(3184,99567
static int sort_delete_record(3268,102227
int flush_pending_blocks(3325,104060
static SORT_KEY_BLOCKS *alloc_key_blocks(alloc_key_blocks3367,105512
int test_if_almost_full(3392,106162
int recreate_table(3404,106552
int write_data_suffix(3574,112238
int update_state_info(3595,112786
void update_auto_increment_key(3659,114802
void update_key_parts(3716,116533
static ha_checksum mi_byte_checksum(3739,117129
static my_bool mi_too_big_key_for_sort(3758,117765
void mi_disable_non_unique_index(3772,118284
my_bool mi_test_if_sort_rep(3798,118916
set_data_file_type(3821,119444

myisam/mi_checksum.c,72
ha_checksum mi_checksum(21,847
ha_checksum mi_static_checksum(60,1694

myisam/mi_close.c,22
int mi_close(26,1008

myisam/mi_create.c,61
int mi_create(33,1073
uint mi_get_pointer_length(670,20608

myisam/mi_dbug.c,67
void _mi_print_key(23,907
my_bool check_table_is_closed(158,4046

myisam/mi_delete.c,172
int mi_delete(36,1467
int _mi_ck_delete(127,4007
static int d_search(192,5616
static int del(303,8720
static int underflow(405,12139
static uint remove_key(669,21787

myisam/mi_delete_all.c,31
int mi_delete_all_rows(22,913

myisam/mi_delete_table.c,28
int mi_delete_table(26,874

myisam/mi_dynrec.c,1086
static char zero_string[zero_string31,1256
#undef my_alloca46,1866
#undef my_afree47,1883
#define my_alloca(48,1899
#define my_afree(49,1942
int _mi_write_dynamic_record(54,2030
int _mi_update_dynamic_record(60,2223
int _mi_write_blob_record(66,2429
int _mi_update_blob_record(100,3369
int _mi_delete_dynamic_record(132,4193
static int write_dynamic_record(140,4332
static int _mi_find_writepos(166,4875
static bool unlink_deleted_block(227,6624
static int update_backward_delete_link(291,8567
static int delete_dynamic_record(320,9315
int _mi_write_part_record(382,11250
static int update_dynamic_record(571,16676
uint _mi_rec_pack(694,20438
my_bool _mi_rec_check(809,23137
ulong _mi_rec_unpack(925,25734
ulong _my_calc_total_blob_length(1043,29118
ulong _mi_calc_blob_length(1059,29464
void _my_store_blob_length(1077,29762
int _mi_read_dynamic_record(1101,30146
int _mi_cmp_dynamic_unique(1174,32132
int _mi_cmp_dynamic_record(1203,32933
static int _mi_cmp_buffer(1284,34977
int _mi_read_rnd_dynamic_record(1311,35637
uint _mi_get_block_info(1481,40070

myisam/mi_extra.c,22
int mi_extra(45,1377

myisam/mi_info.c,52
my_off_t mi_position(26,945
int mi_status(35,1113

myisam/mi_key.c,195
#define CHECK_KEYS26,930
uint _mi_make_key(35,1092
uint _mi_pack_key(158,3952
static int _mi_put_key_in_record(259,6385
int _mi_read_key_record(372,9023
void update_auto_increment(407,9827

myisam/mi_locking.c,322
int mi_lock_database(31,1102
void mi_get_status(228,6096
void mi_update_status(247,6789
void mi_copy_status(286,8072
my_bool mi_check_status(291,8176
int _mi_readinfo(302,8514
int _mi_writeinfo(340,9518
int _mi_test_if_changed(382,10719
int _mi_mark_file_changed(407,11658
int _mi_decrement_open_count(438,12454

myisam/mi_log.c,241
#undef GETPID	34,1113
#define GETPID(36,1160
#define GETPID(38,1244
static int log_type=43,1349
ulong myisam_pid=44,1372
int mi_log(46,1393
void _myisam_log(78,2089
void _myisam_log_command(102,2829
void _myisam_log_record(126,3578

myisam/mi_open.c,939
#define get_next_element(34,1092
#define disk_pos_assert(38,1191
static MI_INFO *test_if_reopen(test_if_reopen51,1637
MI_INFO *mi_open(mi_open74,2349
byte *mi_alloc_rec_buff(mi_alloc_rec_buff585,19083
ulonglong mi_safe_mul(620,20097
void mi_setup_functions(631,20316
static void setup_key_functions(683,22023
uint mi_state_info_write(727,23475
char *mi_state_info_read(mi_state_info_read791,25808
uint mi_state_info_read_dsk(844,27733
uint mi_base_info_write(867,28367
char *my_n_base_info_read(my_n_base_info_read902,29774
uint mi_keydef_write(946,31410
char *mi_keydef_read(mi_keydef_read961,31898
int mi_keyseg_write(980,32610
char *mi_keyseg_read(mi_keyseg_read1000,33137
uint mi_uniquedef_write(1020,33787
char *mi_uniquedef_read(mi_uniquedef_read1032,34083
uint mi_recinfo_write(1044,34443
char *mi_recinfo_read(mi_recinfo_read1056,34796
int mi_open_datafile(1074,35491
int mi_open_keyfile(1094,36000

myisam/mi_packrec.c,2050
#define IS_CHAR 21,849
#define BITS_SAVED 24,942
#define MAX_QUICK_TABLE_BITS 25,964
#define BITS_SAVED 27,1040
#define MAX_QUICK_TABLE_BITS 28,1062
#define get_bit(31,1101
#define skipp_to_next_byte(35,1321
#define get_bits(36,1369
#define decode_bytes_test_bit(38,1513
static mi_bit_type mask[mask107,4549
my_bool _mi_read_pack_info(125,5102
static void read_huff_table(257,9344
static void make_quick_table(322,11114
static void fill_quick_table(353,11945
static uint copy_decode_table(364,12186
static uint find_longest_bitstream(393,12789
int _mi_read_pack_record(411,13183
int _mi_pack_rec_unpack(436,13851
static void (*get_unpack_function(get_unpack_function465,14722
static void uf_zerofill_skipp_zero(518,16200
static void uf_skipp_zero(531,16510
static void uf_space_normal(540,16721
static void uf_space_endspace_selected(549,16933
static void uf_endspace_selected(573,17464
static void uf_space_endspace(592,17902
static void uf_endspace(611,18338
static void uf_space_prespace_selected(625,18670
static void uf_prespace_selected(650,19194
static void uf_space_prespace(670,19625
static void uf_prespace(689,20053
static void uf_zerofill_normal(703,20377
static void uf_constant(711,20610
static void uf_intervall(719,20796
static void uf_zero(730,21081
static void uf_blob(737,21268
static void uf_varchar(760,21958
static void decode_bytes(777,22368
static void decode_bytes(842,24002
static uint decode_pos(939,26517
int _mi_read_rnd_pack_record(953,26770
uint _mi_pack_get_block_info(1015,28385
static void init_bit_buffer(1086,30203
static uint fill_and_get_bits(1094,30434
static void fill_buffer(1107,30838
static uint max_bit(1143,32010
#define MAP_NORESERVE 1165,32576
#define MAP_FAILED 1168,32642
my_bool _mi_memmap_file(1171,32672
void _mi_unmap_file(1203,33542
static uchar *_mi_mempack_get_block_info(_mi_mempack_get_block_info1211,33711
static int _mi_read_mempack_record(1253,34641
static int _mi_read_rnd_mempack_record(1272,35153
uint save_pack_length(1313,36190

myisam/mi_page.c,134
uchar *_mi_fetch_keypage(_mi_fetch_keypage26,918
int _mi_write_keypage(60,1838
int _mi_dispose(99,3081
my_off_t _mi_new(119,3677

myisam/mi_panic.c,22
int mi_panic(27,1211

myisam/mi_range.c,147
ha_rows mi_records_in_range(36,1408
static ha_rows _mi_record_pos(72,2696
static double _mi_search_pos(109,3883
static uint _mi_keynr(177,5870

myisam/mi_rename.c,22
int mi_rename(26,873

myisam/mi_rfirst.c,22
int mi_rfirst(21,856

myisam/mi_rkey.c,20
int mi_rkey(25,944

myisam/mi_rlast.c,21
int mi_rlast(21,871

myisam/mi_rnext.c,22
int mi_rnext(26,1058

myisam/mi_rnext_same.c,27
int mi_rnext_same(27,1093

myisam/mi_rprev.c,22
int mi_rprev(26,1062

myisam/mi_rrnd.c,21
int mi_rrnd(33,1189

myisam/mi_rsame.c,22
int mi_rsame(29,1027

myisam/mi_rsamepos.c,31
int mi_rsame_with_pos(31,1088

myisam/mi_scan.c,46
int mi_scan_init(21,850
int mi_scan(40,1362

myisam/mi_search.c,1181
int _mi_check_index(28,1084
int _mi_search(57,1952
int _mi_bin_search(175,6058
int _mi_seq_search(217,7453
int _mi_prefix_search(259,8816
my_off_t _mi_kpos(473,14931
void _mi_kpointer(509,15889
my_off_t _mi_dpos(537,16642
my_off_t _mi_rec_pos(567,17822
void _mi_dpointer(625,19348
int _mi_compare_text(656,20199
static int compare_bin(684,20882
#define FCMP(724,21850
int _mi_key_cmp(726,21893
uint _mi_get_static_key(1087,32494
uint _mi_get_pack_key(1099,32887
uint _mi_get_binary_pack_key(1232,36178
uchar *_mi_get_key(_mi_get_key1325,38957
static my_bool _mi_get_prev_key(1359,39906
uchar *_mi_get_last_key(_mi_get_last_key1396,40876
uint _mi_keylength(1435,42011
uint _mi_keylength_part(1470,42845
uchar *_mi_move_key(_mi_move_key1495,43366
int _mi_search_next(1506,43696
int _mi_search_first(1587,46885
int _mi_search_last(1629,48141
_mi_calc_static_key_length(1687,49907
_mi_calc_var_key_length(1700,50353
_mi_calc_var_pack_key_length(1730,51356
_mi_calc_bin_pack_key_length(2012,60318
void _mi_store_static_key(2093,62990
#define store_pack_length(2103,63305
void _mi_store_var_pack_key(2108,63486
void _mi_store_bin_pack_key(2171,65396

myisam/mi_static.c,667
LIST	*myisam_open_list=myisam_open_list26,936
uchar	NEAR myisam_file_magic[myisam_file_magic27,962
uchar	NEAR myisam_pack_file_magic[myisam_pack_file_magic29,1040
my_string myisam_log_filename=31,1123
File	myisam_log_file=32,1175
uint	myisam_quick_table_bits=33,1201
uint	myisam_block_size=34,1233
my_bool myisam_flush=35,1297
my_bool myisam_concurrent_insert=37,1420
my_bool myisam_concurrent_insert=39,1462
my_off_t myisam_max_extra_temp_length=41,1505
my_off_t myisam_max_temp_length=42,1564
ulong    myisam_bulk_insert_tree_size=43,1612
uint NEAR myisam_read_vec[myisam_read_vec50,1775
uint NEAR myisam_readnext_vec[myisam_readnext_vec57,1994

myisam/mi_statrec.c,262
int _mi_write_static_record(22,859
int _mi_update_static_record(89,2848
int _mi_delete_static_record(99,3111
int _mi_cmp_static_record(114,3575
int _mi_cmp_static_unique(150,4618
int _mi_read_static_record(169,5186
int _mi_read_rnd_static_record(203,5996

myisam/mi_test1.c,1307
#define MAX_REC_LENGTH 23,907
static int rec_pointer_size=27,958
static int key_field=28,1000
static int key_type=29,1074
static int create_flag=30,1110
static uint insert_count,32,1137
static uint insert_count, update_count,32,1137
static uint insert_count, update_count, remove_count;32,1137
static uint pack_keys=33,1191
static uint unique_key=34,1240
static my_bool key_cacheing,35,1274
static my_bool key_cacheing, null_fields,35,1274
static my_bool key_cacheing, null_fields, silent,35,1274
static my_bool key_cacheing, null_fields, silent, skip_update,35,1274
static my_bool key_cacheing, null_fields, silent, skip_update, opt_unique,35,1274
               verbose;36,1349
static MI_COLUMNDEF recinfo[recinfo37,1373
static MI_KEYDEF keyinfo[keyinfo38,1405
static MI_KEYSEG keyseg[keyseg39,1435
static MI_KEYSEG uniqueseg[uniqueseg40,1464
int main(48,1729
static int run_test(60,1906
static void create_key_part(324,9166
static void create_key(362,10303
static char blob_key[blob_key386,10745
static char blob_record[blob_record387,10783
static void create_record(390,10832
static void update_record(450,12227
static struct my_option my_long_options[my_long_options507,13682
get_one_option(563,16348
static void get_options(642,18092
static void usage(653,18292

myisam/mi_test2.c,1026
#define USE_MY_FUNC20,886
#undef DBUG_OFF23,929
#define SAFEMALLOC26,971
#define STANDARD_LENGTH 31,1042
#define MYISAM_KEYS 32,1069
#define MAX_PARTS 33,1091
#define labs(35,1149
static	int verbose=45,1473
static int pack_seg=49,1672
static ulong key_cache_size=51,1764
static uint keys=53,1805
static uint use_blob=54,1847
static uint16 key1[key155,1871
static uint16 key1[1001],key3[key355,1871
static char record[record56,1908
static char record[300],record2[record256,1908
static char record[300],record2[300],key[key56,1908
static char record[300],record2[300],key[100],key2[key256,1908
	    read_record[read_record57,1965
	    read_record[300],read_record2[read_record257,1965
	    read_record[300],read_record2[300],read_record3[read_record357,1965
static MI_KEYSEG glob_keyseg[glob_keyseg58,2024
int main(62,2101
static void get_options(838,24835
static uint rnd(967,27967
static void fix_length(975,28109
static void put_blob_in_record(986,28388
static void copy_key(1014,28923

myisam/mi_test3.c,444
# define WEXITSTATUS(27,945
# define WIFEXITED(30,1029
#define rnd(35,1119
#define rnd_init(36,1150
#define rnd(38,1187
#define rnd_init(39,1217
const char *filename=filename43,1257
uint tests=44,1292
struct record 51,1538
} record;55,1599
int main(58,1611
static void get_options(117,3097
void start_test(162,4037
int test_read(224,5534
int test_rrnd(292,6818
int test_write(340,7791
int test_update(397,8994
main(493,11085

myisam/mi_unique.c,97
my_bool mi_check_unique(22,875
ha_checksum mi_unique_hash(69,2346
int mi_unique_comp(130,3946

myisam/mi_update.c,22
int mi_update(25,893

myisam/mi_write.c,626
#define MAX_POINTER_LENGTH 24,886
int mi_write(46,1709
int _mi_ck_write(226,6603
int _mi_ck_write_btree(245,7176
int _mi_enlarge_root(275,8110
static int w_search(307,9197
int _mi_insert(370,11280
int _mi_split_page(441,13635
uchar *_mi_find_half_pos(_mi_find_half_pos508,15857
static uchar *_mi_find_last_pos(_mi_find_last_pos553,17079
static int _mi_balance_page(604,18434
} bulk_insert_param;745,23763
int _mi_ck_write_tree(747,23785
static int keys_compare(762,24150
static int keys_free(771,24379
int mi_init_bulk_insert(804,25285
void mi_flush_bulk_insert(865,27018
void mi_end_bulk_insert(874,27199

myisam/myisam_ftdump.c,357
static int count=27,1103
static my_bool verbose;28,1150
static char *query=query29,1174
static uint lengths[lengths30,1199
#define MAX_LEN 32,1226
#define HOW_OFTEN_TO_WRITE 33,1260
static struct my_option my_long_options[my_long_options35,1294
int main(57,2255
get_one_option(231,6235
static void usage(262,6757
static void complain(271,6926

myisam/myisamchk.c,1880
#define my_raid_create(33,1111
#define my_raid_delete(34,1168
#define _sanity(38,1232
SET_STACK_SIZE(_sanity30,1033
static const char *set_charset_name;set_charset_name44,1376
static CHARSET_INFO *set_charset;set_charset45,1413
static long opt_myisam_block_size;46,1447
static const char *my_progname_short;my_progname_short47,1482
static int stopwords_inited=48,1520
static const char *type_names[type_names50,1553
static const char *prefix_packed_txt=prefix_packed_txt57,1775
static const char *field_pack[field_pack63,1927
MI_CHECK check_param;82,2727
int main(86,2771
enum options_mc 147,4759
  OPT_CHARSETS_DIR=148,4777
  OPT_CHARSETS_DIR=256, OPT_SET_CHARSET,148,4777
  OPT_CHARSETS_DIR=256, OPT_SET_CHARSET,OPT_START_CHECK_POS,148,4777
  OPT_CORRECT_CHECKSUM,149,4838
  OPT_CORRECT_CHECKSUM, OPT_KEY_BUFFER_SIZE,149,4838
  OPT_CORRECT_CHECKSUM, OPT_KEY_BUFFER_SIZE, OPT_MYISAM_BLOCK_SIZE,149,4838
  OPT_READ_BUFFER_SIZE,150,4906
  OPT_READ_BUFFER_SIZE, OPT_WRITE_BUFFER_SIZE,150,4906
  OPT_READ_BUFFER_SIZE, OPT_WRITE_BUFFER_SIZE, OPT_SORT_BUFFER_SIZE,150,4906
  OPT_SORT_KEY_BLOCKS,151,4975
  OPT_SORT_KEY_BLOCKS, OPT_DECODE_BITS,151,4975
  OPT_SORT_KEY_BLOCKS, OPT_DECODE_BITS, OPT_FT_MIN_WORD_LEN,151,4975
  OPT_FT_MAX_WORD_LEN,152,5036
  OPT_FT_MAX_WORD_LEN, OPT_FT_MAX_WORD_LEN_FOR_SORT,152,5036
  OPT_FT_MAX_WORD_LEN, OPT_FT_MAX_WORD_LEN_FOR_SORT, OPT_FT_STOPWORD_FILE152,5036
static struct my_option my_long_options[my_long_options155,5114
static void print_version(326,13722
static void usage(333,13842
get_one_option(440,19503
static void get_options(667,25521
static int myisamchk(720,26895
static void descript(1123,40415
static int mi_sort_records(1388,49022
static int sort_record_index(1567,54460
void mi_check_print_info(1660,57089
void mi_check_print_warning(1673,57320
void mi_check_print_error(1698,57932

myisam/myisamlog.c,1041
#define USE_MY_FUNC20,836
#define FILENAME(30,984
struct file_info 32,1036
struct test_if_open_param 42,1195
struct st_access_param47,1259
#define NO_FILEPOS 53,1337
static uint verbose=73,2326
static my_string log_filename=75,2467
static ulong com_count[com_count76,2546
static ulong com_count[10][3],number_of_commands=76,2546
static my_off_t isamlog_filepos,78,2631
static my_off_t isamlog_filepos,start_offset=78,2631
static const char *command_name[command_name79,2707
int main(84,2835
static void get_options(132,4225
static int examine_log(302,7631
static int read_string(683,18925
static int file_info_compare(702,19333
static int test_if_open 715,19659
static void fix_blob_pointers(725,19904
static uint set_maximum_open_files(740,20295
static int test_when_accessed 775,21348
static void file_info_free(788,21673
static int close_some_file(805,22013
static int reopen_closed_file(824,22514
static int find_record_with_key(843,23011
static void printf_log(863,23509
static bool cmp_filename(878,23846

myisam/myisampack.c,3001
#define USE_MY_FUNC	20,829
#define __GNU_LIBRARY__	31,1039
#define BITS_SAVED 36,1148
#define BITS_SAVED 38,1176
#define IS_OFFSET 41,1206
#define HEAD_LENGTH	42,1275
#define ALLOWED_JOIN_DIFF	43,1298
#define DATA_TMP_EXT	45,1362
#define OLD_EXT	46,1391
#define WRITE_COUNT	47,1416
struct st_file_buffer 49,1460
typedef struct st_huff_counts 60,1622
} HUFF_COUNTS;74,2074
typedef struct st_huff_element HUFF_ELEMENT;76,2090
struct st_huff_element 78,2136
  union un_element 80,2179
    struct st_nod 81,2200
    struct st_leaf 84,2264
typedef struct st_huff_tree 92,2383
} HUFF_TREE;102,2659
typedef struct st_isam_mrg 105,2674
} PACK_MRG_INFO;114,2917
static int error_on_write=172,5686
static int tmpfile_createflag=174,5795
static my_bool backup,175,5852
static my_bool backup, opt_wait;175,5852
static uint tree_buff_length=176,5885
static char tmp_dir[tmp_dir177,5936
static my_off_t intervall_length;178,5984
static ha_checksum glob_crc;179,6018
static struct st_file_buffer file_buffer;180,6047
static QUEUE queue;181,6089
static HUFF_COUNTS *global_count;global_count182,6109
static char zero_string[zero_string183,6143
static const char *load_default_groups[load_default_groups184,6204
int main(188,6292
enum options_mp 234,7335
enum options_mp {OPT_CHARSETS_DIR_MP=OPT_CHARSETS_DIR_MP234,7335
static struct my_option my_long_options[my_long_options236,7379
static void print_version(270,9061
static void usage(275,9178
get_one_option(295,9872
static void get_options(341,10717
static MI_INFO *open_isam_file(open_isam_file366,11100
static bool open_isam_files(405,12182
static int compress(447,13258
static HUFF_COUNTS *init_huff_count(init_huff_count647,19134
static void free_counts_and_tree_and_queue(681,20185
static int get_statistic(716,20993
static int compare_huff_elements(888,25653
static void check_counts(898,25989
test_space_compress(1066,31365
static HUFF_TREE* make_huff_trees(1133,33265
static int make_huff_tree(1159,33904
static int compare_tree(1285,37213
static int save_counts_in_queue(1297,37542
static my_off_t calc_packed_length(1315,38063
static uint join_same_trees(1365,39375
static int make_huff_decode_table(1411,40654
static void make_traverse_code_tree(1432,41200
static int write_header(1458,41827
static void write_field_info(1483,42660
static my_off_t write_huff_tree(1507,43312
static uint *make_offset_code_tree(make_offset_code_tree1593,45920
static uint max_bit(1626,46745
static int compress_isam_file(1636,46867
static char *make_new_name(make_new_name1882,53871
static char *make_old_name(make_old_name1887,53994
static void init_file_buffer(1894,54151
static int flush_buffer(1916,54634
static void end_file_buffer(1950,55539
static void write_bits 1957,55665
static void flush_bits 2000,56753
static int save_state(2022,57272
static int save_state_mrg(2057,58530
static void mrg_reset(2087,59460
static int mrg_rrnd(2096,59606
static int mrg_close(2135,60551

myisam/sort.c,685
#undef MIN_SORT_MEMORY32,1079
#undef MYF_RW33,1102
#undef DISK_BUFFER_SIZE34,1116
#define MERGEBUFF 36,1141
#define MERGEBUFF2 37,1162
#define MIN_SORT_MEMORY 38,1184
#define MYF_RW 39,1231
#define DISK_BUFFER_SIZE 40,1287
typedef struct st_buffpek 42,1326
} BUFFPEK;48,1697
int _create_index_by_sort(93,3456
static ha_rows NEAR_F find_all_keys(229,7530
pthread_handler_decl(281,8981
int thr_write_keys(415,12608
static int NEAR_F write_keys(552,16490
static int NEAR_F write_key(578,17315
static int NEAR_F write_index(598,17856
static int NEAR_F merge_many_buff(616,18335
static uint NEAR_F read_to_buffer(673,20307
merge_buffers(699,21063
merge_index(835,24775

myisammrg/myrg_close.c,23
int myrg_close(21,837

myisammrg/myrg_create.c,24
int myrg_create(26,991

myisammrg/myrg_delete.c,24
int myrg_delete(21,839

myisammrg/myrg_extra.c,53
int myrg_extra(25,1009
void myrg_extrafunc(59,1904

myisammrg/myrg_info.c,57
ulonglong myrg_position(19,808
int myrg_status(31,1126

myisammrg/myrg_locking.c,31
int myrg_lock_database(23,855

myisammrg/myrg_open.c,40
MYRG_INFO *myrg_open(myrg_open33,1079

myisammrg/myrg_panic.c,24
int myrg_panic(27,1211

myisammrg/myrg_queue.c,97
static int queue_key_cmp(19,808
int _myrg_init_queue(30,1148
int _myrg_mi_read_record(57,1792

myisammrg/myrg_range.c,38
ha_rows myrg_records_in_range(19,808

myisammrg/myrg_rfirst.c,24
int myrg_rfirst(21,858

myisammrg/myrg_rkey.c,23
int myrg_rkey(39,1457

myisammrg/myrg_rlast.c,23
int myrg_rlast(21,870

myisammrg/myrg_rnext.c,23
int myrg_rnext(23,870

myisammrg/myrg_rprev.c,23
int myrg_rprev(23,874

myisammrg/myrg_rrnd.c,74
int myrg_rrnd(34,1192
static MYRG_TABLE *find_table(find_table100,3211

myisammrg/myrg_rsame.c,23
int myrg_rsame(19,808

myisammrg/myrg_static.c,150
LIST	*myrg_open_list=myrg_open_list26,930
static const char *merge_insert_methods[merge_insert_methods27,954
TYPELIB merge_insert_method=29,1026

myisammrg/myrg_update.c,24
int myrg_update(21,839

myisammrg/myrg_write.c,23
int myrg_write(21,851

mysys/array.c,330
#undef SAFEMALLOC	20,835
my_bool init_dynamic_array(46,1396
my_bool insert_dynamic(85,2301
byte *alloc_dynamic(alloc_dynamic120,3052
byte *pop_dynamic(pop_dynamic149,3654
my_bool set_dynamic(174,4226
void get_dynamic(210,5200
void delete_dynamic(232,5661
void delete_dynamic_element(251,5973
void freeze_size(269,6295

mysys/charset.c,1684
typedef struct cs_id_st 23,856
} CS_ID;26,911
const char *charsets_dir charsets_dir28,921
static DYNAMIC_ARRAY cs_info_table;29,954
static CS_ID **available_charsets;available_charsets30,990
static int charset_initialized=31,1025
#define MAX_LINE 33,1060
#define CTYPE_TABLE_SIZE 35,1084
#define TO_LOWER_TABLE_SIZE 36,1118
#define TO_UPPER_TABLE_SIZE 37,1152
#define SORT_ORDER_TABLE_SIZE 38,1186
struct simpleconfig_buf_st 40,1221
static uint num_from_csname(46,1299
static char *name_from_csnum(name_from_csnum55,1505
static my_bool get_word(65,1720
char *get_charsets_dir(get_charsets_dir89,2198
static my_bool read_charset_index(111,2743
my_bool STDCALL init_available_charsets(168,4090
void free_charsets(199,4928
static my_bool fill_array(206,5018
static void get_charset_conf_name(222,5342
static my_bool read_charset_file(229,5517
uint get_charset_number(262,6392
const char *get_charset_name(get_charset_name272,6676
static CHARSET_INFO *find_charset(find_charset283,6974
static CHARSET_INFO *find_charset_by_name(find_charset_by_name293,7220
static CHARSET_INFO *add_charset(add_charset320,7855
static CHARSET_INFO *get_internal_charset(get_internal_charset365,9543
static CHARSET_INFO *get_internal_charset_by_name(get_internal_charset_by_name382,10093
CHARSET_INFO *get_charset(get_charset399,10651
my_bool set_default_charset(416,11136
CHARSET_INFO *get_charset_by_name(get_charset_by_name431,11538
my_bool set_default_charset_by_name(447,11958
static my_bool charset_in_string(465,12458
static void charset_append(478,12754
char * list_charsets(507,13325
static void _print_array(573,14861
void _print_csinfo(585,15142

mysys/checksum.c,23
ulong checksum(30,962

mysys/default.c,365
char *defaults_extra_file=defaults_extra_file41,1847
const char *default_directories[default_directories45,1948
#define default_ext	63,2214
#define windows_ext	66,2310
int load_defaults(108,3494
void free_defaults(256,7478
static int search_default_file(283,8112
static char *remove_end_comment(remove_end_comment450,12150
void print_defaults(475,12650

mysys/errors.c,102
const char * NEAR globerrs[globerrs22,817
void init_glob_errs(54,2165
void init_glob_errs(61,2259

mysys/hash.c,742
#define NO_RECORD	26,974
#define LOWFIND 27,1004
#define LOWUSED 28,1022
#define HIGHFIND 29,1040
#define HIGHUSED 30,1059
my_bool _hash_init(39,1412
void hash_free(67,2186
hash_key(91,2715
static uint hash_mask(101,2968
static uint hash_rec_mask(107,3150
static uint calc_hashnr(119,3446
static uint calc_hashnr_caseup(132,3708
uint calc_hashnr(158,4412
uint calc_hashnr_caseup(170,4617
unsigned int rec_hashnr(188,4913
gptr hash_search(199,5177
gptr hash_next(236,6052
static void movelink(261,6562
static int hashcmp(275,6865
my_bool hash_insert(288,7255
my_bool hash_delete(422,10582
my_bool hash_update(510,13095
byte *hash_element(hash_element575,14727
void hash_replace(588,14965
my_bool hash_check(597,15148

mysys/list.c,221
LIST *list_add(list_add28,884
LIST *list_delete(list_delete46,1272
void list_free(58,1489
LIST *list_cons(list_cons72,1705
LIST *list_reverse(list_reverse82,1913
uint list_length(97,2099
int list_walk(105,2216

mysys/md5.c,871
#define S11 53,1886
#define S12 54,1900
#define S13 55,1915
#define S14 56,1930
#define S21 57,1945
#define S22 58,1959
#define S23 59,1973
#define S24 60,1988
#define S31 61,2003
#define S32 62,2017
#define S33 63,2032
#define S34 64,2047
#define S41 65,2062
#define S42 66,2076
#define S43 67,2091
#define S44 68,2106
#define MD5_memcpy(80,2504
#define MD5_memset(81,2567
static unsigned char PADDING[PADDING84,2630
#define F(92,2917
#define G(93,2965
#define H(94,3013
#define I(95,3050
#define ROTATE_LEFT(99,3133
#define FF(104,3325
#define GG(109,3463
#define HH(114,3601
#define II(119,3739
void my_MD5Init 127,3953
void my_MD5Update 143,4384
void my_MD5Final 185,5516
static void MD5Transform 214,6280
static void Encode 308,10080
static void Decode 327,10542
static void MD5_memcpy 343,10898
static void MD5_memset 359,11159

mysys/mf_brkhant.c,84
void dont_break(27,1061
void allow_break(33,1138
void my_remember_signal(60,1635

mysys/mf_cache.c,151
static my_bool cache_remove_open_tmp(30,1088
my_bool open_cached_file(61,1899
my_bool real_open_cached_file(82,2567
void close_cached_file(99,2971

mysys/mf_casecnv.c,285
void caseup_str(47,1441
void casedn_str(86,2218
void caseup(111,2671
void casedn(132,3082
void case_sort(153,3537
my_string my_strcasestr(166,3894
int my_strcasecmp(188,4336
int my_casecmp(217,5004
int my_strsortcmp(245,5598
int my_sortcmp(260,5995
int my_sortncmp(279,6462

mysys/mf_dirname.c,130
uint dirname_length(22,832
uint dirname_part(45,1375
#define FN_DEVCHAR 82,2325
char *convert_dirname(convert_dirname85,2382

mysys/mf_fn_ext.c,26
my_string fn_ext(37,1178

mysys/mf_format.c,56
my_string fn_format(28,1026
size_s strlength(123,3666

mysys/mf_getdate.c,22
void get_date(29,989

mysys/mf_iocache.c,1077
#define MAP_TO_USE_RAID51,2443
#define lock_append_buffer(62,2664
#define unlock_append_buffer(64,2748
#define lock_append_buffer(67,2842
#define unlock_append_buffer(68,2875
#define IO_ROUND_UP(71,2918
#define IO_ROUND_DN(72,2974
init_functions(75,3043
int init_io_cache(119,4219
static void my_aiowait(230,7713
my_bool reinit_io_cache(262,8445
int _my_b_read(361,11349
void init_io_cache_share(439,13742
void remove_io_thread(456,14229
static int lock_io_cache(467,14443
static void unlock_io_cache(492,14916
int _my_b_read_r(509,15508
int _my_b_seq_read(585,17893
int _my_b_async_read(726,21760
int _my_b_get(896,27318
int _my_b_write(911,27660
int my_b_append(954,28834
int my_b_safe_write(992,29741
int my_block_write(1012,30426
#define LOCK_APPEND_BUFFER 1063,31854
#define UNLOCK_APPEND_BUFFER 1065,31940
#define LOCK_APPEND_BUFFER1068,32036
#define UNLOCK_APPEND_BUFFER1069,32063
int my_b_flush_io_cache(1073,32101
int end_io_cache(1147,33973
void die(1197,35153
int open_file(1207,35346
void close_file(1217,35651
int main(1223,35747

mysys/mf_iocache2.c,229
#define MAP_TO_USE_RAID21,800
my_off_t my_b_append_tell(28,932
void my_b_seek(74,2306
uint my_b_fill(134,3971
uint my_b_gets(179,5156
my_off_t my_b_filelength(215,5944
uint my_b_printf(235,6321
uint my_b_vprintf(246,6507

mysys/mf_keycache.c,1906
#undef my_malloc_lock32,1178
#undef my_free_lock33,1200
#define my_malloc_lock(34,1220
#define my_free_lock(35,1283
#define CHANGED_BLOCKS_HASH	40,1378
#define CHANGED_BLOCKS_MASK	41,1435
#define FLUSH_CACHE 42,1487
typedef struct sec_link 44,1551
} SEC_LINK;52,1814
static SEC_LINK *_my_block_root,_my_block_root59,1972
static SEC_LINK *_my_block_root,**_my_hash_root,_my_hash_root59,1972
		*_my_used_first,_my_used_first60,2021
		*_my_used_first,*_my_used_last;_my_used_last60,2021
static int	_my_disk_blocks;61,2055
static uint	_my_disk_blocks_used,62,2083
static uint	_my_disk_blocks_used, _my_hash_blocks;62,2083
static uint	key_cache_shift;63,2134
ulong		_my_blocks_used,64,2163
ulong		_my_blocks_used,_my_blocks_changed;64,2163
ulong		_my_cache_w_requests,65,2206
ulong		_my_cache_w_requests,_my_cache_write,65,2206
ulong		_my_cache_w_requests,_my_cache_write,_my_cache_r_requests,65,2206
		_my_cache_read;66,2272
uint		key_cache_block_size=67,2290
static byte	HUGE_PTR *_my_block_mem;_my_block_mem68,2346
static SEC_LINK *changed_blocks[changed_blocks69,2383
static SEC_LINK *file_blocks[file_blocks70,2437
static my_bool	_my_printed;72,2505
int init_key_cache(80,2616
int resize_key_cache(160,4915
void end_key_cache(180,5390
static inline void link_into_file_blocks(202,5989
static inline void relink_into_file_blocks(212,6255
static inline void link_changed_to_file(224,6647
static inline void link_file_to_changed(238,7078
#define DBUG_OFF	254,7558
byte *key_cache_read(key_cache_read270,7913
int key_cache_write(344,10003
static SEC_LINK *find_key_block(find_key_block421,12201
static void free_block(515,14966
static int cmp_sec_link(543,15802
static int flush_cached_blocks(550,15954
static int flush_key_blocks_int(568,16373
int flush_key_blocks(681,19228
static int flush_all_key_blocks(706,19652
static void test_key_cache(728,20001

mysys/mf_loadpath.c,32
my_string my_load_path(27,1122

mysys/mf_pack.c,292
void pack_dirname(34,1133
uint cleanup_dirname(117,3266
my_bool my_use_symdir=222,6160
void symdirget(225,6246
uint unpack_dirname(277,7532
static my_string NEAR_F expand_tilde(325,8810
uint unpack_filename(368,9614
uint system_filename(391,10296
my_string intern_filename(460,12185

mysys/mf_path.c,255
my_string my_path(33,1390
#define F_OK 77,2578
#define PATH_SEP 78,2593
#define PROGRAM_EXTENSION 79,2614
#define PATH_SEP 81,2674
#define PROGRAM_EXTENSION 82,2695
#define PATH_SEP 84,2734
static char *find_file_in_path(find_file_in_path87,2763

mysys/mf_qsort.c,338
#define CMP(31,1093
#define CMP(33,1147
#define SWAP(36,1190
#define MEDIAN(55,1678
typedef struct st_stack67,2028
} stack_node;70,2073
#define PUSH(72,2088
#define POP(73,2162
#define STACK_SIZE	76,2302
#define THRESHOLD_FOR_INSERT_SORT 77,2353
#define SORT_RETURN 79,2422
#define SORT_RETURN 81,2455
qsort_t qsort2(95,2984

mysys/mf_qsort2.c,40
#define QSORT_EXTRA_CMP_ARGUMENT19,813

mysys/mf_radix.c,36
void radixsort_for_str_ptr(29,1020

mysys/mf_same.c,27
my_string fn_same(29,1031

mysys/mf_sort.c,32
void my_string_ptr_sort(22,859

mysys/mf_soundex.c,53
void soundex(46,1782
static char get_scode(88,2928

mysys/mf_strip.c,24
size_s strip_sp(26,894

mysys/mf_tempfile.c,31
File create_temp_file(37,1134

mysys/mf_unixpath.c,26
void to_unix_path(23,876

mysys/mf_wcomp.c,95
char wild_many=24,929
char wild_one=25,949
char wild_prefix=26,968
int wild_compare(28,989

mysys/mf_wfile.c,77
WF_PACK *wf_comp(wf_comp33,1148
int wf_test(98,2578
void wf_end(126,3232

mysys/mulalloc.c,29
gptr my_multi_malloc(33,978

mysys/my_aes.c,361
enum encrypt_dir 28,929
enum encrypt_dir { AES_ENCRYPT,28,929
enum encrypt_dir { AES_ENCRYPT, AES_DECRYPT 28,929
#define AES_BLOCK_SIZE 30,977
#define AES_BAD_DATA 32,1030
} KEYINSTANCE;39,1248
static int my_aes_create_key(59,1658
#define AES_USE_KEY_BYTES 90,2935
int my_aes_encrypt(127,3928
int my_aes_decrypt(175,5364
int my_aes_get_size(225,6833

mysys/my_alarm.c,42
sig_handler my_set_alarm_variable(27,931

mysys/my_alloc.c,368
#undef EXTRA_DEBUG22,891
#define EXTRA_DEBUG23,910
void init_alloc_root(25,931
void reset_root_defaults(67,2427
gptr alloc_root(116,3805
static inline void mark_blocks_free(188,5896
void free_root(216,6664
void set_prealloc_root(259,7594
char *strdup_root(strdup_root281,8017
char *strmake_root(strmake_root286,8119
char *memdup_root(memdup_root298,8298

mysys/my_append.c,73
#define USES_TYPES	17,745
struct utimbuf 26,986
int my_append(34,1082

mysys/my_bit.c,86
uint my_bit_log2(26,918
static char nbits[nbits33,1026
uint my_count_bits(52,1857

mysys/my_bitmap.c,308
inline void bitmap_lock(30,1043
inline void bitmap_unlock(38,1170
my_bool bitmap_init(46,1301
void bitmap_free(60,1696
void bitmap_set_bit(73,1911
uint bitmap_set_next(84,2121
void bitmap_clear_bit(114,2635
void bitmap_set_all(125,2849
my_bool bitmap_is_set(132,2985
void bitmap_clear_all(139,3157

mysys/my_chsize.c,23
int my_chsize(39,1180

mysys/my_clock.c,48
#define USES_TYPES17,745
long my_clock(25,934

mysys/my_compress.c,111
my_bool my_compress(33,1056
byte *my_compress_alloc(my_compress_alloc52,1489
my_bool my_uncompress 76,2136

mysys/my_copy.c,72
#define USES_TYPES	17,745
struct utimbuf 27,1004
int my_copy(53,1531

mysys/my_create.c,50
#define USES_TYPES17,745
File my_create(36,1108

mysys/my_delete.c,22
int my_delete(20,793

mysys/my_div.c,30
my_string my_filename(27,855

mysys/my_dup.c,46
#define USES_TYPES17,745
File my_dup(28,956

mysys/my_error.c,158
const char ** NEAR my_errmsg[my_errmsg25,913
char NEAR errbuff[errbuff26,962
int my_error(38,1129
int my_printf_error 123,2998
int my_message(144,3394

mysys/my_fopen.c,124
FILE *my_fopen(my_fopen26,913
int my_fclose(77,2415
FILE *my_fdopen(my_fdopen107,3149
static void make_ftype(148,4145

mysys/my_fstream.c,187
#undef ftell25,916
#undef fseek26,929
#define ftell(27,942
#define fseek(28,969
uint my_fread(34,1108
uint my_fwrite(75,2331
my_off_t my_fseek(149,4199
my_off_t my_ftell(163,4608

mysys/my_gethostbyname.c,291
struct hostent *my_gethostbyname_r(my_gethostbyname_r39,1301
struct hostent *my_gethostbyname_r(my_gethostbyname_r52,1662
struct hostent *my_gethostbyname_r(my_gethostbyname_r68,2005
struct hostent *my_gethostbyname_r(my_gethostbyname_r95,2737
void my_gethostbyname_r_free(106,3003

mysys/my_getopt.c,900
static const char *special_opt_prefix[special_opt_prefix42,1596
static const uint special_opt_prefix_lengths[special_opt_prefix_lengths44,1691
enum enum_special_opt46,1793
{ OPT_SKIP,47,1815
{ OPT_SKIP, OPT_DISABLE,47,1815
{ OPT_SKIP, OPT_DISABLE, OPT_ENABLE,47,1815
{ OPT_SKIP, OPT_DISABLE, OPT_ENABLE, OPT_MAXIMUM,47,1815
{ OPT_SKIP, OPT_DISABLE, OPT_ENABLE, OPT_MAXIMUM, OPT_LOOSE}OPT_LOOSE47,1815
char *disabled_my_option=disabled_my_option49,1878
my_bool my_getopt_print_errors=57,2078
int handle_options(70,2517
static int setval(441,12359
static int findopt(502,14122
my_bool getopt_compare_strings(532,14796
static longlong eval_num_suffix 551,15205
static longlong getopt_ll(586,16162
static ulonglong getopt_ull(607,16828
ulonglong getopt_ull_limit_value(616,17031
static void init_variables(637,17574
void my_print_help(693,19177
void my_print_variables(767,20929

mysys/my_getwd.c,99
#define chdir 36,1129
int my_getwd(44,1332
int my_setwd(93,2479
int test_if_hard_path(182,4637

mysys/my_init.c,466
my_bool have_tcpip=37,1153
#define my_win_init(42,1287
#define netware_init(47,1369
my_bool my_init_done=51,1401
static ulong atoi_octal(53,1426
my_bool my_init(76,1781
void my_end(130,3172
void setEnvString(223,6145
static void my_win_init(230,6305
#define TCPIPKEY 298,8474
#define WINSOCK2KEY 299,8549
#define WINSOCKKEY 300,8629
static my_bool win32_have_tcpip(302,8709
static my_bool win32_init_tcp_ip(322,9252
static void netware_init(361,10264

mysys/my_lib.c,627
#define USES_TYPES	20,840
# define NAMLEN(27,1073
# define dirent 30,1140
# define NAMLEN(32,1170
#define READDIR(60,1678
#define READDIR(62,1746
#define ENTRIES_START_SIZE 70,1991
#define ENTRIES_INCREMENT 71,2042
#define NAMES_START_SIZE 72,2094
void my_dirend(80,2261
static int comp_names(97,2717
MY_DIR	*my_dir(my_dir105,2880
my_string directory_file_name 217,6092
MY_DIR	*my_dir(my_dir362,9844
  result->dir_entry=dir_entry475,12917
  result->number_off_files=number_off_files476,12979
  my_errno=483,13221
MY_DIR	*my_dir(my_dir501,13743
int my_fstat(603,16922
MY_STAT *my_stat(my_stat612,17167

mysys/my_lock.c,178
#undef MY_HOW_OFTEN_TO_ALARM20,816
#define MY_HOW_OFTEN_TO_ALARM 21,845
#undef NO_ALARM_LOOP23,929
#define INCL_BASE30,1041
#define INCL_NOPMAPI31,1059
int my_lock(40,1186

mysys/my_lockmem.c,129
struct st_mem_list26,893
LIST *mem_list;mem_list33,958
byte *my_malloc_lock(my_malloc_lock35,975
void my_free_lock(78,2069

mysys/my_lread.c,24
uint32 my_lread(22,836

mysys/my_lwrite.c,25
uint32 my_lwrite(22,834

mysys/my_malloc.c,197
#undef SAFEMALLOC18,801
gptr my_malloc(27,925
void my_no_flags_free(55,1606
gptr my_memdup(67,1790
char *my_strdup(my_strdup76,1981
char *my_strdup_with_length(my_strdup_with_length86,2209

mysys/my_messnc.c,33
int my_message_no_curses(19,770

mysys/my_mkdir.c,21
int my_mkdir(25,880

mysys/my_net.c,27
void my_inet_ntoa(36,1156

mysys/my_netware.c,479
typedef long(*PMUR)PMUR65,2149
#define PM_USERINFO_TYPE_NDS 70,2339
#define PM_USERINFO_TYPE_ADDRESS 72,2446
#define PM_FLAGS_METER_ONLY 83,2724
#define PM_LICREQ_ALREADY_UNICODE 90,2945
#define PM_LICREQ_ALWAYS_METER 95,3103
#define NLS_TRAN_TYPE_IPX 103,3263
#define NLS_TRAN_TYPE_IP 104,3328
#define NLS_ADDR_TYPE_MAC 105,3392
#define NLS_IPX_ADDR_SIZE 111,3548
#define NLS_IP_ADDR_SIZE 112,3615
#define NLS_MAC_ADDR_SIZE 113,3681
void netware_reg_user(116,3749

mysys/my_once.c,80
#undef SAFEMALLOC20,820
gptr my_once_alloc(39,1086
void my_once_free(88,2284

mysys/my_open.c,106
#define USES_TYPES17,745
File my_open(39,1130
int my_close(75,2062
File my_register_filename(113,2934

mysys/my_os2cond.c,417
#undef SAFE_MUTEX	25,1190
int pthread_cond_init(32,1374
int pthread_cond_destroy(45,1674
int pthread_cond_wait(60,1921
int pthread_cond_timedwait(81,2285
int pthread_cond_signal(113,2937
int pthread_cond_broadcast(123,3117
int pthread_attr_init(139,3374
int pthread_attr_setstacksize(147,3539
int pthread_attr_setprio(153,3661
int pthread_attr_destroy(159,3779
struct tm *localtime_r(localtime_r169,4096

mysys/my_os2dirsrch.c,156
long  _findfirst(26,1031
long  _findnext(66,2191
void  _findclose(96,2892
DIR* opendir(106,3045
struct dirent* readdir(141,4102
int closedir 172,4838

mysys/my_os2dlfcn.c,166
#define RTLD_LAZY 29,1098
#define RTLD_NOW 30,1118
char	fail[fail37,1262
void* dlopen(39,1280
char* dlerror(51,1467
void* dlsym(56,1509
void  dlclose(68,1694

mysys/my_os2file64.c,431
class File64bit32,1335
} initFile64bit;36,1410
#define  EIO	56,1939
#define  ESPIPE 57,1961
static unsigned char const errno_tab[errno_tab60,1990
	    File64bit :: File64bit(134,5875
void	    _OS2errno(160,6493
longlong _lseek64(169,6616
inline APIRET _SetFileLocksL(191,7044
int  _lock64(217,7723
int sopen(271,9111
int read(343,10857
int write(357,11125
int close(371,11403
int open(385,11606
int open(391,11723

mysys/my_os2mutex.c,117
pthread_mutex_init(41,1925
pthread_mutex_destroy(50,2121
pthread_mutex_lock(66,2374
pthread_mutex_unlock(78,2580

mysys/my_os2thread.c,237
static pthread_mutex_t THR_LOCK_thread;30,1276
struct pthread_map32,1317
void win_pthread_init(39,1408
static pthread_handler_decl(54,1898
int pthread_create(70,2495
void pthread_exit(115,3829
int win_pthread_setspecific(122,3944

mysys/my_os2tls.c,242
#define TLS_MINIMUM_AVAILABLE	26,1077
PULONG		 tls_storage;29,1112
DWORD		 tls_bits[tls_bits30,1158
pthread_mutex_t  tls_mutex;31,1203
DWORD	 TlsAlloc(34,1265
BOOL TlsFree(86,2349
PVOID TlsGetValue(114,2785
BOOL TlsSetValue(132,3244

mysys/my_port.c,36
double my_ulonglong2double(36,1224

mysys/my_pread.c,46
uint my_pread(26,900
uint my_pwrite(79,2552

mysys/my_pthread.c,1784
#define DONT_REMAP_PTHREAD_FUNCTIONS19,796
#define SCHED_POLICY 29,1036
#define SCHED_POLICY 31,1072
void my_pthread_setprio(35,1140
int my_pthread_getprio(47,1484
void my_pthread_attr_setprio(64,1893
#undef pthread_getspecific79,2314
#define pthread_getspecific 81,2371
void *my_pthread_getspecific_imp(my_pthread_getspecific_imp84,2423
#undef pthread_exit98,2684
void my_pthread_exit(99,2704
int my_pthread_create_detached=124,3214
int my_sigwait(128,3318
struct tm *localtime_r(localtime_r144,3580
static sigset_t sigwait_set,177,4787
static sigset_t sigwait_set,rev_sigwait_set,177,4787
static sigset_t sigwait_set,rev_sigwait_set,px_recd;177,4787
void px_handle_sig(179,4841
void sigwait_setup(185,4903
int sigwait(225,5955
static sigset_t pending_set;285,7777
static bool inited=286,7806
static pthread_cond_t  COND_sigwait;287,7828
static pthread_mutex_t LOCK_sigwait;288,7865
void sigwait_handle_sig(291,7904
void *sigwait_thread(sigwait_thread301,8162
int sigwait(336,8938
int pthread_signal(394,10499
#undef pthread_mutex_init411,11049
#undef pthread_mutex_lock412,11075
#undef pthread_mutex_unlock413,11101
#undef pthread_mutex_destroy414,11129
#undef pthread_mutex_wait415,11158
#undef pthread_mutex_timedwait416,11184
#undef pthread_mutex_trylock417,11215
#undef pthread_mutex_t418,11244
#undef pthread_cond_init419,11267
#undef pthread_cond_wait420,11292
#undef pthread_cond_timedwait421,11317
#undef pthread_cond_t422,11347
#undef pthread_attr_getstacksize423,11369
int my_pthread_mutex_init(433,11737
int my_pthread_cond_init(443,11971
int my_pthread_cond_timedwait(468,12725
void my_pthread_attr_getstacksize(485,13156
int my_pthread_mutex_trylock(522,14272
int pthread_no_free(537,14693
int pthread_dummy(542,14770

mysys/my_quick.c,56
uint my_quick_read(23,856
uint my_quick_write(36,1125

mysys/my_read.c,22
uint my_read(37,1125

mysys/my_realloc.c,49
#undef SAFEMALLOC18,801
gptr my_realloc(26,906

mysys/my_redel.c,125
#define USES_TYPES	17,745
struct utimbuf 27,1007
#define REDEL_EXT 42,1324
int my_redel(44,1350
int my_copystat(78,2193

mysys/my_rename.c,72
#define USES_TYPES17,745
#undef my_rename22,832
int my_rename(25,901

mysys/my_seek.c,51
my_off_t my_seek(23,837
my_off_t my_tell(51,1588

mysys/my_semaphore.c,173
int sem_init(28,1020
int sem_destroy(36,1182
int sem_wait(49,1402
int sem_trywait(62,1685
int sem_post(75,1905
int sem_post_multiple(85,2184
int sem_getvalue(95,2489

mysys/my_sleep.c,22
void my_sleep(22,835

mysys/my_static.c,1221
my_string	home_dir=29,979
char		NEAR curr_dir[curr_dir30,1015
ulong		my_stream_opened=32,1090
int		NEAR my_umask=33,1157
int		NEAR my_errno=35,1221
struct my_file_info my_file_info[my_file_info37,1250
int			NEAR my_dont_interrupt=40,1332
volatile int		_my_signals=41,1364
struct st_remember _my_sig_remember[_my_sig_remember42,1393
sigset_t my_signals;44,1465
my_bool key_cache_inited=48,1558
ulong my_default_record_cache_size=51,1613
const char *soundex_map=soundex_map56,1764
USED_MEM* my_once_root_block=59,1844
uint	  my_once_extra=60,1907
int _my_tempnam_used=64,2045
uint sf_malloc_prehunc=68,2101
ulong sf_malloc_cur_memory=72,2321
ulong sf_malloc_max_memory=73,2381
uint  sf_malloc_count=74,2441
byte *sf_min_adress=sf_min_adress75,2507
struct st_irem *sf_malloc_root sf_malloc_root78,2638
int volatile my_have_got_alarm=81,2699
ulong my_time_to_wait_for_lock=82,2765
const char *raid_type_string[raid_type_string89,2947
char * NEAR globerrs[globerrs93,3042
my_bool NEAR my_disable_locking=102,3385
my_bool NEAR my_disable_async_io=103,3420
my_bool NEAR my_disable_flush_key_blocks=104,3456
my_bool NEAR my_disable_symlinks=105,3500
my_bool NEAR mysys_uses_curses=106,3536

mysys/my_symlink.c,156
int my_readlink(34,1122
int my_symlink(68,1749
#define BUFF_LEN 100,2491
#define BUFF_LEN 102,2539
#define BUFF_LEN 104,2573
int my_realpath(107,2605

mysys/my_symlink2.c,110
File my_create_with_symlink(28,1055
int my_delete_with_symlink(88,2432
int my_rename_with_symlink(114,3103

mysys/my_sync.c,21
int my_sync(37,1070

mysys/my_tempnam.c,109
#undef HAVE_TEMPNAM29,1059
#define TMP_EXT 35,1134
#define P_tmpdir 37,1213
my_string my_tempnam(58,1891

mysys/my_thr_init.c,1048
pthread_mutex_t THR_LOCK_malloc,31,1056
pthread_mutex_t THR_LOCK_malloc,THR_LOCK_open,31,1056
pthread_mutex_t THR_LOCK_malloc,THR_LOCK_open,THR_LOCK_keycache,31,1056
	        THR_LOCK_lock,32,1121
	        THR_LOCK_lock,THR_LOCK_isam,32,1121
	        THR_LOCK_lock,THR_LOCK_isam,THR_LOCK_myisam,32,1121
	        THR_LOCK_lock,THR_LOCK_isam,THR_LOCK_myisam,THR_LOCK_heap,32,1121
	        THR_LOCK_net,33,1189
	        THR_LOCK_net, THR_LOCK_charset;33,1189
pthread_mutex_t LOCK_localtime_r;35,1256
pthread_mutex_t LOCK_gethostbyname_r;38,1326
pthread_mutexattr_t my_fast_mutexattr;41,1416
pthread_mutexattr_t my_errchk_mutexattr;44,1509
my_bool my_thread_global_init(58,1702
void my_thread_global_end(102,3133
static long thread_id=128,3952
my_bool my_thread_init(137,4220
void my_thread_end(189,5481
struct st_my_thread_var *_my_thread_var(_my_thread_var224,6376
#define UNKNOWN_THREAD 244,6910
long my_thread_id(246,6937
const char *my_thread_name(my_thread_name258,7226
const char *my_thread_name(my_thread_name265,7291

mysys/my_vsnprintf.c,132
int my_snprintf(24,876
int my_vsnprintf(35,1067
#define OVERRUN_SENTRY 88,2406
static void my_printf(89,2434
int main(108,2812

mysys/my_write.c,22
uint my_write(24,854

mysys/ptr_cmp.c,227
qsort2_cmp get_ptr_compare 33,1385
#define cmp(52,1822
static int ptr_compare(54,1901
static int ptr_compare_0(69,2205
static int ptr_compare_1(90,2496
static int ptr_compare_2(111,2803
static int ptr_compare_3(133,3124

mysys/queues.c,287
int init_queue(29,956
int reinit_queue(50,1539
int resize_queue(82,2279
void delete_queue(99,2727
void queue_insert(113,2956
byte *queue_remove(queue_remove142,3633
void queue_replaced(159,4014
void _downheap(168,4130
static int queue_fix_cmp(199,4919
void queue_fix(211,5223

mysys/rijndael.c,875
Te0[Te039,1238
Te1[Te140,1271
Te2[Te241,1304
Te3[Te342,1337
Te4[Te443,1370
Td0[Td045,1404
Td1[Td146,1437
Td2[Td247,1470
Td3[Td348,1503
Td4[Td449,1536
static const uint32 Te0[Te053,1578
static const uint32 Te1[Te1121,5070
static const uint32 Te2[Te2189,8562
static const uint32 Te3[Te3257,12054
static const uint32 Te4[Te4325,15546
static const uint32 Td0[Td0393,19038
static const uint32 Td1[Td1461,22530
static const uint32 Td2[Td2529,26022
static const uint32 Td3[Td3598,29515
static const uint32 Td4[Td4666,33007
static const uint32 rcon[rcon736,36571
#define RJ_SWAP(745,36775
#define GETuint32(746,36850
#define PUTuint32(747,36897
#define GETuint32(751,36970
#define PUTuint32(753,37092
int rijndaelKeySetupEnc(766,37423
int rijndaelKeySetupDec(863,39684
void rijndaelEncrypt(912,41140
void rijndaelDecrypt(1155,49407

mysys/safemalloc.c,618
#define SAFEMALLOC	64,2843
ulonglong sf_malloc_mem_limit=72,2994
static int sf_malloc_tampered=80,3238
#define ALLOC_VAL	100,3745
#define FREE_VAL	105,3884
#define MAGICKEY	106,3914
#define MAGICEND0	115,4210
#define MAGICEND1	116,4271
#define MAGICEND2	117,4307
#define MAGICEND3	118,4343
gptr _mymalloc(123,4410
gptr _myrealloc(211,7092
void _myfree(258,8487
static int check_ptr(320,10253
void TERMINATE(361,11322
static int _checkchunk(434,13193
int _sanity(477,14440
gptr _my_memdup(507,15308
char *_my_strdup(_my_strdup517,15569
char *_my_strdup_with_length(_my_strdup_with_length528,15865

mysys/sha1.c,271
#define SHA1CircularShift(60,2213
const uint32 sha_const_key[sha_const_key85,2722
int sha1_reset(95,2829
int sha1_result(135,3774
int sha1_input(179,4760
static const uint32  K[K233,6048
static void SHA1ProcessMessageBlock(242,6136
void SHA1PadMessage(345,8607

mysys/string.c,189
my_bool init_dynamic_string(26,894
my_bool dynstr_set(51,1582
my_bool dynstr_realloc(76,2190
my_bool dynstr_append(92,2656
my_bool dynstr_append_mem(98,2780
void dynstr_free(119,3359

mysys/thr_alarm.c,2260
#undef DBUG_OFF18,817
#define DBUG_OFF19,833
#define ETIME 37,1201
static int alarm_aborted=40,1233
my_bool thr_alarm_inited=41,1285
volatile my_bool alarm_thread_running=42,1314
static pthread_mutex_t LOCK_alarm;48,1468
static pthread_cond_t COND_alarm;49,1503
static sigset_t full_signal_set;50,1537
static QUEUE alarm_queue;51,1570
static uint max_used_alarms=52,1596
pthread_t alarm_thread;53,1627
#define reschedule_alarms(57,1715
#define reschedule_alarms(59,1782
static int compare_ulong(66,1997
void init_thr_alarm(73,2189
void resize_thr_alarm(124,3805
my_bool thr_alarm(156,4540
void thr_end_alarm(233,6768
sig_handler process_alarm(279,8003
static sig_handler process_alarm_part2(322,9142
void end_thr_alarm(410,11443
void thr_alarm_kill(465,12859
void thr_alarm_info(487,13346
static sig_handler thread_alarm(509,13978
#define tv_sec 522,14218
#define tv_nsec 523,14240
static void *alarm_handler(alarm_handler529,14367
#define INCL_BASE588,15881
#define INCL_NOPMAPI589,15899
static pthread_mutex_t LOCK_alarm;592,15938
static sigset_t full_signal_set;593,15973
static QUEUE alarm_queue;594,16006
pthread_t alarm_thread;595,16032
static pthread_cond_t COND_alarm;598,16081
#define reschedule_alarms(600,16154
#define reschedule_alarms(602,16221
sig_handler process_alarm(605,16301
void thr_alarm_kill(617,16531
bool thr_alarm(637,16985
bool thr_got_alarm(668,17737
void thr_end_alarm(686,18090
void end_thr_alarm(698,18318
void init_thr_alarm(705,18461
void thr_alarm_info(712,18601
void resize_thr_alarm(717,18682
void thr_alarm_kill(727,18928
sig_handler process_alarm(732,19000
my_bool thr_alarm(738,19091
bool thr_got_alarm(753,19376
void thr_end_alarm(770,19711
void end_thr_alarm(782,19940
void init_thr_alarm(789,20083
void thr_alarm_info(796,20223
void resize_thr_alarm(801,20304
static pthread_cond_t COND_thread_count;817,20665
static pthread_mutex_t LOCK_thread_count;818,20706
static uint thread_count;819,20748
typedef int * fd_set_ptr;822,20789
typedef fd_set * fd_set_ptr;824,20821
static void *test_thread(test_thread827,20871
static sig_handler print_signal_warning(914,23196
static void *signal_hand(signal_hand929,23561
int main(1005,25427
int main(1097,28241

mysys/thr_lock.c,2525
#define DBUG_OFF75,2980
my_bool thr_lock_inited=85,3108
ulong locks_immediate 86,3135
enum thr_lock_type thr_upgraded_concurrent_insert_lock 87,3182
#define MAX_THREADS 90,3306
#define MAX_LOCKS 91,3330
static LIST *thread_list;thread_list94,3356
ulong max_write_lock_count=95,3413
static inline pthread_cond_t *get_cond(get_cond97,3455
my_bool init_thr_lock(106,3622
#define MAX_FOUND_ERRORS	113,3703
static uint found_errors=114,3761
static int check_lock(116,3790
static void check_locks(176,5244
#define check_locks(299,8751
void thr_lock_init(305,8813
void thr_lock_delete(323,9362
void thr_lock_data_init(335,9667
static inline my_bool have_old_read_lock(346,9919
static inline my_bool have_specific_lock(356,10154
static my_bool wait_for_lock(368,10351
int thr_lock(426,11875
static inline void free_all_read_locks(604,18095
void thr_unlock(654,19425
#define LOCK_CMP(803,24268
static void sort_locks(805,24372
int thr_multi_lock(826,24797
void thr_multi_unlock(898,26564
void thr_abort_locks(927,27300
void thr_abort_locks_for_thread(961,28166
my_bool thr_upgrade_write_delay_lock(1005,29271
my_bool thr_reschedule_write_lock(1054,30712
static void thr_print_lock(1090,31664
void thr_print_locks(1112,32243
struct st_test 1157,33473
THR_LOCK locks[locks1162,33542
struct st_test test_0[test_01164,33578
struct st_test test_1[test_11165,33634
struct st_test test_2[test_21166,33724
struct st_test test_3[test_31167,33790
struct st_test test_4[test_41168,33885
struct st_test test_5[test_51169,33964
struct st_test test_6[test_61170,34058
struct st_test test_7[test_71171,34157
struct st_test test_8[test_81172,34198
struct st_test test_9[test_91173,34315
struct st_test test_10[test_101174,34370
struct st_test test_11[test_111175,34412
struct st_test test_12[test_121176,34564
struct st_test test_13[test_131177,34708
struct st_test test_14[test_141178,34862
struct st_test test_15[test_151179,34935
struct st_test test_16[test_161180,35002
struct st_test *tests[tests1182,35083
int lock_counts[lock_counts1185,35252
static pthread_cond_t COND_thread_count;1205,36042
static pthread_mutex_t LOCK_thread_count;1206,36083
static uint thread_count;1207,36125
static ulong sum=1208,36151
#define MAX_LOCK_COUNT 1210,36172
static void test_get_status(1214,36260
static void test_copy_status(1218,36330
static my_bool test_check_status(1223,36443
static void *test_thread(test_thread1229,36531
int main(1277,37862
int main(1378,40771

mysys/thr_mutex.c,751
#define __USE_UNIX98	21,911
#undef SAFE_MUTEX	24,1018
#undef pthread_mutex_t31,1205
#undef pthread_mutex_init32,1228
#undef pthread_mutex_lock33,1254
#undef pthread_mutex_unlock34,1280
#undef pthread_mutex_destroy35,1308
#undef pthread_cond_wait36,1337
#undef pthread_cond_timedwait37,1362
#define pthread_mutex_init(39,1432
static pthread_mutex_t THR_LOCK_mutex;43,1546
static ulong safe_mutex_count=44,1585
static struct st_safe_mutex_info_t *safe_mutex_root=safe_mutex_root46,1685
void safe_mutex_global_init(49,1752
int safe_mutex_init(55,1850
int safe_mutex_lock(92,2878
int safe_mutex_unlock(127,3871
int safe_cond_wait(163,4868
int safe_cond_timedwait(214,6249
int safe_mutex_destroy(252,7402
void safe_mutex_end(312,8880

mysys/thr_rwlock.c,199
int my_rwlock_init(62,2312
int my_rwlock_destroy(79,2708
int my_rw_rdlock(88,2886
int my_rw_tryrdlock(101,3154
int my_rw_wrlock(117,3418
int my_rw_trywrlock(131,3698
int my_rw_unlock(147,3946

mysys/tree.c,679
#define BLACK	46,2026
#define RED	47,2043
#define DEFAULT_ALLOC_SIZE 48,2058
#define DEFAULT_ALIGN_SIZE 49,2090
void init_tree(69,2781
static void free_tree(118,4551
void delete_tree(147,5229
void reset_tree(152,5329
static void delete_tree_element(159,5482
TREE_ELEMENT *tree_insert(tree_insert177,5997
int tree_delete(245,7850
void *tree_search(tree_search306,9423
int tree_walk(326,9821
static int tree_walk_left_root_right(337,10158
static int tree_walk_right_root_left(353,10648
static void left_rotate(372,11200
static void right_rotate(382,11363
static void rb_insert(392,11527
static void rb_delete_fixup(451,12595
static int test_rb_tree(536,14105

mysys/typelib.c,87
int find_type(33,1305
void make_type(86,2555
const char *get_type(get_type101,2840

pstack/bucomm.c,305
char *program_name;program_name39,1220
bfd_nonfatal 42,1246
bfd_fatal 54,1503
fatal 63,1618
fatal 76,1840
#define TARGET	97,2333
set_default_bfd_target 99,2391
list_matching_formats 119,2904
list_supported_targets 131,3121
print_arelt_descr 152,3630
make_tempname 186,4509
parse_vma 224,5322

pstack/debug.c,3924
struct debug_handle39,1461
struct debug_unit71,2654
struct debug_file87,3199
struct debug_type99,3469
struct debug_indirect_type147,4984
struct debug_class_type157,5174
struct debug_enum_type179,5903
struct debug_function_type190,6162
struct debug_range_type202,6443
struct debug_array_type214,6649
struct debug_set_type230,6970
struct debug_offset_type240,7171
struct debug_method_type250,7386
struct debug_named_type264,7751
struct debug_field274,7900
struct debug_baseclass304,8509
struct debug_method318,8845
struct debug_method_variant329,9127
#define VOFFSET_STATIC_METHOD 344,9643
struct debug_variable353,9933
struct debug_function366,10239
struct debug_parameter379,10586
struct debug_typed_constant395,10870
struct debug_block406,11090
struct debug_lineno426,11612
#define DEBUG_LINENO_COUNT 433,11833
struct debug_namespace442,12108
enum debug_object_kind452,12356
  DEBUG_OBJECT_TYPE,455,12398
  DEBUG_OBJECT_TAG,457,12482
  DEBUG_OBJECT_VARIABLE,459,12523
  DEBUG_OBJECT_FUNCTION,461,12569
  DEBUG_OBJECT_INT_CONSTANT,463,12624
  DEBUG_OBJECT_FLOAT_CONSTANT,465,12689
  DEBUG_OBJECT_TYPED_CONSTANT467,12747
enum debug_object_linkage472,12839
  DEBUG_LINKAGE_AUTOMATIC,475,12892
  DEBUG_LINKAGE_STATIC,478,13013
  DEBUG_LINKAGE_GLOBAL,480,13054
  DEBUG_LINKAGE_NONE482,13099
struct debug_name487,13155
struct debug_class_id522,14200
struct debug_type_compare_list535,14515
debug_error 584,16552
debug_add_to_namespace 593,16707
debug_add_to_current_namespace 630,17439
debug_init 656,18083
debug_set_filename 669,18330
debug_start_source 712,19255
debug_record_function 764,20496
debug_record_parameter 823,21819
debug_end_function 863,22677
debug_start_block 897,23555
debug_end_block 937,24491
debug_record_line 969,25174
debug_start_common_block 1029,26715
debug_end_common_block 1041,26933
debug_record_int_const 1053,27154
debug_record_float_const 1077,27629
debug_record_typed_const 1101,28117
debug_record_label 1133,28781
debug_record_variable 1147,29034
debug_make_type 1209,30426
debug_make_indirect_type 1229,30838
debug_make_void_type 1256,31393
debug_make_int_type 1268,31679
debug_make_float_type 1290,32181
debug_make_bool_type 1302,32440
debug_make_complex_type 1314,32697
debug_make_struct_type 1328,33119
debug_make_object_type 1362,34074
debug_make_enum_type 1403,35050
debug_make_pointer_type 1430,35591
debug_make_function_type 1458,36154
debug_make_reference_type 1490,36830
debug_make_range_type 1512,37271
debug_make_array_type 1548,38177
debug_make_set_type 1587,39126
debug_make_offset_type 1620,39889
debug_make_method_type 1652,40700
debug_make_const_type 1686,41482
debug_make_volatile_type 1708,41901
debug_make_undefined_tagged_type 1731,42378
debug_make_baseclass 1771,43426
debug_make_field 1799,44159
debug_make_static_member 1830,44950
debug_make_method 1856,45548
debug_make_method_variant 1883,46412
debug_make_static_method_variant 1915,47240
debug_name_type 1942,47820
debug_tag_type 1992,48941
debug_record_type_size 2049,50220
debug_find_named_type 2068,50559
debug_find_tagged_type 2123,51725
debug_get_real_type 2163,52629
debug_get_type_kind 2185,53121
debug_get_type_name 2198,53362
debug_get_type_size 2217,53812
debug_get_return_type 2248,54533
debug_get_parameter_types 2271,55110
debug_get_target_type 2296,55676
debug_get_fields 2323,56266
debug_get_field_type 2347,56716
debug_get_field_name 2360,56918
debug_get_field_bitpos 2373,57123
debug_get_field_bitsize 2386,57364
debug_get_field_visibility 2399,57623
debug_get_field_physname 2411,57852
debug_write 2424,58180
debug_write_name 2493,59943
debug_write_type 2543,61703
debug_write_class_type 2790,69706
debug_write_function 2942,73393
debug_write_block 2984,74519
debug_write_linenos 3034,75716
debug_set_class_id 3076,76861
debug_type_samep 3140,78110
debug_class_type_samep 3369,84152

pstack/filemode.c,702
filemodestring 66,2219
#define S_IRWXU 78,2424
#define S_IRUSR 81,2468
#define S_IWUSR 84,2512
#define S_IXUSR 87,2556
#define S_IRWXG 91,2601
#define S_IRGRP 94,2645
#define S_IWGRP 97,2689
#define S_IXGRP 100,2733
#define S_IRWXO 104,2778
#define S_IROTH 107,2822
#define S_IWOTH 110,2866
#define S_IXOTH 113,2910
mode_string 120,3048
#define S_ISDIR(150,3942
#define S_ISDIR(152,4021
#define S_ISBLK(158,4166
#define S_ISBLK(160,4245
#define S_ISCHR(166,4364
#define S_ISCHR(168,4443
#define S_ISFIFO(174,4563
#define S_ISFIFO(176,4643
#define S_ISSOCK(182,4766
#define S_ISSOCK(184,4848
#define S_ISLNK(190,4970
#define S_ISLNK(192,5049
ftypelet 197,5149
setst 232,5756

pstack/ieee.c,5754
struct ieee_block36,1202
#define BLOCKSTACK_SIZE 50,1534
struct ieee_blockstack52,1564
struct ieee_var62,1768
      IEEE_UNKNOWN,75,2029
      IEEE_EXTERNAL,76,2049
      IEEE_GLOBAL,77,2070
      IEEE_STATIC,78,2089
      IEEE_LOCAL,79,2108
      IEEE_FUNCTION80,2126
struct ieee_vars86,2210
struct ieee_type97,2466
struct ieee_types112,2885
#define BUILTIN_TYPE_COUNT 119,3030
struct ieee_tag126,3245
struct ieee_info145,3767
enum builtin_types173,4538
  builtin_unknown 175,4559
  builtin_void 176,4582
  builtin_signed_char 177,4602
  builtin_unsigned_char 178,4629
  builtin_signed_short_int 179,4658
  builtin_unsigned_short_int 180,4690
  builtin_signed_long 181,4724
  builtin_unsigned_long 182,4751
  builtin_signed_long_long 183,4780
  builtin_unsigned_long_long 184,4812
  builtin_float 185,4846
  builtin_double 186,4868
  builtin_long_double 187,4891
  builtin_long_long_double 188,4919
  builtin_quoted_string 189,4952
  builtin_instruction_address 190,4982
  builtin_int 191,5018
  builtin_unsigned 192,5038
  builtin_unsigned_int 193,5063
  builtin_char 194,5092
  builtin_long 195,5113
  builtin_short 196,5134
  builtin_unsigned_short 197,5156
  builtin_short_int 198,5187
  builtin_signed_short 199,5213
  builtin_bcd_float 200,5242
#define BASEFLAGS_PRIVATE 209,5550
#define BASEFLAGS_VIRTUAL 211,5619
#define BASEFLAGS_FRIEND 213,5706
#define CXXFLAGS_VISIBILITY 221,6015
#define CXXFLAGS_VISIBILITY_PUBLIC 223,6116
#define CXXFLAGS_VISIBILITY_PRIVATE 225,6225
#define CXXFLAGS_VISIBILITY_PROTECTED 227,6337
#define CXXFLAGS_STATIC 229,6413
#define CXXFLAGS_OVERRIDE 231,6478
#define CXXFLAGS_FRIEND 233,6544
#define CXXFLAGS_CONST 235,6608
#define CXXFLAGS_VOLATILE 237,6674
#define CXXFLAGS_OVERLOADED 239,6746
#define CXXFLAGS_OPERATOR 241,6818
#define CXXFLAGS_CTORDTOR 243,6896
#define CXXFLAGS_CTOR 245,6960
#define CXXFLAGS_INLINE 247,7025
ieee_error 297,9328
ieee_eof 312,9729
savestring 322,9922
ieee_read_number 337,10186
ieee_read_optional_number 349,10477
ieee_read_id 418,11625
ieee_read_optional_id 431,11965
ieee_read_expression 497,13300
#define EXPR_STACK_SIZE 503,13441
ieee_builtin_type 609,15318
ieee_alloc_type 800,20158
ieee_read_type_index 851,21350
parse_ieee 885,22022
parse_ieee_bb 975,23839
parse_ieee_be 1256,30815
parse_ieee_nn 1361,33788
parse_ieee_ty 1409,34824
parse_ieee_atn 2108,51187
ieee_read_cxx_misc 2472,60463
ieee_read_cxx_class 2560,62527
  struct ieee_method2576,62955
ieee_read_cxx_defaults 3227,79101
ieee_read_reference 3334,81562
ieee_require_asn 3507,85238
ieee_require_atn65 3544,86002
ieee_regno_to_genreg 3592,87126
ieee_genreg_to_regno 3621,87666
#define IEEE_BUFSIZE 3654,88391
struct ieee_buf3656,88419
struct ieee_buflist3668,88625
struct ieee_range3680,88923
struct ieee_type_class3692,89143
struct ieee_write_type3716,89910
struct ieee_type_stack3747,90997
struct ieee_name_type3758,91257
struct ieee_name_type_hash_table3774,91745
struct ieee_name_type_hash_entry3779,91814
struct ieee_defined_enum3788,91984
struct ieee_modified_type3807,92389
struct ieee_modified_array_type3823,92839
struct ieee_pending_parm3838,93213
struct ieee_handle3856,93582
static const struct debug_write_fns ieee_fns 4047,102220
ieee_init_buffer 4099,103286
#define ieee_buffer_emptyp(4110,103501
ieee_change_buffer 4115,103642
ieee_append_buffer 4140,104104
#define ieee_write_byte(4159,104560
ieee_real_write_byte 4165,104758
ieee_write_2bytes 4193,105291
ieee_write_number 4204,105494
ieee_write_id 4248,106331
ieee_write_asn 4288,107115
ieee_write_atn65 4301,107414
ieee_push_type 4316,107790
ieee_pop_type 4342,108338
ieee_pop_unused_type 4351,108502
ieee_pop_type_used 4360,108689
ieee_add_range 4418,110177
ieee_start_range 4477,111363
ieee_end_range 4494,111708
ieee_define_type 4512,112058
ieee_define_named_type 4526,112409
ieee_get_modified_info 4613,114721
ieee_name_type_newfunc 4642,115465
#define ieee_name_type_hash_lookup(4672,116273
#define ieee_name_type_hash_traverse(4678,116480
write_ieee_debugging_info 4687,116757
ieee_write_undefined_tag 4834,121037
ieee_start_compilation_unit 4916,122820
ieee_finish_compilation_unit 4980,124437
ieee_add_bb11_blocks 5130,128838
ieee_add_bb11 5175,129764
ieee_start_source 5253,131814
ieee_empty_type 5263,131948
ieee_void_type 5274,132154
ieee_int_type 5285,132360
ieee_float_type 5321,133085
ieee_complex_type 5354,133785
ieee_bool_type 5402,135043
ieee_enum_type 5412,135193
ieee_pointer_type 5544,137871
ieee_function_type 5588,139118
ieee_reference_type 5675,141331
ieee_range_type 5692,141710
ieee_array_type 5717,142407
ieee_set_type 5786,143993
ieee_offset_type 5808,144506
ieee_method_type 5830,145194
ieee_const_type 5851,145684
ieee_volatile_type 5891,146619
ieee_vis_to_flags 5931,147595
ieee_start_struct_type 5953,148177
ieee_struct_field 6060,150784
ieee_end_struct_type 6174,154341
ieee_start_class_type 6235,156203
ieee_class_static_member 6310,158281
ieee_class_baseclass 6347,159386
ieee_class_start_method 6420,161575
ieee_class_method_var 6438,161983
ieee_class_method_variant 6512,164088
ieee_class_static_method_variant 6531,164579
ieee_class_end_method 6547,164984
ieee_end_class_type 6564,165329
ieee_typedef_type 6641,167749
ieee_tag_type 6673,168617
ieee_typdef 6768,170681
ieee_tag 7006,176408
ieee_int_constant 7021,176713
ieee_float_constant 7033,176892
ieee_typed_constant 7045,177063
ieee_variable 7060,177316
ieee_start_function 7183,180629
ieee_function_parameter 7268,183275
ieee_output_pending_parms 7305,184120
ieee_start_block 7395,186366
ieee_end_block 7433,187139
ieee_end_function 7461,187779
ieee_lineno 7509,189259

pstack/linuxthreads.c,58
#define AT_INT(19,273
linuxthreads_notify_others(40,808

pstack/pstack.c,2690
fdprintf(83,2720
fdputc(98,2957
fdputs(107,3053
static	const char*		path_format 119,3227
open_log_file(121,3302
} debug_lineno_t;143,3680
typedef struct debug_block_st 148,3728
} debug_block_t;154,3937
} debug_parameter_t;162,4083
} debug_function_t;178,4519
struct pr_handle181,4608
struct pr_stack200,5120
static const struct debug_write_fns pr_fns 282,9137
indent 334,10107
push_type 346,10298
prepend_type 370,10751
append_type 389,11138
substitute_type 413,11700
indent_type 457,12605
pop_type 474,12848
print_vma 493,13108
pr_start_compilation_unit 519,13611
pr_start_source 535,13916
pr_empty_type 551,14205
pr_void_type 562,14395
pr_int_type 573,14581
pr_float_type 588,14901
pr_complex_type 607,15282
pr_bool_type 622,15559
pr_enum_type 637,15820
pr_pointer_type 698,16923
pr_function_type 715,17300
pr_reference_type 797,18666
pr_range_type 810,18871
pr_array_type 837,19440
pr_set_type 891,20432
pr_offset_type 916,20859
pr_method_type 938,21246
pr_const_type 1039,23203
pr_volatile_type 1050,23389
pr_start_struct_type 1061,23583
pr_fix_visibility 1123,24764
pr_struct_field 1178,25910
pr_end_struct_type 1224,26879
pr_start_class_type 1248,27331
pr_class_static_member 1341,29011
pr_class_baseclass 1373,29707
pr_class_start_method 1472,32030
pr_class_method_variant 1486,32281
pr_class_static_method_variant 1571,34208
pr_class_end_method 1625,35484
pr_end_class_type 1637,35664
pr_typedef_type 1646,35806
pr_tag_type 1658,36023
pr_typdef 1715,37057
pr_tag 1742,37546
pr_int_constant 1764,37867
pr_float_constant 1782,38218
pr_typed_constant 1798,38513
pr_variable 1823,38935
pr_start_function 1874,39913
pr_function_parameter 1922,41128
pr_start_block 1978,42402
pr_lineno 2021,43413
pr_end_block 2061,44405
pr_end_function 2087,44864
} signal_regs_t;2127,45972
signal_regs_t*	ptrace_regs 2129,45990
my_ptrace(2136,46230
#define	MAXARGS	2162,46829
} symbol_data_t;2172,47016
decode_symbol(2178,47104
find_debug_function_t(2215,48041
my_crawl(2296,49995
show_regs(2406,52609
load_bfd(2435,53541
compare_symbols(2475,54406
compare_debug_function_t(2491,54745
remove_useless_symbols(2516,55335
static	bfd*			abfd 2539,55814
static	PTR			dhandle 2540,55838
static	asymbol**		syms 2541,55864
static	long			symcount 2542,55892
static	asymbol**		sorted_syms 2543,55920
static	long			sorted_symcount 2544,55955
static	debug_function_t**	functions 2545,55990
static	int			functions_size 2546,56031
static	int			sigreport 2547,56064
static	pthread_t		segv_tid;2548,56098
static	pid_t			segv_pid;2549,56154
segv_action(2558,56469
report_action(2589,57278
pstack_install_segv_action(2630,58419

pstack/rddbg.c,382
read_debugging_info 45,1707
read_section_stabs_debugging_info 107,3053
read_symbol_stabs_debugging_info 263,6746
read_ieee_debugging_info 343,8259
#define SAVE_STABS_COUNT 376,8980
struct saved_stab378,9011
static struct saved_stab saved_stabs[saved_stabs386,9092
static int saved_stabs_index;387,9148
save_stab 392,9220
stab_context 410,9757
free_saved_stabs 448,10574

pstack/stabs.c,1914
#define BYTES_IN_WORD 38,1401
#define XCOFF_TYPE_COUNT 45,1525
struct stab_handle50,1667
struct stab_pending_var105,3594
struct stab_types122,3926
#define STAB_TYPES_SLOTS 127,4054
struct stab_tag134,4246
savestring 216,7740
parse_number 231,7970
bad_stab 339,9798
warn_stab 348,9936
start_stab 359,10121
finish_stab 385,10795
parse_stab 419,11571
parse_stab_string 693,18926
parse_stab_type 1138,30582
parse_stab_type_number 1603,41185
parse_stab_range_type 1641,41801
#define LLLOW 1704,43302
#define LLHIGH 1705,43344
#define ULLHIGH 1706,43385
parse_stab_sun_builtin_type 1823,47407
parse_stab_sun_floating_type 1896,49336
parse_stab_enum_type 1934,50172
parse_stab_struct_type 2016,52050
parse_stab_baseclasses 2082,54519
parse_stab_struct_fields 2208,57063
parse_stab_cpp_abbrev 2291,58940
parse_stab_one_struct_field 2386,60967
parse_stab_members 2524,64202
parse_stab_argtypes 2845,71618
parse_stab_tilde_field 2972,75262
parse_stab_array_type 3048,76733
struct bincl_file3149,79014
push_bincl 3168,79456
pop_bincl 3197,80135
find_excl 3217,80557
stab_record_variable 3251,81465
stab_emit_pending_vars 3283,82258
stab_find_slot 3310,82734
stab_find_type 3357,83755
stab_record_type 3383,84382
stab_xcoff_builtin_type 3405,84793
stab_find_tagged_type 3584,89558
struct stab_demangle_typestring3650,91517
struct stab_demangle_info3661,91777
stab_bad_demangle 3711,93794
stab_demangle_count 3720,93951
stab_demangle_get_count 3739,94301
stab_demangle_argtypes 3776,94909
stab_demangle_prefix 3824,96075
stab_demangle_function_name 3899,97743
stab_demangle_signature 3945,98894
stab_demangle_qualified 4061,101746
stab_demangle_template 4222,105310
stab_demangle_class 4404,108579
stab_demangle_args 4433,109107
stab_demangle_arg 4516,110551
stab_demangle_type 4554,111392
stab_demangle_fund_type 4809,116355
stab_demangle_remember_type 5063,121974

readline/bind.c,2195
#define READLINE_LIBRARY22,1052
Keymap rl_binding_keymap;106,3143
rl_add_defun 127,3825
rl_bind_key 140,4097
rl_bind_key_in_map 171,4719
rl_unbind_key 189,5079
rl_unbind_key_in_map 198,5242
rl_unbind_function_in_map 207,5422
rl_unbind_command_in_map 225,5720
rl_set_key 241,6107
rl_macro_bind 253,6465
rl_generic_bind 277,7161
rl_translate_keyseq 348,8794
rl_untranslate_keyseq 458,11306
_rl_untranslate_macro_value 504,12020
rl_named_function 554,12846
rl_function_of_keyseq 573,13426
static char *last_readline_init_file last_readline_init_file626,14342
static const char *current_readline_init_file;current_readline_init_file629,14454
static int current_readline_init_include_level;630,14501
static int current_readline_init_lineno;631,14549
_rl_read_file 637,14778
rl_re_read_init_file 685,15698
rl_read_init_file 702,16239
_rl_read_init_file 721,16627
_rl_init_file_error 777,17974
const char *rl_readline_name rl_readline_name794,18438
static unsigned char *if_stack if_stack797,18542
static int if_stack_depth;798,18598
static int if_stack_size;799,18625
parser_if 804,18746
parser_else 877,20997
  register int i;880,21054
  _rl_parsing_conditionalized_out 895,21452
parser_endif 902,21651
parser_include 913,21887
} parser_directives 943,22616
handle_parser_directive 954,22906
rl_parse_and_bind 994,23970
} boolean_varlist 1233,30066
rl_variable_bind 1257,31017
} assoc_list;1384,34338
static assoc_list name_key_alist[name_key_alist1386,34353
glean_key_from_name 1402,34654
} keymap_names[keymap_names1418,35022
rl_get_keymap_by_name 1433,35440
rl_get_keymap_name 1445,35676
rl_set_keymap 1456,35885
rl_get_keymap 1464,35967
rl_set_keymap_from_edit_mode 1470,36017
rl_get_keymap_name_from_edit_mode 1481,36264
rl_list_funmap_names 1506,37038
_rl_get_keyname 1523,37308
rl_invoking_keyseqs_in_map 1598,39177
rl_invoking_keyseqs 1698,41523
rl_function_dumper 1708,41823
rl_dump_functions 1778,43234
_rl_macro_dumper_internal 1789,43476
rl_macro_dumper 1856,44937
rl_dump_macros 1863,45076
rl_variable_dumper 1874,45302
rl_dump_variables 1953,47774
_rl_bind_if_unbound 1965,48078
substring_member_of_array 1981,48473

readline/callback.c,244
#define READLINE_LIBRARY22,1049
VFunction *rl_linefunc;rl_linefunc64,2411
static int in_handler;65,2465
_rl_callback_newline 69,2615
rl_callback_handler_install 89,2946
rl_callback_read_char 101,3273
rl_callback_handler_remove 137,4096

readline/complete.c,2818
#define READLINE_LIBRARY22,1027
VFunction *rl_completion_display_matches_hook rl_completion_display_matches_hook95,2911
#    define X_OK 103,3198
int _rl_complete_show_all 129,3939
int _rl_complete_mark_directories 132,4039
int _rl_print_completions_horizontally;136,4175
int _rl_completion_case_fold;139,4290
int rl_visible_stats 147,4613
Function *rl_directory_completion_hook rl_directory_completion_hook153,4869
int rl_complete_with_tilde_expansion 156,5005
Function *rl_completion_entry_function rl_completion_entry_function161,5204
CPPFunction *rl_attempted_completion_function rl_attempted_completion_function170,5624
int rl_attempted_completion_over 174,5819
int rl_completion_type 179,6019
int rl_completion_query_items 184,6215
const char *rl_basic_word_break_characters rl_basic_word_break_characters189,6445
const char *rl_basic_quote_characters rl_basic_quote_characters192,6556
const char *rl_completer_word_break_characters rl_completer_word_break_characters197,6769
char *rl_completer_quote_characters rl_completer_quote_characters203,7100
char *rl_filename_quote_characters rl_filename_quote_characters206,7231
char *rl_special_prefixes rl_special_prefixes211,7489
int rl_ignore_completion_duplicates 214,7592
int rl_filename_completion_desired 219,7823
int rl_filename_quoting_desired 226,8183
Function *rl_ignore_some_completions_function rl_ignore_some_completions_function237,8825
CPFunction *rl_filename_quoting_function rl_filename_quoting_function243,9149
CPFunction *rl_filename_dequoting_function rl_filename_dequoting_function249,9482
Function *rl_char_is_quoted_p rl_char_is_quoted_p254,9706
int rl_completion_append_character 258,9858
int rl_inhibit_completion;261,9954
static int completion_changed_buffer;266,10097
rl_complete 278,10501
rl_possible_completions 293,10959
     int ignore __attribute__((unused)), invoking_key 294,11006
rl_insert_completions 300,11133
     int ignore __attribute__((unused)), invoking_key 301,11178
rl_strpbrk 315,11582
get_y_or_n 335,11935
stat_char 362,12485
printable_part 414,13723
#define PUTX(427,14115
print_filename 449,14533
rl_quote_filename 514,15956
     char *qcp;qcp517,16044
  char *r;r519,16062
  r 521,16074
  *r r522,16106
find_completion_word 545,17244
gen_completion_matches 660,20631
remove_duplicate_matches 703,21959
compute_lcd_of_matches 764,23541
postprocess_matches 826,24933
rl_display_match_list 883,26579
display_matches 971,29244
make_quoted_replacement 1039,30742
insert_match 1084,32436
append_to_match 1119,33570
insert_all_matches 1163,34616
free_match_list 1202,35426
rl_complete_internal 1220,35906
completion_matches 1359,40111
username_completion_function 1404,41324
filename_completion_function 1459,42674
rl_menu_complete 1636,47284

readline/display.c,2302
#define READLINE_LIBRARY22,1021
static int *inv_lbreaks,inv_lbreaks98,2902
static int *inv_lbreaks, *vis_lbreaks;vis_lbreaks98,2902
#define CR_FASTER(104,3127
VFunction *rl_redisplay_function rl_redisplay_function134,4485
int rl_display_fixed 138,4642
int _rl_suppress_redisplay 140,4669
const char *rl_display_prompt rl_display_prompt144,4818
int _rl_last_c_pos 148,4983
int _rl_last_v_pos 149,5007
int _rl_vis_botlin 152,5083
static int last_lmargin;157,5290
static char *visible_line visible_line161,5449
static char *invisible_line invisible_line162,5491
static char msg_buf[msg_buf165,5576
static int forced_display;168,5678
static int line_size 171,5756
static char *local_prompt,local_prompt173,5786
static char *local_prompt, *local_prompt_prefix;local_prompt_prefix173,5786
static int visible_length,174,5835
static int visible_length, prefix_length;174,5835
static int visible_wrap_offset;178,5975
static int wrap_offset;181,6078
static int last_invisible;184,6173
static int visible_first_line_len;188,6321
expand_prompt 203,6938
rl_expand_prompt 271,8486
rl_redisplay 312,9535
#define CHECK_LPOS(422,12778
#define W_OFFSET(581,16653
#define VIS_LLEN(582,16711
#define INV_LLEN(583,16796
#define VIS_CHARS(584,16852
#define VIS_LINE(585,16911
#define INV_LINE(586,16983
#define M_OFFSET(682,20548
update_line 808,25044
rl_on_new_line 1019,32150
rl_forced_update_display 1034,32444
_rl_move_cursor_relative 1053,32853
_rl_move_vert 1109,34606
rl_show_char 1146,35465
rl_character_len 1174,35971
rl_message 1205,36535
rl_message 1232,36971
rl_clear_message 1243,37219
rl_reset_line_state 1251,37324
static char *saved_local_prompt;saved_local_prompt1260,37458
static char *saved_local_prefix;saved_local_prefix1261,37491
static int saved_last_invisible;1262,37524
static int saved_visible_length;1263,37557
rl_save_prompt 1266,37596
rl_restore_prompt 1278,37877
_rl_make_prompt_for_search 1292,38178
_rl_erase_at_end_of_line 1326,38952
_rl_clear_to_eol 1343,39309
space_to_eol 1357,39647
_rl_clear_screen 1369,39800
insert_some_chars 1381,40046
delete_chars 1436,41469
_rl_update_final 1470,42190
cr 1501,43095
_rl_redisplay_after_sigwinch 1512,43284
_rl_clean_up_for_exit 1555,44365
_rl_erase_entire_line 1567,44563

readline/emacs_keymap.c,146
KEYMAP_ENTRY_ARRAY emacs_standard_keymap 33,1270
KEYMAP_ENTRY_ARRAY emacs_meta_keymap 328,13568
KEYMAP_ENTRY_ARRAY emacs_ctlx_keymap 608,24198

readline/funmap.c,501
#define READLINE_LIBRARY22,1018
FUNMAP **funmap;funmap45,1399
static int funmap_size;46,1416
static int funmap_entry;47,1440
int funmap_program_specific_entry_start;51,1570
static FUNMAP default_funmap[default_funmap53,1612
rl_add_funmap_entry 183,6907
static int funmap_initialized;199,7337
rl_initialize_funmap 203,7432
rl_funmap_names 221,7934
const char *possible_control_prefixes[possible_control_prefixes246,8595
const char *possible_meta_prefixes[possible_meta_prefixes250,8685

readline/histexpand.c,1330
#define READLINE_LIBRARY23,981
#define HISTORY_WORD_DELIMITERS	53,1458
#define HISTORY_QUOTE_CHARACTERS	54,1506
static char error_pointer;56,1547
static char *subst_lhs;subst_lhs58,1575
static char *subst_rhs;subst_rhs59,1599
static int subst_lhs_len;60,1623
static int subst_rhs_len;61,1649
char history_expansion_char 76,2027
char history_subst_char 80,2172
char history_comment_char 86,2493
const char *history_no_expand_chars history_no_expand_chars90,2651
int history_quotes_inhibit_expansion 94,2798
Function *history_inhibit_expansion_function;history_inhibit_expansion_function98,2966
static char *search_string;search_string110,3394
static char *search_match;search_match113,3476
get_history_event 126,4108
#define RETURN_ENTRY(160,4872
#define FAIL_SEARCH(222,6477
#undef FAIL_SEARCH274,7662
#undef RETURN_ENTRY275,7681
hist_string_extract_single_quoted 286,8084
quote_breaks 299,8289
hist_error(341,8876
get_subst_pattern 400,10297
postproc_subst_rhs 437,10992
history_expand_internal 474,12030
#define ADD_STRING(781,19336
#define ADD_CHAR(796,19619
history_expand 807,19813
get_history_word_specifier 1057,26091
history_arg_extract 1155,28611
#define slashify_in_quotes 1215,29813
history_tokenize_internal 1222,30093
history_tokenize 1333,32635
history_find_word 1343,32937

readline/histfile.c,303
#define READLINE_LIBRARY26,1183
#    define O_BINARY 59,1716
#  undef O_BINARY63,1848
#  define O_BINARY 64,1866
history_filename 84,2333
read_history 118,3073
read_history_range 130,3512
history_truncate_file 222,5455
history_do_write 304,7430
append_history 361,8891
write_history 372,9210

readline/history.c,791
#define READLINE_LIBRARY26,1168
#define DEFAULT_HISTORY_GROW_SIZE 59,1738
static HIST_ENTRY **the_history the_history68,2052
static int history_stifled;72,2201
int max_input_history;76,2327
int history_offset;80,2462
int history_length;83,2549
static int history_size;86,2636
int history_base 89,2728
history_get_history_state 93,2822
history_set_history_state 111,3230
using_history 125,3601
history_total_bytes 133,3795
where_history 148,4125
history_set_pos 156,4307
history_list 169,4678
current_history 177,4880
previous_history 188,5200
next_history 197,5474
history_get 205,5727
add_history 219,6050
replace_history_entry 278,7565
remove_history 302,8136
stifle_history 325,8591
unstifle_history 357,9325
history_is_stifled 369,9482
clear_history 375,9542

readline/histsearch.c,261
#define READLINE_LIBRARY23,990
const char *history_search_delimiter_chars history_search_delimiter_chars55,1634
history_search_internal 68,2257
#define NEXT_LINE(91,2779
history_search 164,4183
history_search_prefix 173,4416
history_search_pos 184,4750

readline/input.c,640
#define READLINE_LIBRARY22,1018
#  define O_NDELAY 72,2063
Function *rl_event_hook rl_event_hook105,2914
Function *rl_getc_function rl_getc_function107,2959
static int pop_index,115,3220
static int pop_index, push_index;115,3220
static unsigned char ibuffer[ibuffer116,3254
static int ibuffer_len 117,3289
#define any_typein 119,3337
_rl_any_typein 122,3387
ibuffer_space 130,3527
rl_get_char 142,3834
rl_unget_char 160,4167
int waiting_char 175,4401
rl_gather_tyi 181,4558
_rl_input_available 275,6698
_rl_insert_typein 312,7451
rl_stuff_char 338,7971
rl_execute_next 358,8285
rl_read_key 373,8617
rl_getc 410,9232

readline/isearch.c,464
#define READLINE_LIBRARY27,1168
unsigned char *_rl_isearch_terminators _rl_isearch_terminators52,1574
static char *prev_line_found;prev_line_found72,2161
rl_reverse_search_history 77,2323
rl_forward_search_history 86,2559
rl_display_search 98,2967
  char *message;message103,3107
  int msglen,104,3124
  int msglen, searchlen;104,3124
  searchlen 106,3150
  message 108,3229
  msglen 109,3267
  message[message119,3443
rl_search_history 148,4106

readline/keymaps.c,137
#define READLINE_LIBRARY21,939
rl_make_bare_keymap 56,1688
rl_copy_keymap 78,2141
rl_make_keymap 96,2600
rl_discard_keymap 126,3331

readline/kill.c,861
#define READLINE_LIBRARY22,999
#define DEFAULT_MAX_KILLS 68,2073
static int rl_max_kills 71,2171
static char **rl_kill_ring rl_kill_ring74,2252
static int rl_kill_index;77,2334
static int rl_kill_ring_length;80,2408
rl_set_retained_kills 85,2527
_rl_copy_to_kill_ring 95,2886
rl_kill_text 169,4690
rl_kill_word 204,5543
rl_backward_kill_word 225,5931
rl_kill_line 245,6349
rl_backward_kill_line 265,6800
rl_kill_full_line 287,7172
rl_unix_word_rubout 304,7706
rl_unix_line_discard 337,8533
region_kill_internal 353,8886
rl_copy_region_to_kill 375,9293
rl_kill_region 383,9482
_rl_copy_word_as_kill 396,9756
rl_copy_forward_word 425,10151
rl_copy_backward_word 435,10328
rl_yank 446,10569
rl_yank_pop 465,11054
rl_yank_nth_arg_internal 499,11860
rl_yank_nth_arg 556,12899
rl_yank_last_arg 566,13205
rl_paste_from_clipboard 608,14114

readline/macro.c,709
#define READLINE_LIBRARY22,1008
#define SWAP(49,1524
int _rl_defining_kbd_macro 70,2160
char *_rl_executing_macro _rl_executing_macro74,2323
static int executing_macro_index;77,2437
static char *current_macro current_macro81,2573
static int current_macro_size;84,2674
static int current_macro_index;87,2776
struct saved_macro 91,2923
static struct saved_macro *macro_list macro_list98,3044
_rl_with_macro_input 103,3219
_rl_next_macro_key 113,3468
_rl_push_executing_macro 129,3815
_rl_pop_executing_macro 144,4188
_rl_add_macro_char 166,4650
_rl_kill_kbd_macro 182,5012
rl_start_kbd_macro 208,5663
rl_end_kbd_macro 233,6206
rl_call_last_kbd_macro 252,6652
rl_push_macro_input 270,7043

readline/nls.c,169
#define READLINE_LIBRARY22,1012
static char *legal_lang_values[legal_lang_values60,1878
_rl_init_eightbit 85,2353
normalize_codeset 132,3636
find_codeset 179,4564

readline/parens.c,216
#define READLINE_LIBRARY22,1039
rl_insert_close 30,1146
#  define HAVE_SELECT46,1439
int rl_blink_matching_paren 73,2041
int rl_blink_matching_paren 75,2099
rl_insert_close 81,2198
find_matching_open 120,3202

readline/readline.c,5717
#define READLINE_LIBRARY23,1083
#  define INCL_DOSPROCESS58,1729
#  define RL_LIBRARY_VERSION 67,1905
#define SWAP(71,1994
#  undef HANDLE_SIGNALS173,4953
const char *rl_library_version rl_library_version184,5257
Keymap _rl_keymap 188,5415
int rl_editing_mode 191,5495
int rl_dispatching;196,5716
int _rl_last_command_was_kill 199,5796
int rl_numeric_arg 202,5903
int rl_explicit_arg 205,5969
int rl_arg_sign 208,6053
static int rl_initialized;211,6138
static int running_in_emacs;214,6229
int rl_point;217,6311
int rl_mark;220,6364
int rl_end;223,6418
int rl_done;226,6490
Function *rl_last_func rl_last_func229,6550
procenv_t readline_top_level;232,6648
FILE *_rl_in_stream,_rl_in_stream235,6715
FILE *_rl_in_stream, *_rl_out_stream;_rl_out_stream235,6715
FILE *rl_instream rl_instream238,6817
FILE *rl_outstream rl_outstream239,6851
int readline_echoing_p 242,6942
char *rl_prompt;rl_prompt245,6993
int rl_visible_prompt_length 246,7010
int rl_key_sequence_length 249,7121
Function *rl_startup_hook rl_startup_hook253,7287
Function *rl_pre_input_hook rl_pre_input_hook258,7503
static char *the_line;the_line261,7626
int _rl_eof_char 265,7761
int rl_pending_input 268,7847
char *rl_terminal_name rl_terminal_name271,7915
int _rl_horizontal_scroll_mode 274,8028
int _rl_mark_modified_lines 278,8169
int _rl_bell_preference 282,8318
char *_rl_comment_begin;_rl_comment_begin285,8420
Keymap rl_executing_keymap;288,8506
int rl_erase_empty_line 291,8618
char *rl_line_buffer rl_line_buffer294,8683
int rl_line_buffer_len 295,8720
unsigned char _rl_parsing_conditionalized_out 307,9120
int _rl_convert_meta_chars_to_ascii 312,9339
int _rl_output_meta_chars 316,9505
int _rl_meta_flag 325,9815
readline 330,10009
#  define STATIC_CALLBACK364,10598
#  define STATIC_CALLBACK 366,10630
readline_internal_setup 370,10692
readline_internal_teardown 401,11252
readline_internal_char 432,12048
readline_internal_charloop 515,14077
readline_internal 529,14404
_rl_init_line_state 539,14561
_rl_set_the_line 547,14667
_rl_dispatch 556,14877
rl_initialize 656,17221
_emx_build_environ 694,18075
readline_initialize_everything 718,18510
readline_default_bindings 790,20594
bind_arrow_keys_internal 796,20683
bind_arrow_keys 823,21598
rl_digit_loop 849,22145
rl_digit_argument 916,23620
     int ignore __attribute__((unused)), key;917,23652
  rl_pending_input 919,23700
rl_discard_argument 925,23815
_rl_init_argument 935,23950
rl_universal_argument 946,24251
     int count __attribute__((unused)), key 947,24286
  rl_numeric_arg 949,24357
rl_insert_text 963,24772
rl_delete_text 996,25644
#define _RL_FIX_POINT(1036,26514
_rl_fix_point 1045,26635
#undef _RL_FIX_POINT1052,26768
_rl_replace_text 1055,26795
rl_forward 1101,28312
rl_backward 1128,28737
rl_beg_of_line 1148,29027
     int count __attribute__((unused)), key 1149,29055
  rl_point 1151,29126
rl_end_of_line 1157,29196
     int count __attribute__((unused)), key 1158,29224
  rl_point 1160,29295
rl_forward_word 1166,29386
rl_backward_word 1209,30148
rl_refresh_line 1254,30856
     int ignore1 __attribute__((unused)), ignore2 1255,30891
  int curr_line,1257,30968
  int curr_line, nleft;1257,30968
    nleft 1264,31203
    curr_line 1269,31311
    int row,1276,31456
    int row, col,1276,31456
    int row, col, width,1276,31456
    int row, col, width, row_start;1276,31456
    ScreenGetCursor (&row, &col)col1278,31493
    width 1279,31527
    row_start 1280,31554
  rl_display_fixed 1288,31798
rl_clear_screen 1297,32018
rl_arrow_keys 1314,32302
  int ch;1317,32372
  ch 1319,32383
rl_insert 1354,33034
rl_quoted_insert 1418,34233
  int c;1421,34310
  c 1423,34320
rl_tab_insert 1429,34414
rl_newline 1439,34696
     int count __attribute__((unused)), key 1440,34720
  rl_done 1442,34791
rl_do_lowercase_version 1467,35452
     int ignore1 __attribute__((unused)), ignore2 1468,35495
rl_rubout 1475,35632
rl_delete 1514,36356
rl_rubout_or_delete 1543,37054
rl_delete_horizontal_space 1554,37286
     int count __attribute__((unused)), ignore 1555,37329
  int start 1557,37403
  start 1562,37503
rl_delete_or_show_completions 1579,37951
#define RL_COMMENT_BEGIN_DEFAULT 1589,38189
rl_insert_comment 1595,38331
     int count __attribute__((unused)), key;1596,38362
#define UpCase 1613,38863
#define DownCase 1614,38880
#define CapCase 1615,38899
rl_upcase_word 1621,38988
rl_downcase_word 1629,39148
rl_capitalize_word 1637,39327
rl_change_case 1649,39701
rl_transpose_words 1700,40697
rl_transpose_chars 1761,42146
  char dummy[dummy1764,42225
  dummy[dummy1784,42463
  dummy[dummy1785,42496
_rl_char_search_internal 1804,42883
_rl_char_search 1841,43638
rl_char_search 1854,43880
rl_backward_char_search 1861,44012
HIST_ENTRY *saved_line_for_history saved_line_for_history1879,44621
start_using_history 1883,44760
_rl_free_history_entry 1894,45012
maybe_replace_line 1906,45224
maybe_unsave_line 1923,45641
maybe_save_line 1947,46222
rl_beginning_of_history 1966,46759
     int count __attribute__((unused)), key;1967,46796
rl_end_of_history 1974,46980
     int count __attribute__((unused)), key 1975,47011
rl_get_next_history 1985,47212
rl_get_previous_history 2031,48120
_rl_set_mark_at_pos 2094,49506
rl_set_mark 2106,49682
rl_exchange_point_and_mark 2114,49877
     int count __attribute__((unused)), key 2115,49917
rl_vi_editing_mode 2138,50419
     int count __attribute__((unused)), key;2139,50451
  rl_editing_mode 2142,50520
rl_emacs_editing_mode 2149,50622
     int count __attribute__((unused)), key 2150,50657
  rl_editing_mode 2152,50728
  _rl_keymap 2153,50760

readline/rltty.c,1597
#define READLINE_LIBRARY23,1047
#  undef HANDLE_SIGNALS60,1689
VFunction *rl_prep_term_function rl_prep_term_function66,1866
VFunction *rl_deprep_term_function rl_deprep_term_function67,1919
static sigset_t sigint_set,76,2222
static sigset_t sigint_set, sigint_oset;76,2222
static int sigint_oldmask;79,2328
static int sigint_blocked;83,2421
block_sigint 88,2553
release_sigint 112,3160
static int terminal_prepped;139,3884
static int ksrflow;144,4038
set_winsize 151,4205
set_winsize 161,4362
#define SGTTY_SET	173,4676
#define LFLAG_SET	174,4699
#define TCHARS_SET	175,4722
#define LTCHARS_SET	176,4746
struct bsdtty 178,4772
#define TIOTYPE 190,5177
static TIOTYPE otio;192,5208
get_tty_settings 195,5241
set_tty_settings 225,5765
prepare_terminal_settings 264,6471
#  define ANYP 292,7355
#  define VMIN 340,8723
#  define VTIME 344,8772
#  define TIOTYPE 348,8834
#  define DRAIN_OUTPUT(349,8867
#  define GETATTR(350,8907
#    define SETATTR(352,8976
#    define SETATTR(354,9048
#  define TIOTYPE 357,9143
#  define DRAIN_OUTPUT(358,9175
#  define GETATTR(359,9202
#  define SETATTR(360,9259
static TIOTYPE otio;363,9350
#  define OUTPUT_BEING_FLUSHED(366,9393
#  define OUTPUT_BEING_FLUSHED(368,9458
rltty_warning 373,9577
setopost(383,9702
get_tty_settings 395,9888
set_tty_settings 434,10435
prepare_terminal_settings 467,10948
rl_prep_terminal 530,12537
rl_deprep_terminal 573,13250
rl_restart_output 610,13922
rl_stop_output 643,14640
rltty_set_default_bindings 676,15421
#define SET_SPECIAL(684,15559
#define SET_SPECIAL(713,16204

readline/search.c,608
#define READLINE_LIBRARY23,1027
#  undef abs47,1378
#define abs(49,1398
static char *noninc_search_string noninc_search_string66,1903
static int noninc_history_pos;67,1954
static char *prev_line_found prev_line_found68,1985
noninc_search_from_pos 76,2385
noninc_dosearch 101,2922
noninc_search 156,4407
#define SEARCH_RETURN 174,4748
rl_noninc_forward_search 250,6255
rl_noninc_reverse_search 259,6496
rl_noninc_forward_search_again 268,6760
rl_noninc_reverse_search_again 283,7127
rl_history_search_internal 296,7380
rl_history_search_forward 353,8673
rl_history_search_backward 366,9102

readline/shell.c,133
#define READLINE_LIBRARY23,1093
single_quote 65,1893
set_lines_and_columns 96,2419
get_env_value 121,2917
get_home_dir 128,3010

readline/signals.c,1291
#define READLINE_LIBRARY22,1030
#  undef HANDLE_SIGNALS44,1482
#    define RETSIGTYPE 54,1698
#    define RETSIGTYPE 56,1734
#  define SIGHANDLER_RETURN 61,1849
#  define SIGHANDLER_RETURN 63,1890
typedef RETSIGTYPE SigHandler 68,2063
int rl_catch_signals 88,2692
int rl_catch_sigwinch 92,2807
static int signals_set_flag;95,2842
static int sigwinch_set_flag;96,2871
typedef struct sigaction sighandler_cxt;105,3171
#  define rl_sigaction(106,3212
typedef struct { SigHandler *sa_handler; int sa_mask, sa_flags; } sighandler_cxt;108,3273
#  define sigemptyset(109,3355
static sighandler_cxt old_int,112,3414
static sighandler_cxt old_int, old_term,112,3414
static sighandler_cxt old_int, old_term, old_alrm,112,3414
static sighandler_cxt old_int, old_term, old_alrm, old_quit;112,3414
static sighandler_cxt old_tstp,114,3497
static sighandler_cxt old_tstp, old_ttou,114,3497
static sighandler_cxt old_tstp, old_ttou, old_ttin;114,3497
static sighandler_cxt old_winch;117,3579
rl_signal_handler 123,3680
rl_sigwinch_handler 187,5372
rl_sigaction 217,6195
rl_set_sighandler 230,6534
rl_maybe_set_sighandler 250,7006
rl_set_signals 265,7338
rl_clear_signals 315,8921
rl_cleanup_after_signal 358,9922
rl_reset_after_signal 368,10143
rl_free_line_state 379,10498

readline/terminal.c,2307
#define READLINE_LIBRARY22,1020
static char *term_buffer term_buffer86,2479
static char *term_string_buffer term_string_buffer87,2520
static int tcap_initialized;89,2569
static int dumb_term;92,2660
char *term_goto,term_goto102,2931
char *term_goto, *term_clreol,term_clreol102,2931
char *term_goto, *term_clreol, *term_clrpag,term_clrpag102,2931
char *term_goto, *term_clreol, *term_clrpag, *term_backspace;term_backspace102,2931
char *term_cr,term_cr103,2993
char *term_cr, *term_pc;term_pc103,2993
int terminal_can_insert 106,3096
char *term_im,term_im109,3158
char *term_im, *term_ei,term_ei109,3158
char *term_im, *term_ei, *term_ic,term_ic109,3158
char *term_im, *term_ei, *term_ic, *term_ip,term_ip109,3158
char *term_im, *term_ei, *term_ic, *term_ip, *term_IC;term_IC109,3158
char *term_dc,term_dc112,3246
char *term_dc, *term_DC;term_DC112,3246
char *term_forward_char;term_forward_char115,3306
char *term_up;term_up119,3393
static char *visible_bell;visible_bell122,3480
int _rl_term_autowrap;125,3563
static int term_has_meta;128,3643
static char *term_mm,term_mm132,3764
static char *term_mm, *term_mo;term_mo132,3764
static char *term_ku,term_ku135,3873
static char *term_ku, *term_kd,term_kd135,3873
static char *term_ku, *term_kd, *term_kr,term_kr135,3873
static char *term_ku, *term_kd, *term_kr, *term_kl;term_kl135,3873
static char *term_ks,term_ks138,4002
static char *term_ks, *term_ke;term_ke138,4002
static char *term_kh,term_kh141,4098
static char *term_kh, *term_kH;term_kH141,4098
int screenwidth,144,4206
int screenwidth, screenheight,144,4206
int screenwidth, screenheight, screenchars;144,4206
int _rl_enable_keypad;147,4309
int _rl_enable_meta 150,4391
_rl_get_screen_size 157,4719
_rl_set_screen_size 223,6304
rl_resize_terminal 238,6553
struct _tc_string 247,6710
static struct _tc_string tc_strings[tc_strings254,6888
#define NUM_TC_STRINGS 284,7506
get_term_capabilities 289,7713
_rl_init_terminal_io 300,7921
rl_get_termcap 424,11497
rl_reset_terminal 442,11922
_rl_output_character_function 452,12099
_rl_output_character_function 459,12201
_rl_output_some_chars 467,12375
_rl_backspace 476,12530
crlf 494,12889
ding 506,13106
_rl_enable_meta_key 544,13865
_rl_control_keypad 551,13985

readline/tilde.c,780
#define savestring(59,1614
#    define NULL 64,1746
#    define NULL 66,1784
static const char *default_prefixes[default_prefixes85,2437
static const char *default_suffixes[default_suffixes91,2697
CPFunction *tilde_expansion_preexpansion_hook tilde_expansion_preexpansion_hook98,3065
CPFunction *tilde_expansion_failure_hook tilde_expansion_failure_hook104,3429
const char ** tilde_additional_prefixes 109,3645
const char **tilde_additional_suffixes tilde_additional_suffixes114,3865
tilde_find_prefix 120,4159
tilde_find_suffix 153,4850
tilde_expand 178,5380
isolate_tilde_prefix 245,7281
glue_prefix_and_suffix 264,7649
tilde_expand_word 284,8234
#undef NULL362,10333
main 365,10365
xmalloc 398,10894
xrealloc 409,11046
memory_error_and_abort 427,11306

readline/undo.c,446
#define READLINE_LIBRARY23,1083
#define SWAP(50,1599
int _rl_doing_an_undo 54,1752
int _rl_undo_group_level 57,1835
UNDO_LIST *rl_undo_list rl_undo_list60,1908
rl_add_undo 71,2254
free_undo_list 87,2599
rl_do_undo 105,2973
#define TRANS(111,3067
#undef TRANS167,4304
_rl_fix_last_undo_of_type 170,4322
rl_begin_undo_group 189,4657
rl_end_undo_group 198,4825
rl_modifying 207,4985
rl_revert_line 228,5409
rl_undo_command 243,5660

readline/util.c,909
#define READLINE_LIBRARY22,1016
#define SWAP(55,1668
int _rl_allow_pathname_alphabetic_chars 83,2540
static const char *pathname_alphabetic_chars pathname_alphabetic_chars84,2585
alphabetic 87,2649
_rl_abort_internal 99,2853
rl_abort 116,3144
rl_tty_status 123,3268
rl_copy_text 138,3584
rl_extend_line_buffer 158,3993
rl_tilde_expand 173,4281
_rl_strindex 231,5758
_rl_strnicmp 246,6127
_rl_stricmp 266,6459
_rl_qsort_string_compare 284,6830
#undef _rl_uppercase_p301,7133
_rl_uppercase_p 303,7160
#undef _rl_lowercase_p309,7221
_rl_lowercase_p 311,7248
#undef _rl_pure_alphabetic317,7309
_rl_pure_alphabetic 319,7340
#undef _rl_digit_p325,7420
_rl_digit_p 327,7443
#undef _rl_to_lower333,7500
_rl_to_lower 335,7524
#undef _rl_to_upper341,7600
_rl_to_upper 343,7624
#undef _rl_digit_value349,7700
_rl_digit_value 351,7727
#undef _rl_savestring359,7914
_rl_savestring 361,7943

readline/vi_keymap.c,144
KEYMAP_ENTRY_ARRAY vi_movement_keymap 34,1224
KEYMAP_ENTRY_ARRAY vi_insertion_keymap 314,10963
KEYMAP_ENTRY_ARRAY vi_escape_keymap 599,22998

readline/vi_mode.c,3921
#define READLINE_LIBRARY23,1087
#define _rl_digit_p(58,1758
#define _rl_digit_value(62,1841
#define member(66,1903
#define isident(70,2002
#define exchange(74,2105
static int _rl_vi_doing_insert;98,2738
static const char *vi_motion vi_motion101,2829
static Keymap vi_replace_map;105,2973
static int vi_replace_count;108,3075
static int vi_continued_command;113,3312
static char *vi_insert_buffer;vi_insert_buffer114,3345
static int vi_insert_buffer_size;115,3376
static int _rl_vi_last_command 117,3411
static int _rl_vi_last_repeat 118,3491
static int _rl_vi_last_arg_sign 119,3526
static int _rl_vi_last_motion;120,3563
static int _rl_vi_last_search_char;121,3594
static int _rl_vi_last_replacement;122,3630
static int _rl_vi_last_key_before_insert;124,3667
static int vi_redoing;126,3710
static const char *vi_textmod vi_textmod129,3804
static int vi_mark_chars[vi_mark_chars132,3898
_rl_vi_initialize_line 137,3965
_rl_vi_reset_last 150,4175
_rl_vi_set_last 159,4315
_rl_vi_textmod_command 169,4539
_rl_vi_stuff_insert 176,4630
rl_vi_redo 189,4973
  vi_redoing 198,5162
  vi_redoing 210,5574
rl_vi_undo 217,5657
rl_vi_yank_arg 225,5823
rl_vi_fetch_history 241,6255
rl_vi_search_again 266,6974
rl_vi_search 284,7262
rl_vi_complete 306,7589
     int ignore __attribute__((unused)), key;307,7618
rl_vi_tilde_expand 335,8328
     int ignore __attribute__((unused)), key;336,8361
rl_vi_prev_word 346,8574
rl_vi_next_word 368,8901
rl_vi_end_word 389,9252
rl_vi_fWord 407,9531
rl_vi_bWord 424,9929
rl_vi_eWord 448,10509
rl_vi_fword 478,11246
rl_vi_bword 504,11912
rl_vi_eword 543,13108
rl_vi_insert_beg 568,13709
     int count __attribute__((unused)), key;569,13739
rl_vi_append_mode 577,13867
     int count __attribute__((unused)), key;578,13898
rl_vi_append_eol 587,14040
     int count __attribute__((unused)), key;588,14070
rl_vi_eof_maybe 597,14232
     int count __attribute__((unused)), c 598,14259
rl_vi_insertion_mode 608,14483
     int count __attribute__((unused)), key;609,14517
  _rl_keymap 611,14564
  _rl_vi_last_key_before_insert 612,14600
_rl_vi_save_insert 617,14668
_rl_vi_done_inserting 642,15197
rl_vi_movement_mode 670,16040
     int count __attribute__((unused)), key;671,16073
  _rl_keymap 676,16167
rl_vi_arg_digit 682,16251
rl_vi_change_case 692,16451
  char c 695,16535
rl_vi_put 730,17239
     int count __attribute__((unused)), key;731,17262
rl_vi_check 742,17449
rl_vi_column 750,17541
rl_vi_domove 761,17695
rl_digit_loop1 851,20176
rl_vi_delete_to 887,20789
     int count __attribute__((unused)), key;888,20818
  int c;890,20865
rl_vi_change_to 913,21283
rl_vi_yank_to 967,22617
     int count __attribute__((unused)), key;968,22644
  int c,970,22691
  int c, save 970,22691
  rl_point 990,23110
rl_vi_delete 996,23151
rl_vi_back_to_indent 1020,23465
     int count __attribute__((unused)), key;1021,23499
rl_vi_first_print 1030,23679
     int count __attribute__((unused)), key;1031,23710
rl_vi_char_search 1037,23806
rl_vi_match 1077,24536
     int ignore __attribute__((unused)), key;1078,24562
  int count 1080,24610
  pos 1082,24640
  pos 1097,24935
  rl_point 1137,25510
rl_vi_bracktype 1142,25549
rl_vi_change_char 1158,25790
  int c;1161,25868
    _rl_vi_last_replacement 1166,25936
rl_vi_subst 1186,26271
rl_vi_overstrike 1223,26919
rl_vi_overstrike_delete 1253,27350
rl_vi_replace 1284,27808
     int count __attribute__((unused)), key 1285,27835
  int i;1287,27906
  vi_replace_count 1289,27916
  _rl_keymap 1311,28749
rl_vi_possible_completions(1320,28977
rl_vi_set_mark 1345,29462
     int count __attribute__((unused)), key 1346,29490
  int ch;1348,29561
  ch 1350,29572
  vi_mark_chars[vi_mark_chars1357,29685
rl_vi_goto_mark 1362,29736
     int count __attribute__((unused)), key 1363,29765
  int ch;1365,29836
  ch 1367,29847
  rl_point 1385,30112

readline/xmalloc.c,82
xmalloc 46,1554
xrealloc 58,1720
memory_error_and_abort 72,1968
xfree 82,2213

regex/debug.c,75
regprint(17,343
s_print(91,2115
#	define	GAP(104,2353
regchar(233,5043

regex/engine.c,940
#define	matcher	9,252
#define	fast	10,277
#define	slow	11,296
#define	dissect	12,315
#define	backref	13,340
#define	step	14,365
#define	print	15,384
#define	at	16,405
#define	match	17,420
#define	matcher	20,460
#define	fast	21,485
#define	slow	22,504
#define	dissect	23,523
#define	backref	24,548
#define	step	25,573
#define	print	26,592
#define	at	27,613
#define	match	28,628
struct match 32,730
#define	SP(51,1290
#define	AT(52,1336
#define	NOTE(53,1391
#define	SP(55,1468
#define	AT(56,1502
#define	NOTE(57,1546
matcher(66,1801
dissect(238,6137
backref(426,11007
fast(631,16426
slow(722,18684
step(818,21178
print(940,24075
at(974,24726
#define	PCHARDONE	992,25073
printchar(1005,25540
#undef	matcher1018,25706
#undef	fast1019,25721
#undef	slow1020,25733
#undef	dissect1021,25745
#undef	backref1022,25760
#undef	step1023,25775
#undef	print1024,25787
#undef	at1025,25800
#undef	match1026,25810

regex/main.c,444
char *progname;progname9,128
int debug 10,144
int line 11,159
int status 12,173
int copts 14,190
int eopts 15,216
regoff_t startoff 16,231
regoff_t endoff 17,254
int main(26,396
#	define	NS	31,456
regress(126,2473
#	define	MAXF	130,2516
#	define	SHORT	137,2648
rx_try(203,4709
#	define	NSUBS	212,4842
#	define	NSHOULD	214,4885
options(314,7364
opt(371,8413
fixstr(383,8572
check(405,8929
eprint(482,10727
efind(498,11001

regex/regcomp.c,2035
struct parse 19,307
#	define	NPAREN	28,662
static char nuls[nuls35,847
struct cclass cclasses[cclasses37,918
#define	PEEK(57,1360
#define	PEEK2(58,1386
#define	MORE(59,1417
#define	MORE2(60,1451
#define	SEE(61,1488
#define	SEETWO(62,1529
#define	EAT(63,1605
#define	EATTWO(64,1649
#define	NEXT(65,1706
#define	NEXT2(66,1733
#define	NEXTn(67,1764
#define	GETNEXT(68,1798
#define	SETERROR(69,1829
#define	REQUIRE(70,1864
#define	MUSTSEE(71,1909
#define	MUSTEAT(72,1969
#define	MUSTNOTSEE(73,2032
#define	EMIT(74,2096
#define	INSERT(75,2158
#define	AHEAD(76,2226
#define	ASTERN(77,2274
#define	HERE(78,2321
#define	THERE(79,2347
#define	THERETHERE(80,2378
#define	DROP(81,2413
static int never 84,2462
#define	never	86,2531
regcomp(102,2963
#	define	GOODFLAGS(113,3178
#	define	GOODFLAGS(115,3210
p_ere(207,5333
p_ere_exp(253,6437
p_str(402,9790
p_bre(423,10510
int starordinary;458,11419
	register int c;460,11484
	register int count;461,11501
	register int count2;462,11522
	register sopno pos;463,11544
	register int i;464,11565
	register sopno subno;465,11582
#	define	BACKSL	466,11605
	pos 468,11636
	c 471,11753
p_count(574,14186
p_bracket(597,14701
p_b_term(671,16259
p_b_cclass(737,17768
p_b_eclass(773,18583
p_b_symbol(788,18886
p_b_coll_elem(808,19342
othercase(840,20091
bothcases(859,20476
ordinary(884,20992
nonnewline(906,21459
repeat(930,21968
#	define	N	937,22216
#	define	INF	938,22229
#	define	REP(939,22244
#	define	MAP(940,22277
seterr(1002,23984
allocset(1018,24355
freeset(1073,25760
freezeset(1098,26534
firstch(1132,27359
nch(1151,27725
mcadd(1171,28098
mcsub(1198,28667
mcin(1225,29200
mcfind(1237,29420
mcinvert(1260,29895
  register cset *cs cs1262,29963
mccase(1275,30306
register cset *cs cs1277,30370
isinsets(1287,30598
samesets(1307,31075
categorize(1329,31588
dupl(1357,32229
doemit(1385,33035
doinsert(1411,33646
dofwd(1458,34667
enlarge(1476,35010
stripsnug(1499,35406
findmust(1522,36060
pluscount(1603,37883

regex/regerror.c,85
static struct rerr 29,648
} rerrs[rerrs33,728
regerror(59,1875
regatoi(107,2844

regex/regexec.c,1445
static int nope 19,393
#define	states	22,508
#define	states1	23,528
#define	CLEAR(24,594
#define	SET0(25,621
#define	SET1(26,670
#define	ISSET(27,716
#define	ASSIGN(28,764
#define	EQ(29,797
#define	STATEVARS	30,827
#define	STATESETUP(31,875
#define	STATETEARDOWN(32,914
#define	SETUP(33,953
#define	onestate	34,980
#define	INIT(35,1036
#define	INC(36,1089
#define	ISSTATEIN(37,1116
#define	FWD(40,1288
#define	BACK(41,1363
#define	ISSETBACK(42,1439
#define SNAMES	44,1523
#undef	states49,1619
#undef	CLEAR50,1633
#undef	SET051,1646
#undef	SET152,1658
#undef	ISSET53,1670
#undef	ASSIGN54,1683
#undef	EQ55,1697
#undef	STATEVARS56,1707
#undef	STATESETUP57,1724
#undef	STATETEARDOWN58,1742
#undef	SETUP59,1763
#undef	onestate60,1776
#undef	INIT61,1792
#undef	INC62,1804
#undef	ISSTATEIN63,1815
#undef	FWD64,1832
#undef	BACK65,1843
#undef	ISSETBACK66,1855
#undef	SNAMES67,1872
#define	states	70,1939
#define	CLEAR(71,1961
#define	SET0(72,2006
#define	SET1(73,2038
#define	ISSET(74,2070
#define	ASSIGN(75,2099
#define	EQ(76,2148
#define	STATEVARS	77,2200
#define	STATESETUP(78,2238
#define	STATETEARDOWN(81,2380
#define	SETUP(82,2427
#define	onestate	83,2487
#define	INIT(84,2508
#define	INC(85,2539
#define	ISSTATEIN(86,2562
#define	FWD(89,2731
#define	BACK(90,2789
#define	ISSETBACK(91,2848
#define	LNAMES	93,2911
regexec(113,3567
#	define	GOODFLAGS(122,3755
#	define	GOODFLAGS(124,3787

regex/regexp.c,2201
#define	END	108,4284
#define	BOL	109,4324
#define	EOL	110,4379
#define	ANY	111,4428
#define	ANYOF	112,4477
#define	ANYBUT	113,4540
#define	BRANCH	115,4615
#define	BACK	117,4689
#define	EXACTLY	118,4751
#define	NOTHING	119,4799
#define	STAR	120,4847
#define WORDSTART 122,4925
#define WORDEND 123,4994
#define	OPEN	124,5061
#define	CLOSE	127,5167
#define	OP(161,6545
#define	NEXT(162,6566
#define	OPERAND(163,6623
#define	MAGIC	169,6787
#define error(176,6854
#define regerror(178,6902
#define SPECIAL 179,6947
#define LBRAC	180,6969
#define RBRAC	181,6997
#define ASTERIX	182,7025
#define PLUS	183,7055
#define OR_OP	184,7082
#define DOLLAR	185,7110
#define DOT	186,7139
#define CARET	187,7165
#define LSQBRAC 188,7193
#define RSQBRAC 189,7223
#define LSHBRAC 190,7253
#define RSHBRAC 191,7283
#define	FAIL(192,7313
#define	ISMULT(193,7360
#define	META	194,7408
#define CHARBITS	196,7452
#define	UCHARAT(197,7474
#define	UCHARAT(199,7528
#define ISWORDPART(201,7575
#define	HASWIDTH	206,7669
#define	SIMPLE	207,7729
#define	SPSTART	208,7788
#define	WORST	209,7828
#define	STRCHR(211,7878
static short   *regparse;regparse217,7965
static int      regnpar;218,8017
static char     regdummy;219,8058
static char    *regcode;regcode220,8084
static long     regsize;221,8153
#define	STATIC	227,8267
regexp *regcomp(regcomp255,9342
static char *reg(reg387,12713
static char  *regbranch(regbranch457,14460
static char *regpiece(regpiece494,15501
static char *regatom(regatom558,16887
static char *regnode(regnode665,19108
static void regc(688,19481
static void reginsert(702,19706
static void regtail(729,20212
static void regoptail(760,20769
static char    *reginput;reginput777,21096
static char    *regbol;regbol778,21150
static char   **regstartp;regstartp779,21214
static char   **regendp;regendp780,21272
int             regnarrate 790,21437
int regexec(798,21583
static int regtry(856,22914
static int regmatch(891,23809
static int regrepeat(1090,27827
static char *regnext(regnext1136,28626
void regdump(1160,29011
static char *regprop(regprop1201,29966
char *regsub(regsub1281,31232
void regerror(1343,32692

regex/regfree.c,16
regfree(15,221

regex/reginit.c,80
static bool regex_inited=8,126
void regex_init(10,155
void regex_end(70,1713

regex/split.c,171
split(9,222
main(151,2973
#	define	MNF	157,3049
dosplit(182,3550
#	define	NF	186,3600
print(194,3718
#define	RNF	208,3966
} tests[tests214,4075
regress(277,6139

sql/mini_client_errors.c,178
const char *client_errors[client_errors25,931
const char *client_errors[client_errors61,2386
const char *client_errors[client_errors95,3885
void init_client_errs(130,5167

sql/my_lock.c,52
#undef MAP_TO_USE_RAID	21,867
int my_lock(31,1081

sql/password.c,339
void randominit(43,1797
static void old_randominit(54,2170
double my_rnd(62,2438
void hash_password(69,2694
void make_scrambled_password(87,3213
static inline unsigned int char_val(94,3387
void get_salt_from_password(106,3646
void make_password_from_salt(123,3919
char *scramble(scramble134,4175
my_bool check_scramble(163,4934

sql/stacktrace.c,321
#define PTR_SANE(25,881
char *heap_start;heap_start27,962
void safe_print_str(29,981
#define SIGRETURN_FRAME_COUNT 47,1375
#define MAX_INSTR_IN_FUNC 57,1683
inline uchar** find_prev_fp(59,1717
inline uint32* find_prev_pc(73,1977
void  print_stacktrace(90,2329
void write_core(210,5703
void write_core(217,5854

strings/atof.c,438
#define is_exponent_marker(41,1575
static int volatile overflow,50,1989
static int volatile overflow,in_my_atof;50,1989
static sigfpe_handler_type old_overflow_handler;51,2030
void init_my_atof(53,2080
static void my_atof_overflow(61,2280
double my_atof(74,2488
static int parse_sign(137,3825
static void parse_float_number_part(152,4022
static void parse_decimal_number_part(174,4376
static int parse_int_number_part(192,4654

strings/bchange.c,22
void bchange(30,1069

strings/bcmp.c,81
#undef bcmp29,1079
#undef HAVE_BCMP30,1091
int bcmp(37,1198
int bcmp(55,1540

strings/bfill.c,60
void bfill(39,1358
void bfill(49,1528
void bfill(89,2376

strings/bmove.c,60
void bmove(46,1735
void bmove(56,1890
void bmove(71,2171

strings/bmove512.c,67
#define LONG 35,1307
#define LONG 37,1336
void bmove512(40,1367

strings/bmove_upp.c,48
void bmove_upp(32,1093
void bmove_upp(45,1347

strings/conf_to_src.c,385
#define CHARSETS_SUBDIR 25,915
#define CTYPE_TABLE_SIZE 26,960
#define TO_LOWER_TABLE_SIZE 27,994
#define TO_UPPER_TABLE_SIZE 28,1028
#define SORT_ORDER_TABLE_SIZE 29,1062
#define ROW_LEN 30,1096
char *prog;prog34,1151
char buf[buf35,1163
char buf[1024], *p,p35,1163
char buf[1024], *p, *endptr;endptr35,1163
main(38,1197
print_array(67,1760
print_arrays_for(115,2701

strings/ctype-big5.c,741
#define isbig5head(37,1228
#define isbig5tail(38,1289
#define isbig5code(41,1419
#define big5code(42,1476
#define big5head(43,1532
#define big5tail(44,1568
uchar NEAR ctype_big5[ctype_big546,1607
uchar NEAR to_lower_big5[to_lower_big567,2347
uchar NEAR to_upper_big5[to_upper_big5103,5225
uchar NEAR sort_order_big5[sort_order_big5139,8103
static uint16 big5strokexfrm(175,10983
int my_strnncoll_big5(216,14459
int my_strnxfrm_big5(238,15049
int my_strcoll_big5(259,15496
int my_strxfrm_big5(278,16013
#define max_sort_char 322,17147
#define wild_one 323,17182
#define wild_many 324,17203
my_bool my_like_range_big5(326,17226
int ismbchar_big5(375,18515
my_bool ismbhead_big5(380,18640
int mbcharlen_big5(385,18699

strings/ctype-czech.c,905
#define SKIP_TRAILING_SPACES 63,2436
#define REAL_MYSQL65,2468
#define uchar 75,2579
static uchar * CZ_SORT_TABLE[CZ_SORT_TABLE84,2732
struct wordvalue97,7075
static struct wordvalue doubles[doubles102,7142
#define ADD_TO_RESULT(165,9036
#define NEXT_CMP_VALUE(168,9151
#define IS_END(231,10957
int my_strcoll_czech(234,11066
int my_strxfrm_czech(256,11527
#undef IS_END273,11822
#define IS_END(278,11840
int my_strnncoll_czech(282,12028
int my_strnxfrm_czech(306,12567
#undef IS_END323,12886
#define min_sort_char 367,14211
#define max_sort_char 368,14237
#define wild_one 369,14263
#define wild_many 370,14284
#define EXAMPLE372,14307
my_bool my_like_range_czech(374,14324
uchar NEAR ctype_czech[ctype_czech432,15699
uchar NEAR to_lower_czech[to_lower_czech452,16778
uchar NEAR to_upper_czech[to_upper_czech471,17854
uchar NEAR sort_order_czech[sort_order_czech490,18930

strings/ctype-euc_kr.c,334
uchar NEAR ctype_euc_kr[ctype_euc_kr32,1073
uchar NEAR to_lower_euc_kr[to_lower_euc_kr69,3154
uchar NEAR to_upper_euc_kr[to_upper_euc_kr105,6034
uchar NEAR sort_order_euc_kr[sort_order_euc_kr141,8914
#define iseuc_kr(179,11887
int ismbchar_euc_kr(182,11954
my_bool ismbhead_euc_kr(189,12123
int mbcharlen_euc_kr(194,12184

strings/ctype-gb2312.c,369
uchar NEAR ctype_gb2312[ctype_gb231230,1059
uchar NEAR to_lower_gb2312[to_lower_gb231251,1801
uchar NEAR to_upper_gb2312[to_upper_gb231287,4681
uchar NEAR sort_order_gb2312[sort_order_gb2312123,7561
#define isgb2312head(162,10567
#define isgb2312tail(163,10630
int ismbchar_gb2312(166,10695
my_bool ismbhead_gb2312(171,10826
int mbcharlen_gb2312(176,10889

strings/ctype-gbk.c,798
#define isgbkhead(36,1173
#define isgbktail(37,1233
#define isgbkcode(40,1366
#define gbkcode(41,1420
#define gbkhead(42,1485
#define gbktail(43,1524
uchar NEAR ctype_gbk[ctype_gbk45,1566
uchar NEAR to_lower_gbk[to_lower_gbk66,2305
uchar NEAR to_upper_gbk[to_upper_gbk102,5182
uchar NEAR sort_order_gbk[sort_order_gbk138,8059
static uint16 NEAR gbk_order[gbk_order174,10938
static uint16 gbksortorder(2572,145899
int my_strnncoll_gbk(2582,146073
int my_strcoll_gbk(2606,146712
int my_strnxfrm_gbk(2612,146866
int my_strxfrm_gbk(2632,147270
#define max_sort_char 2654,148037
#define wild_one 2655,148073
#define wild_many 2656,148094
extern my_bool my_like_range_gbk(2658,148117
int ismbchar_gbk(2708,149458
my_bool ismbhead_gbk(2713,149580
int mbcharlen_gbk(2718,149637

strings/ctype-latin1_de.c,592
uchar ctype_latin1_de[ctype_latin1_de39,1167
uchar to_lower_latin1_de[to_lower_latin1_de59,2277
uchar to_upper_latin1_de[to_upper_latin1_de78,3383
uchar sort_order_latin1_de[sort_order_latin1_de106,4814
uchar combo1map[combo1map127,6004
uchar combo2map[combo2map146,7099
int my_strnncoll_latin1_de(182,8474
int my_strnxfrm_latin1_de(202,9105
int my_strcoll_latin1_de(218,9477
int my_strxfrm_latin1_de(225,9684
#define min_sort_char 250,10660
#define max_sort_char 251,10693
#define wild_one 252,10728
#define wild_many 253,10749
my_bool my_like_range_latin1_de(255,10772

strings/ctype-sjis.c,627
uchar NEAR ctype_sjis[ctype_sjis32,1088
uchar NEAR to_lower_sjis[to_lower_sjis69,3166
uchar NEAR to_upper_sjis[to_upper_sjis105,6043
uchar NEAR sort_order_sjis[sort_order_sjis141,8920
#define issjishead(177,11799
#define issjistail(179,11903
int ismbchar_sjis(183,12007
my_bool ismbhead_sjis(188,12140
int mbcharlen_sjis(193,12207
#define sjiscode(199,12281
int my_strnncoll_sjis(201,12354
int my_strcoll_sjis(224,12972
int my_strnxfrm_sjis(230,13132
int my_strxfrm_sjis(246,13542
#define max_sort_char 269,14306
#define wild_one 270,14341
#define wild_many 271,14362
my_bool my_like_range_sjis(273,14385

strings/ctype-tis620.c,669
#define M 56,2139
#define U 57,2159
#define L 58,2178
#define UU 59,2197
#define X 60,2217
int t_ctype[t_ctype63,2239
uchar NEAR ctype_tis620[ctype_tis620323,17873
uchar NEAR to_lower_tis620[to_lower_tis620344,18615
uchar NEAR to_upper_tis620[to_upper_tis620380,21495
uchar NEAR sort_order_tis620[sort_order_tis620416,24375
static void _thai2sortable(459,27416
int my_strnncoll_tis620(517,28428
int my_strnxfrm_tis620(549,29249
int my_strcoll_tis620(566,29604
int my_strxfrm_tis620(579,29898
#define max_sort_chr 599,30367
#define wild_one 600,30401
#define wild_many 601,30422
my_bool my_like_range_tis620(603,30445
void ThNormalize(651,31656

strings/ctype-ujis.c,396
uchar NEAR ctype_ujis[ctype_ujis31,1089
uchar NEAR to_lower_ujis[to_lower_ujis68,3168
uchar NEAR to_upper_ujis[to_upper_ujis104,6045
uchar NEAR sort_order_ujis[sort_order_ujis140,8922
#define isujis(177,11812
#define iskata(178,11875
#define isujis_ss2(179,11938
#define isujis_ss3(180,11981
int ismbchar_ujis(183,12026
my_bool ismbhead_ujis(192,12315
int mbcharlen_ujis(197,12406

strings/ctype.c,317
CHARSET_INFO *default_charset_info default_charset_info29,966
CHARSET_INFO *find_compiled_charset(find_compiled_charset31,1027
CHARSET_INFO *find_compiled_charset_by_name(find_compiled_charset_by_name41,1223
uint compiled_charset_number(51,1429
const char *compiled_charset_name(compiled_charset_name61,1657

strings/int2str.c,174
char NEAR _dig_vec[_dig_vec44,1762
char *int2str(int2str48,1829
char *int10_to_str(int10_to_str106,3441
char *my_itoa(my_itoa142,4081
char *my_ltoa(my_ltoa148,4206

strings/is_prefix.c,22
int is_prefix(28,961

strings/llstr.c,27
char *llstr(llstr31,1069

strings/longlong2str.c,93
char *longlong2str(longlong2str52,1962
char *longlong10_to_str(longlong10_to_str101,2855

strings/r_strinstr.c,25
uint r_strinstr(29,1122

strings/str2int.c,96
#define char_val(47,1961
char *str2int(str2int52,2114
int atoi(187,6466
long atol(195,6588

strings/strappend.c,24
void strappend(31,1092

strings/strcend.c,62
char *strcend(strcend31,1099
char *strcend(strcend46,1360

strings/strcont.c,27
my_string strcont(31,1070

strings/strend.c,58
char *strend(strend35,1281
char *strend(strend44,1391

strings/strfill.c,27
my_string strfill(30,1081

strings/strinstr.c,23
uint strinstr(32,1209

strings/strmake.c,87
char *strmake(strmake33,1164
#define strmake 43,1336
char *strmake(strmake46,1415

strings/strmov.c,104
#undef strmov29,1140
#define strmov 30,1154
char *strmov(strmov37,1250
char *strmov(strmov45,1367

strings/strnlen.c,21
uint strnlen(29,995

strings/strnmov.c,31
char *strnmov(strnmov27,1038

strings/strstr.c,29
char *strstr(strstr35,1208

strings/strto.c,478
#undef strtoull44,1801
#undef strtoll45,1817
#undef strtoul46,1832
#undef strtol47,1847
#define UTYPE_MAX 49,1881
#define TYPE_MIN 50,1916
#define TYPE_MAX 51,1946
#define longtype 52,1976
#define ulongtype 53,2002
#define function 55,2050
#define function 57,2092
#define UTYPE_MAX 60,2139
#define TYPE_MIN 61,2169
#define TYPE_MAX 62,2195
#define longtype 63,2221
#define ulongtype 64,2243
#define function 66,2295
#define function 68,2336
function 81,2758

strings/strtoll.c,52
#define strtoll 19,788
#define USE_LONGLONG23,917

strings/strtoul.c,28
#define USE_UNSIGNED21,857

strings/strtoull.c,56
#define USE_UNSIGNED21,857
#define USE_LONGLONG22,878

strings/strxmov.c,31
char *strxmov(strxmov37,1479

strings/strxnmov.c,33
char *strxnmov(strxnmov44,1856

tools/mysqlmanager.c,4868
#define MANAGER_VERSION 45,1290
#define MANAGER_GREETING 46,1320
#define LOG_ERR 48,1387
#define LOG_WARN 49,1406
#define LOG_INFO 50,1425
#define LOG_DEBUG 51,1444
#define CHILD_START 53,1465
#define CHILD_STOP 54,1487
#define MANAGER_PORT 57,1531
#define MANAGER_CONNECT_RETRIES 61,1599
#define MANAGER_MAX_CMD_LEN 65,1669
#define MANAGER_LOG_FILE 69,1736
#define MANAGER_BACK_LOG 73,1822
#define MAX_USER_NAME 77,1880
#define MANAGER_PW_FILE 81,1937
#define MAX_HOST 85,2013
#define MAX_LAUNCHER_MSG 89,2067
#define MAX_RETRY_COUNT 92,2104
#define DO_STACKTRACE 101,2351
uint manager_port;104,2383
FILE* errfp;105,2402
const char* manager_log_file 106,2415
pthread_mutex_t lock_log,107,2464
pthread_mutex_t lock_log,lock_shutdown,107,2464
pthread_mutex_t lock_log,lock_shutdown,lock_exec_hash,107,2464
pthread_mutex_t lock_log,lock_shutdown,lock_exec_hash,lock_launch_thd;107,2464
pthread_cond_t cond_launch_thd;108,2535
pthread_t loop_th,109,2567
pthread_t loop_th,launch_msg_th;109,2567
int manager_sock 110,2600
uchar* stack_bottom=111,2623
struct sockaddr_in manager_addr;112,2646
ulong manager_bind_addr;113,2679
int manager_back_log;114,2704
int in_shutdown 115,2726
int manager_connect_retries;116,2769
const char* manager_greeting 117,2798
uint manager_max_cmd_len;118,2847
const char* manager_pw_file=119,2873
my_bool one_thread;120,2918
typedef enum {PARAM_STDOUT,PARAM_STDOUT122,2959
typedef enum {PARAM_STDOUT,PARAM_STDERR}PARAM_STDERR122,2959
typedef enum {PARAM_STDOUT,PARAM_STDERR} PARAM_TYPE;122,2959
#define MAX_CLIENT_MSG_LEN 126,3029
#define NET_BLOCK 127,3061
#define MD5_LEN 128,3087
#define ESCAPE_CHAR 129,3111
#define EOL_CHAR 130,3136
#define PRIV_SHUTDOWN 134,3179
struct manager_thd136,3204
struct manager_user145,3327
HASH exec_hash,153,3446
HASH exec_hash,user_hash;153,3446
struct manager_exec* cur_launch_exec=154,3472
typedef int (*manager_cmd_handler)manager_cmd_handler180,4579
int to_launcher_pipe[to_launcher_pipe193,4994
int to_launcher_pipe[2],from_launcher_pipe[from_launcher_pipe193,4994
pid_t launcher_pid;194,5041
int in_segfault=195,5061
const char* pid_file 196,5080
int created_pid_file 197,5132
struct manager_cmd199,5159
struct manager_exec207,5271
#define HANDLE_DECL(237,5911
#define HANDLE_NOARG_DECL(239,6011
struct manager_cmd commands[commands258,6598
static struct my_option my_long_options[my_long_options281,7511
#define LOG_MSG_FUNC(342,10481
LOG_MSG_FUNC(349,10633
static void handle_sigterm(359,10856
static void handle_segfault(372,11089
static void handle_sigpipe(383,11266
#define MAX_DEPTH 390,11387
#define SIGRETURN_FRAME_COUNT 391,11408
void print_stacktrace(393,11441
static int exec_line(427,12206
static struct manager_cmd* lookup_cmd(446,12718
HANDLE_NOARG_DECL(457,12932
HANDLE_NOARG_DECL(463,13052
HANDLE_NOARG_DECL(470,13165
HANDLE_NOARG_DECL(483,13486
HANDLE_DECL(496,13741
HANDLE_DECL(543,14891
HANDLE_DECL(548,14995
static int set_exec_param(553,15099
HANDLE_DECL(604,16334
HANDLE_DECL(653,17549
HANDLE_DECL(709,18969
HANDLE_DECL(792,20807
HANDLE_NOARG_DECL(830,21885
static struct manager_exec* manager_exec_by_pid(846,22340
static void manager_exec_connect(864,22730
static int manager_exec_launch(882,23175
static char* arg_strmov(924,24122
static void manager_exec_print(937,24337
static int authenticate(989,25406
static void print_time(1027,26319
static void die(1038,26555
void print_msg_type(1062,26974
static void log_msg(1077,27319
static pthread_handler_decl(1088,27572
static pthread_handler_decl(1145,29002
static int client_msg_raw(1165,29453
static int client_msg(1191,30054
static int client_msg_pre(1198,30215
static char* read_line(1205,30380
static void handle_child(1227,30805
static struct manager_thd* manager_thd_new(1244,31317
static void manager_thd_free(1261,31701
static void clean_up(1272,31870
static void print_version(1293,32309
static void usage(1299,32473
get_one_option(1312,32807
static int parse_args(1330,33125
static int init_server(1340,33307
static int run_server_loop(1360,33940
static FILE* open_log_stream(1433,35688
static byte* get_user_key(1444,35863
static byte* get_exec_key(1453,36096
static void init_arg_array(1462,36330
static uint tokenize_args(1473,36514
static void update_req_len(1532,37503
static struct manager_exec* manager_exec_new(1539,37702
static void manager_exec_free(1577,38916
static int hex_val(1583,39031
static struct manager_user* manager_user_new(1591,39134
static void manager_user_free(1634,39933
static void init_user_hash(1639,40004
static void init_pid_file(1673,40747
static void init_globals(1687,40982
static int open_and_dup(1711,41749
static void run_launcher_loop(1728,42101
static void fork_launcher(1788,44003
static int daemonize(1802,44325
int main(1823,44618

vio/test-ssl.c,164
const char *VER=VER29,975
const char *default_dbug_option=default_dbug_option33,1017
fatal_error(37,1073
print_usage(44,1133
main(52,1305
int main(147,3986

vio/test-sslclient.c,142
const char *VER=VER29,975
const char *default_dbug_option=default_dbug_option33,1017
fatal_error(37,1073
main(44,1132
int main(99,2947

vio/test-sslserver.c,207
const char *VER=VER29,975
const char *default_dbug_option=default_dbug_option33,1017
fatal_error(38,1086
} TH_ARGS;48,1217
do_ssl_stuff(51,1241
client_thread(70,1715
main(78,1813
int main(153,3909

vio/vio.c,105
void vio_reset(30,1074
Vio *vio_new(vio_new84,2594
Vio *vio_new_win32pipe(vio_new_win32pipe121,3652

vio/viosocket.c,489
void vio_delete(26,1016
int vio_errno(38,1263
int vio_read(44,1389
int vio_write(73,2030
int vio_blocking(101,2672
vio_is_blocking(156,4133
int vio_fastsend(166,4308
int vio_keepalive(192,4899
vio_should_retry(211,5308
int vio_close(219,5476
const char *vio_description(vio_description252,6117
enum enum_vio_type vio_type(257,6181
my_socket vio_fd(262,6244
my_bool vio_peer_addr(268,6295
void vio_in_addr(294,6912
my_bool vio_poll_read(307,7189
void vio_timeout(327,7566

vio/viossl.c,568
report_errors(29,1049
void vio_ssl_delete(56,1563
int vio_ssl_errno(67,1706
int vio_ssl_read(73,1835
int vio_ssl_write(91,2294
int vio_ssl_fastsend(104,2597
int vio_ssl_keepalive(131,3198
vio_ssl_should_retry(148,3599
int vio_ssl_close(156,3771
const char *vio_ssl_description(vio_ssl_description186,4325
enum enum_vio_type vio_ssl_type(191,4393
my_socket vio_ssl_fd(196,4460
my_bool vio_ssl_peer_addr(202,4515
void vio_ssl_in_addr(233,5181
int sslaccept(248,5455
int sslconnect(322,7644
int vio_ssl_blocking(388,9747
void vio_ssl_timeout(398,10016

vio/viosslfactories.c,443
static bool     ssl_algorithms_added 21,789
static bool     ssl_error_strings_loaded=22,838
static int      verify_depth 23,887
static int      verify_error 24,921
static unsigned char dh512_p[dh512_p26,964
static unsigned char dh512_g[dh512_g36,1340
static DH *get_dh512(get_dh51240,1385
report_errors(58,1656
vio_set_cert_stuff(80,2094
vio_verify_callback(127,3592
new_VioSSLConnectorFd(182,5157
new_VioSSLAcceptorFd(272,7669

strings/bmove_upp-sparc.s,123
.section	19,829
bmove_upp:bmove_upp24,914
.loop:.loop28,970
.end:.end35,1074
.bmove_upp_end:.bmove_upp_end38,1091

strings/longlong2str-x86.s,399
.globl	25,914
longlong2str:longlong2str28,967
.L146:.L14652,1422
.L144:.L14456,1490
.L148:.L14861,1559
.L150:.L15070,1691
.L153:.L15375,1758
.L155:.L15589,2059
.L154:.L15499,2203
.L160:.L160108,2382
.L164:.L164115,2471
.L165:.L165119,2558
.Lerror:.Lerror127,2630
.Lfe3:.Lfe3131,2683
.globl	134,2731
longlong10_to_str:longlong10_to_str136,2792
.L10end:.L10end139,2830

strings/strappend-sparc.s,148
.section	19,829
strappend:strappend24,914
.loop1:.loop127,976
.loop2:.loop239,1130
.end:.end44,1199
.strappend_end:.strappend_end47,1227

strings/strend-sparc.s,92
.section	19,826
strend:strend24,906
.loop:.loop26,972
.strend_end:.strend_end33,1079

strings/strings-x86.s,1657
.globl 26,924
bmove_allign:bmove_allign28,975
.end:.end41,1214
.globl 47,1325
bmove_upp:bmove_upp49,1369
.bmove_upp_end:.bmove_upp_end64,1683
.globl 70,1797
strappend:strappend72,1841
sa_99:sa_9998,2506
.strappend_end:.strappend_end101,2562
.globl 108,2736
strcont:strcont110,2776
sc_10:sc_10118,2908
sc_20:sc_20120,2947
sc_60:sc_60123,3054
sc_fo:sc_fo128,3212
.strcont_end:.strcont_end132,3298
.globl 139,3413
strend:strend141,3451
.strend_end:.strend_end153,3681
.globl 160,3820
strfill:strfill162,3860
.strfill_end:.strfill_end186,4421
.globl 194,4568
strcend:strcend196,4608
se_10:se_10202,4724
se_20:se_20207,4851
.strcend_end:.strcend_end210,4905
.globl 215,4995
is_prefix:is_prefix217,5039
ip_10:ip_10223,5199
suf_ok:suf_ok228,5358
.is_prefix_end:.is_prefix_end231,5397
.globl 237,5507
strstr:strstr240,5546
sf_00:sf_00250,5746
sf_10:sf_10251,5793
sf_20:sf_20259,6038
sf_90:sf_90265,6151
sf_fo:sf_fo266,6188
.strstr_end:.strstr_end271,6291
.globl 278,6404
strinstr:strinstr281,6447
si_99:si_99292,6684
.strinstr_end:.strinstr_end294,6706
.globl 301,6856
strmake:strmake304,6897
sm_10:sm_10313,7122
sm_90:sm_90317,7261
sm_99:sm_99319,7347
.strmake_end:.strmake_end324,7456
.globl 331,7602
strnmov:strnmov333,7642
snm_10:snm_10342,7848
snm_20:snm_20347,8029
snm_99:snm_99348,8084
.strnmov_end:.strnmov_end352,8159
.globl 356,8213
strmov:strmov358,8251
smo_10:smo_10363,8400
.strmov_end:.strmov_end372,8561
.globl 375,8609
strxmov:strxmov377,8650
start_str:start_str386,8840
next_str:next_str392,8930
.strxmov_end:.strxmov_end404,9159

strings/strinstr-sparc.s,99
.section	19,828
strinstr:strinstr24,912
.end:.end34,1073
.strinstr_end:.strinstr_end38,1141

strings/strmake-sparc.s,115
.section	19,827
strmake:strmake24,909
.loop:.loop29,968
.end:.end38,1119
.strmake_end:.strmake_end41,1146

strings/strmov-sparc.s,92
.section	19,826
strmov:strmov24,906
.loop:.loop25,914
.strmov_end:.strmov_end34,1024

strings/strnmov-sparc.s,115
.section	19,827
strnmov:strnmov24,909
.loop:.loop29,968
.end:.end38,1119
.strnmov_end:.strnmov_end41,1136

strings/strstr-sparc.s,185
.section	19,826
strstr:strstr24,906
.top:.top35,1151
.outloop1:.outloop143,1290
.loop2:.loop252,1440
.end:.end63,1566
.abort:.abort66,1593
.strstr_end:.strstr_end70,1623

strings/strxmov-sparc.s,117
.section	23,939
strxmov:strxmov29,1023
.loop:.loop37,1292
.end:.end48,1606
.strxmov_end:.strxmov_end51,1634

client/client_priv.h,2260
enum options_client 29,1057
enum options_client { OPT_CHARSETS_DIR=29,1057
enum options_client { OPT_CHARSETS_DIR=256, OPT_DEFAULT_CHARSET,29,1057
	       OPT_PAGER,30,1122
	       OPT_PAGER, OPT_NOPAGER,30,1122
	       OPT_PAGER, OPT_NOPAGER, OPT_TEE,30,1122
	       OPT_PAGER, OPT_NOPAGER, OPT_TEE, OPT_NOTEE,30,1122
	       OPT_LOW_PRIORITY,31,1174
	       OPT_LOW_PRIORITY, OPT_AUTO_REPAIR,31,1174
	       OPT_LOW_PRIORITY, OPT_AUTO_REPAIR, OPT_COMPRESS,31,1174
	       OPT_DROP,32,1231
	       OPT_DROP, OPT_LOCKS,32,1231
	       OPT_DROP, OPT_LOCKS, OPT_KEYWORDS,32,1231
	       OPT_DROP, OPT_LOCKS, OPT_KEYWORDS, OPT_DELAYED,32,1231
	       OPT_DROP, OPT_LOCKS, OPT_KEYWORDS, OPT_DELAYED, OPT_OPTIMIZE,32,1231
	       OPT_FTB,33,1301
	       OPT_FTB, OPT_LTB,33,1301
	       OPT_FTB, OPT_LTB, OPT_ENC,33,1301
	       OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC,33,1301
	       OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC, OPT_ESC,33,1301
	       OPT_FTB, OPT_LTB, OPT_ENC, OPT_O_ENC, OPT_ESC, OPT_TABLES,33,1301
	       OPT_MASTER_DATA,34,1368
	       OPT_MASTER_DATA, OPT_AUTOCOMMIT,34,1368
	       OPT_MASTER_DATA, OPT_AUTOCOMMIT, OPT_AUTO_REHASH,34,1368
	       OPT_LINE_NUMBERS,35,1426
	       OPT_LINE_NUMBERS, OPT_COLUMN_NAMES,35,1426
	       OPT_LINE_NUMBERS, OPT_COLUMN_NAMES, OPT_CONNECT_TIMEOUT,35,1426
	       OPT_MAX_ALLOWED_PACKET,36,1491
	       OPT_MAX_ALLOWED_PACKET, OPT_NET_BUFFER_LENGTH,36,1491
	       OPT_SELECT_LIMIT,37,1546
	       OPT_SELECT_LIMIT, OPT_MAX_JOIN_SIZE,37,1546
	       OPT_SELECT_LIMIT, OPT_MAX_JOIN_SIZE, OPT_SSL_SSL,37,1546
               OPT_SSL_KEY,38,1604
               OPT_SSL_KEY, OPT_SSL_CERT,38,1604
               OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA,38,1604
               OPT_SSL_KEY, OPT_SSL_CERT, OPT_SSL_CA, OPT_SSL_CAPATH,38,1604
               OPT_SSL_CIPHER,39,1674
               OPT_SSL_CIPHER, OPT_SHUTDOWN_TIMEOUT,39,1674
               OPT_SSL_CIPHER, OPT_SHUTDOWN_TIMEOUT, OPT_LOCAL_INFILE,39,1674
	       OPT_DELETE_MASTER_LOGS,40,1745
               OPT_PROMPT,41,1777
               OPT_PROMPT, OPT_IGN_LINES,41,1777
               OPT_PROMPT, OPT_IGN_LINES,OPT_TRANSACTION,41,1777
               OPT_PROMPT, OPT_IGN_LINES,OPT_TRANSACTION, OPT_FRM 41,1777

client/completion_hash.h,218
#define _HASH_19,827
#define SUCCESS 21,843
#define FAILURE 22,861
typedef struct _entry 27,924
} entry;30,983
typedef struct bucket32,993
} Bucket;40,1151
typedef struct hashtable 42,1162
} HashTable;48,1326

client/my_readline.h,60
typedef struct st_line_buffer19,776
} LINE_BUFFER;29,1110

client/sql_string.h,1345
#define NOT_FIXED_DEC	24,917
class String27,952
  String(String::String33,1040
  String(String::String35,1104
  String(String::String37,1198
  String(String::String39,1306
  String(String::String41,1410
  String(String::String43,1505
  static void *operator new(String::operator new47,1632
  static void operator delete(String::operator delete48,1716
  ~String(String::~String50,1824
  inline uint32 length(String::length52,1849
  inline uint32 alloced_length(String::alloced_length53,1902
  inline char& operator [] String::operator []54,1967
  inline void length(String::length55,2030
  inline bool is_empty(String::is_empty56,2084
  inline const char *ptr(String::ptr57,2139
  inline char *c_ptr(String::c_ptr58,2188
  inline char *c_ptr_quick(String::c_ptr_quick64,2324
  void set(String::set71,2447
  inline void set(String::set80,2700
  inline void set(String::set85,2838
  inline void set_quick(String::set_quick90,2985
  inline void free(String::free101,3258
  inline bool alloc(String::alloc112,3433
  inline void shrink(String::shrink120,3665
  bool is_alloced(String::is_alloced137,4004
  inline String& operator = String::operator =138,4044
  inline bool append(String::append158,4808
  inline void caseup(String::caseup174,5094
  inline void casedn(String::casedn175,5147

dbug/dbug_long.h,1075
#    define DBUG_ENTER(113,4271
#    define DBUG_RETURN(114,4298
#    define DBUG_VOID_RETURN 115,4337
#    define DBUG_EXECUTE(116,4373
#    define DBUG_PRINT(117,4410
#    define DBUG_2(118,4450
#    define DBUG_3(119,4501
#    define DBUG_4(120,4555
#    define DBUG_5(121,4611
#    define DBUG_PUSH(122,4670
#    define DBUG_POP(123,4696
#    define DBUG_PROCESS(124,4719
#    define DBUG_FILE 125,4748
#    define DBUG_SETJMP 126,4779
#    define DBUG_LONGJMP 127,4810
#    define DBUG_DUMP(128,4843
#    define DBUG_ENTER(130,4884
#    define DBUG_LEAVE 135,5098
#    define DBUG_RETURN(137,5192
#    define DBUG_VOID_RETURN 139,5319
#    define DBUG_EXECUTE(140,5370
#    define DBUG_PRINT(142,5468
#    define DBUG_2(144,5585
#    define DBUG_3(146,5679
#    define DBUG_4(148,5779
#    define DBUG_5(150,5884
#    define DBUG_PUSH(152,5992
#    define DBUG_POP(153,6033
#    define DBUG_PROCESS(154,6068
#    define DBUG_FILE 155,6117
#    define DBUG_SETJMP(156,6149
#    define DBUG_LONGJMP(157,6207
#    define DBUG_DUMP(158,6275

heap/heapdef.h,308
#define HP_MIN_RECORDS_IN_BLOCK 33,1206
#define HP_MAX_RECORDS_IN_BLOCK 34,1241
#define test_active(40,1356
#define hp_find_hash(43,1478
#define _hp_find_record(46,1606
typedef struct st_hp_hash_info48,1700
} HASH_INFO;52,1789
#define pthread_mutex_lock(91,3485
#define pthread_mutex_unlock(92,3515

include/config-netware.h,968
#undef HAVE_READDIR_R36,1128
#undef HAVE_RWLOCK_INIT37,1150
#undef HAVE_SCHED_H38,1174
#undef HAVE_SYS_MMAN_H39,1194
#undef HAVE_SYNCH_H40,1217
#undef HAVE_CRYPT41,1237
#define HAVE_PTHREAD_ATTR_SETSTACKSIZE 42,1255
#define HAVE_PTHREAD_SIGMASK 43,1296
#define HAVE_PTHREAD_YIELD_ZERO_ARG 44,1327
#define HAVE_BROKEN_REALPATH 45,1365
#define USE_OLD_FUNCTIONS 48,1433
#define FN_NO_CASE_SENCE 51,1488
#define DONT_USE_THR_ALARM 54,1551
#define SIGNALS_DONT_BREAK_READ 57,1620
#define SIGNAL_WITH_VIO_CLOSE 60,1691
#define	DEFAULT_MYSQL_HOME 63,1760
#define PACKAGE 64,1803
#define DEFAULT_BASEDIR 65,1841
#define SHAREDIR 66,1879
#define DEFAULT_CHARSET_HOME 67,1918
#define DATADIR 68,1962
#define SIZEOF_OFF_T 71,2032
#define off_t 72,2064
#define chsize 73,2102
#define ftruncate 74,2141
#define lseek 75,2183
#define pread 76,2221
#define pwrite 77,2259
#define tell 78,2298
#define _POSIX_SOURCE81,2390
#define set_timespec(85,2448

include/config-os2.h,4222
#define __CONFIG_OS2_H__24,1047
#define SYSTEM_TYPE 32,1185
#define MACHINE_TYPE 34,1264
#define PACKAGE 36,1314
#define VERSION 38,1370
#define MYSQL_UNIX_ADDR 40,1428
#define FN_LIBCHAR	42,1471
#define FN_ROOTDIR	43,1497
#define MY_NFILE	44,1523
#define HAVE_ACCESS46,1590
#define DEFAULT_MYSQL_HOME	48,1611
#define DEFAULT_BASEDIR	49,1650
#define SHAREDIR	50,1682
#define DEFAULT_CHARSET_HOME	51,1708
#define _POSIX_PATH_MAX	52,1749
#define DWORD	53,1778
#define O_SHARE	55,1801
#define FILE_BINARY	56,1858
#define S_IROTH	57,1917
#define CANT_DELETE_OPEN_FILES	59,1961
#define O_NONBLOCK	61,2047
#define NO_OPEN_3	63,2072
#define SIGQUIT	64,2114
#define SIGALRM	65,2157
#define NO_FCNTL_NONBLOCK67,2191
#define EFBIG	69,2218
#define EROFS	74,2384
#define sleep(76,2405
#define closesocket(77,2441
#define F_OK	79,2476
#define W_OK	80,2492
#define bzero(82,2509
#define bcopy(83,2549
#define bcmp(84,2590
#define F_RDLCK	86,2631
#define F_WRLCK	87,2672
#define F_UNLCK	88,2714
#define S_IFMT	90,2758
#define F_TO_EOF	91,2811
#define HUGE_PTR93,2880
#define SIZEOF_OFF_T	106,3112
#define lseek(107,3135
#define tell(108,3175
typedef unsigned long long os_off_t;116,3363
#define HAVE_ALLOCA 132,3904
#define HAVE_ST_RDEV 148,4375
#define HAVE_TZNAME 155,4580
#define HAVE_UTIME_NULL 158,4676
#define HAVE_VPRINTF 161,4751
#define RETSIGTYPE 170,5005
#define STACK_DIRECTION 182,5447
#define STDC_HEADERS 188,5632
#define TIME_WITH_SYS_TIME 191,5728
#define DOT_FRM_VERSION 201,6033
#define FIONREAD_IN_SYS_IOCTL 204,6076
#define FIONREAD_IN_SYS_IOCTL 210,6243
#define HAVE_BOOL 219,6489
#define HAVE_COMPRESS 234,6779
#define HAVE_POSIX_SIGNALS 274,7801
#define HAVE_PTHREAD_ATTR_SETSCOPE 280,7927
#define HAVE_CRYPT 289,8075
#define HAVE_TIMESPEC_TS_SEC 296,8280
#define HAVE_TZNAME 299,8343
#define PROTOCOL_VERSION 323,8872
#define QSORT_TYPE_IS_VOID 326,8936
#define RETQSORTTYPE 329,9022
#define SOCKET_SIZE_TYPE 332,9105
#define SPRINTF_RETURNS_INT 339,9274
#define STRUCT_DIRENT_HAS_D_INO 343,9382
#define THREAD 346,9498
#define VOID_SIGHANDLER 365,9870
#define SIZEOF_CHAR 368,9935
#define SIZEOF_INT 371,9995
#define SIZEOF_LONG 374,10055
#define SIZEOF_LONG_LONG 377,10120
#define HAVE_ALARM 380,10194
#define HAVE_BCMP 386,10330
#define HAVE_BZERO 395,10539
#define HAVE_CHSIZE 398,10608
#define HAVE_DLERROR 404,10757
#define HAVE_DLOPEN 407,10828
#define HAVE_GETCWD 434,11516
#define HAVE_GETPAGESIZE 443,11773
#define HAVE_GETWD 464,12329
#define HAVE_INDEX 467,12397
#define HAVE_LOCALTIME_R 473,12551
#define HAVE_LONGJMP 479,12702
#define HAVE_MEMCPY 491,12994
#define HAVE_MEMMOVE 494,13065
#define HAVE_PERROR 503,13291
#define HAVE_PTHREAD_ATTR_SETPRIO 515,13614
#define HAVE_PTHREAD_ATTR_SETSTACKSIZE 521,13829
#define HAVE_PTHREAD_SETPRIO 536,14327
#define HAVE_PTHREAD_SIGMASK 545,14614
#define HAVE_PUTENV 548,14693
#define HAVE_RENAME 557,14917
#define HAVE_RINT 560,14985
#define HAVE_SELECT 566,15136
#define HAVE_SETLOCALE 572,15282
#define HAVE_SOCKET 590,15749
#define HAVE_STRCOLL 599,15973
#define HAVE_STRERROR 602,16046
#define HAVE_STRPBRK 608,16194
#define HAVE_STRSTR 611,16265
#define HAVE_STRTOL 617,16412
#define HAVE_STRTOUL 620,16483
#define HAVE_TCGETATTR 626,16634
#define HAVE_TELL 629,16705
#define HAVE_TEMPNAM 632,16774
#define HAVE_ARPA_INET_H 644,17111
#define HAVE_CRYPT_H 650,17286
#define HAVE_FCNTL_H 659,17533
#define HAVE_FLOAT_H 662,17610
#define HAVE_LIMITS_H 674,17944
#define HAVE_LOCALE_H 677,18023
#define HAVE_MEMORY_H 680,18102
#define HAVE_NETINET_IN_H 686,18263
#define HAVE_STDARG_H 701,18666
#define HAVE_STDDEF_H 704,18745
#define HAVE_STDLIB_H 707,18824
#define HAVE_STRING_H 710,18903
#define HAVE_SYS_IOCTL_H 725,19328
#define HAVE_SYS_SELECT_H 740,19756
#define HAVE_SYS_SOCKET_H 743,19843
#define HAVE_SYS_TIMEB_H 749,20019
#define HAVE_SYS_TYPES_H 752,20104
#define HAVE_SYS_UN_H 755,20186
#define HAVE_SYS_UTIME_H 758,20268
#define HAVE_UNISTD_H 782,20954
#define HAVE_UTIME_H 785,21032
#define HAVE_VARARGS_H 788,21111
#define HAVE_LIBCRYPT 800,21434
#define HAVE_LIBDL 803,21508
#define HAVE_LIBM 809,21653

include/config-win.h,5250
#define SYSTEM_TYPE	27,968
#define SYSTEM_TYPE	29,1020
#define SYSTEM_TYPE	31,1056
#define MACHINE_TYPE	35,1136
#define MACHINE_TYPE	37,1205
#define _WIN32	39,1282
#define __WIN32__42,1358
#define __WIN__	46,1419
#define O_SHARE	50,1513
#define F_RDLCK	52,1590
#define F_WRLCK	53,1632
#define F_UNLCK	54,1676
#define F_RDLCK	56,1729
#define F_WRLCK	57,1772
#define F_UNLCK	58,1817
#define F_EXCLUSIVE	61,1873
#define F_TO_EOF	62,1933
#define F_OK	63,1996
#define S_IROTH	65,2042
#define FILE_BINARY	68,2106
#define O_TEMPORARY	69,2165
#define O_SHORT_LIVED	70,2187
#define SH_DENYNO	71,2211
#define O_BINARY	73,2246
#define FILE_BINARY	74,2302
#define O_TEMPORARY	75,2362
#define O_SHORT_LIVED	76,2395
#define SH_DENYNO	77,2432
#define NO_OPEN_3	79,2468
#define SIGQUIT	81,2511
#undef _REENTRANT	83,2555
#undef SAFE_MUTEX	84,2609
#define LONGLONG_MIN	86,2661
#define LONGLONG_MAX	87,2713
#define ULONGLONG_MAX	88,2765
#define LL(89,2827
typedef unsigned short	ushort;93,2881
typedef unsigned int	uint;94,2912
typedef unsigned __int64 ulonglong;95,2939
typedef __int64 longlong;96,3005
typedef int sigset_t;97,3031
#define longlong_defined98,3053
typedef long off_t;101,3186
typedef __int64 os_off_t;102,3206
typedef UINT_PTR rf_SetTimer;104,3246
typedef unsigned int size_t;106,3282
typedef uint rf_SetTimer;107,3311
#define Socket_defined110,3345
#define my_socket 111,3368
#define bool 112,3393
#define SIGPIPE 113,3411
#define RETQSORTTYPE 114,3434
#define QSORT_TYPE_IS_VOID115,3460
#define RETSIGTYPE 116,3487
#define SOCKET_SIZE_TYPE 117,3511
#define my_socket_defined118,3540
#define bool_defined119,3566
#define byte_defined120,3587
#define HUGE_PTR121,3608
#define STDCALL 122,3625
#define isnan(123,3682
#define finite(124,3709
#define THREAD127,3765
#define VOID_SIGHANDLER129,3787
#define SIZEOF_CHAR	130,3811
#define SIZEOF_LONG	131,3834
#define SIZEOF_LONG_LONG	132,3857
#define SIZEOF_OFF_T	133,3884
#define SIZEOF_CHARP	135,3922
#define SIZEOF_CHARP	137,3952
#define HAVE_BROKEN_NETINET_INCLUDES139,3983
#define HAVE_NAMED_PIPE	141,4034
#define SIGNAL_WITH_VIO_CLOSE146,4197
#define USE_MB 150,4273
#define USE_MB_IDENT 151,4290
#define USE_STRCOLL 152,4313
#undef USE_SYMDIR155,4388
#define USE_SYMDIR156,4406
#define ENABLED_LOCAL_INFILE 159,4487
#define sigset(163,4565
#define finite(164,4601
#define sleep(165,4630
#define access(168,4686
inline double rint(173,4753
#define ulonglong2double(181,4887
#define my_off_t2double(182,4942
inline double ulonglong2double(185,5003
#define my_off_t2double(192,5175
#define inline 195,5248
#define lseek(199,5319
#define tell(200,5374
#define set_timespec(203,5410
#define STACK_DIRECTION 205,5522
#define sint2korr(210,5612
#define sint3korr(211,5652
#define sint4korr(219,5991
#define uint2korr(220,6030
#define uint3korr(221,6071
#define uint4korr(222,6137
#define uint5korr(223,6185
#define uint8korr(228,6439
#define sint8korr(229,6483
#define int2store(230,6526
#define int3store(231,6580
#define int4store(234,6710
#define int5store(235,6761
#define int8store(240,6960
#define doubleget(242,7022
#define doublestore(244,7126
#define float4get(246,7233
#define float8get(247,7295
#define float4store(248,7337
#define float8store(249,7407
#define HAVE_PERROR252,7474
#define HAVE_VFPRINT253,7494
#define HAVE_RENAME	254,7515
#define HAVE_BINARY_STREAMS	255,7568
#define HAVE_LONG_JMP	256,7627
#define HAVE_LOCKING	257,7680
#define HAVE_ERRNO_AS_DEFINE	258,7728
#define HAVE_STDLIB	259,7781
#define HAVE_MEMCPY260,7843
#define HAVE_MEMMOVE261,7863
#define HAVE_GETCWD262,7884
#define HAVE_TELL263,7904
#define HAVE_TZNAME264,7922
#define HAVE_PUTENV265,7942
#define HAVE_SELECT266,7962
#define HAVE_SETLOCALE267,7982
#define HAVE_SOCKET	268,8005
#define HAVE_FLOAT_H269,8039
#define HAVE_LIMITS_H270,8060
#define HAVE_STDDEF_H271,8082
#define HAVE_RINT	272,8104
#define NO_FCNTL_NONBLOCK	273,8150
#define HAVE_ALLOCA274,8191
#define HAVE_STRPBRK275,8211
#define HAVE_STRSTR276,8232
#define HAVE_COMPRESS277,8252
#define HAVE_CREATESEMAPHORE278,8274
#define HAVE_ISNAN279,8303
#define HAVE_FINITE280,8322
#define HAVE_ISAM	281,8342
#define HAVE_QUERY_CACHE282,8407
#define SPRINTF_RETURNS_INT283,8432
#define HAVE_SETFILEPOINTER284,8460
#define HAVE_SNPRINTF	287,8505
#define _snprintf 288,8550
#define HAVE_LDIV	292,8601
#define HAVE_ANSI_INCLUDE293,8667
#define HAVE_SYS_UTIME_H294,8693
#define HAVE_STRTOUL295,8718
#define my_reinterpret_cast(297,8746
#define my_const_cast(298,8798
#define DEFAULT_MYSQL_HOME	306,8913
#define PACKAGE	307,8952
#define DEFAULT_BASEDIR	308,8978
#define SHAREDIR	309,9010
#define DEFAULT_CHARSET_HOME	310,9036
#define FN_LIBCHAR	315,9111
#define FN_ROOTDIR	316,9135
#define FN_NETWORK_DRIVES	317,9159
#define FN_NO_CASE_SENCE	318,9226
#define MY_NFILE	319,9286
#define DO_NOT_REMOVE_THREAD_WRAPPERS321,9309
#define thread_safe_increment(322,9347
#define thread_safe_add(325,9553
#define thread_safe_sub(326,9625
#define statistic_add(327,9705
#define thread_safe_add(329,9769
#define thread_safe_sub(331,9865
#define statistic_add(333,9961
#define statistic_increment(335,10007

include/errmsg.h,1231
#define CR_MIN_ERROR	29,1006
#define CR_MAX_ERROR	30,1062
#define CER(32,1131
#define ER(34,1184
#define CLIENT_ERRMAP	36,1237
#define CR_UNKNOWN_ERROR	38,1297
#define CR_SOCKET_CREATE_ERROR	39,1327
#define CR_CONNECTION_ERROR	40,1363
#define CR_CONN_HOST_ERROR	41,1396
#define CR_IPSOCK_ERROR	42,1428
#define CR_UNKNOWN_HOST	43,1458
#define CR_SERVER_GONE_ERROR	44,1488
#define CR_VERSION_ERROR	45,1522
#define CR_OUT_OF_MEMORY	46,1552
#define CR_WRONG_HOST_INFO	47,1582
#define CR_LOCALHOST_CONNECTION 48,1614
#define CR_TCP_CONNECTION	49,1651
#define CR_SERVER_HANDSHAKE_ERR 50,1682
#define CR_SERVER_LOST	51,1719
#define CR_COMMANDS_OUT_OF_SYNC 52,1748
#define CR_NAMEDPIPE_CONNECTION 53,1785
#define CR_NAMEDPIPEWAIT_ERROR 54,1822
#define CR_NAMEDPIPEOPEN_ERROR 55,1859
#define CR_NAMEDPIPESETSTATE_ERROR 56,1896
#define CR_CANT_READ_CHARSET	57,1936
#define CR_NET_PACKET_TOO_LARGE 58,1970
#define CR_EMBEDDED_CONNECTION	59,2007
#define CR_PROBE_SLAVE_STATUS 60,2043
#define CR_PROBE_SLAVE_HOSTS 61,2080
#define CR_PROBE_SLAVE_CONNECT 62,2117
#define CR_PROBE_MASTER_CONNECT 63,2154
#define CR_SSL_CONNECTION_ERROR 64,2191
#define CR_MALFORMED_PACKET 65,2228
#define CR_WRONG_LICENSE	66,2265

include/ft_global.h,230
#define _ft_global_h24,918
#define FT_QUERY_MAXLEN 29,980
#define HA_FT_MAXLEN 30,1009
typedef struct st_ft_info FT_INFO;32,1035
struct _ft_vft33,1070
struct st_ft_info43,1330
#define FT_NL 60,1695
#define FT_BOOL 61,1712

include/hash.h,353
#define _hash_h20,820
typedef byte *(*hash_get_key)hash_get_key25,876
typedef void (*hash_free_key)hash_free_key26,935
#define HASH_CASE_INSENSITIVE	29,1003
typedef struct st_hash_info 31,1036
} HASH_LINK;34,1154
typedef struct st_hash 36,1168
} HASH;44,1465
#define hash_init(46,1474
#define hash_clear(60,2206
#define hash_inited(61,2260

include/heap.h,650
#define _heap_h21,863
#define HP_MAX_LEVELS	36,1073
#define HP_PTRS_IN_NOD	37,1128
typedef struct st_heapinfo	41,1196
} HEAPINFO;51,1505
typedef struct st_heap_ptrs56,1565
} HP_PTRS;59,1665
struct st_level_info61,1677
typedef struct st_heap_block	67,1814
} HP_BLOCK;75,2136
typedef struct st_hp_keyseg	77,2149
} HP_KEYSEG;84,2366
typedef struct st_hp_keydef	86,2380
} HP_KEYDEF;93,2655
typedef struct st_heap_share95,2669
} HP_SHARE;116,3298
typedef struct st_heap_info120,3336
} HP_INFO;135,3713
typedef ulong HEAP_PTR;175,5507
#define heap_position(176,5531
#define heap_rrnd(177,5577
typedef byte *HEAP_PTR;HEAP_PTR179,5629

include/m_ctype.h,2294
#define _m_ctype_h23,884
#define CHARSET_DIR	29,944
typedef struct charset_info_st31,977
} CHARSET_INFO;52,1673
#define MY_CHARSET_UNDEFINED 62,2046
#define MY_CHARSET_CURRENT 63,2077
#define _CTYPE_H66,2190
#define _CTYPE_H_67,2207
#define _CTYPE_INCLUDED68,2225
#define __CTYPE_INCLUDED69,2249
#define _CTYPE_USING 70,2274
#undef toupper73,2402
#undef _toupper74,2417
#undef _tolower75,2433
#undef toupper76,2449
#undef tolower77,2464
#undef isalpha78,2479
#undef isupper79,2494
#undef islower80,2509
#undef isdigit81,2524
#undef isxdigit82,2539
#undef isalnum83,2555
#undef isspace84,2570
#undef ispunct85,2585
#undef isprint86,2600
#undef isgraph87,2615
#undef iscntrl88,2630
#undef isascii89,2645
#undef toascii90,2660
#define	_U	92,2676
#define	_L	93,2707
#define	_NMR	94,2738
#define	_SPC	95,2776
#define	_PNT	96,2817
#define	_CTR	97,2852
#define	_B	98,2893
#define	_X	99,2921
#define my_ctype	101,2962
#define my_to_upper	102,3009
#define my_to_lower	103,3062
#define my_sort_order	104,3115
#define	_toupper(106,3173
#define	_tolower(107,3225
#define toupper(108,3277
#define tolower(109,3328
#define	isalpha(111,3380
#define	isupper(112,3439
#define	islower(113,3491
#define	isdigit(114,3543
#define	isxdigit(115,3597
#define	isalnum(116,3650
#define	isspace(117,3716
#define	ispunct(118,3770
#define	isprint(119,3824
#define	isgraph(120,3902
#define	iscntrl(121,3975
#define	isascii(122,4029
#define	toascii(123,4065
#undef ctype126,4111
#define	my_isalpha(129,4144
#define	my_isupper(130,4212
#define	my_islower(131,4273
#define	my_isdigit(132,4334
#define	my_isxdigit(133,4397
#define	my_isalnum(134,4458
#define	my_isspace(135,4533
#define	my_ispunct(136,4596
#define	my_isprint(137,4659
#define	my_isgraph(138,4746
#define	my_iscntrl(139,4828
#define use_strcoll(141,4892
#define MY_STRXFRM_MULTIPLY 142,4953
#define my_strnxfrm(143,5032
#define my_strnncoll(144,5106
#define my_strcoll(145,5181
#define my_like_range(146,5244
#define use_mb(149,5370
#define MBMAXLEN 150,5432
#define my_ismbchar(151,5503
#define my_ismbhead(152,5567
#define my_mbcharlen(153,5626
#define isvar(156,5740
#define isvar_start(157,5784
#define tocntrl(158,5834
#define toprint(159,5864
#define USE_TIS620164,6039

include/m_string.h,1139
#define _m_string_h23,933
#define __USE_GNU	25,971
#undef HAVE_STRINGS_H36,1208
#undef HAVE_MEMORY_H37,1230
#define HAVE_MEMCPY38,1251
#define HAVE_MEMMOVE40,1292
#undef HAVE_BCMP42,1320
#undef bcopy43,1337
#undef bcmp44,1350
#undef bzero45,1362
#undef HAVE_BCMP48,1423
# define memcpy(62,1797
# define memset(63,1844
# define memmove(64,1887
# define bmove(66,1963
# define memmove(68,2017
# define bfill(73,2130
# define bmove_allign(74,2182
# define bcopy(78,2266
# define bcmp(79,2313
# define bzero(80,2355
# define bmove_allign(81,2394
#define strmov(89,2571
#define strmov(98,2796
#define strmov_overlapp(100,2850
#define strmake_overlapp(101,2891
#define memcpy_fixed(105,2998
#define memcpy_fixed(107,3051
#undef bmove_allign111,3120
#define bmove512(112,3140
#define my_itoa(113,3184
#define my_ltoa(114,3219
#define bmove512(119,3397
#define memcpy_overlap(124,3482
#define memcpy_overlap(128,3616
#undef bcmp147,4111
#define bcmp(148,4123
#define longlong2str(233,7083
#define longlong10_to_str(234,7132
#define strtoll(235,7191
#define strtoull(236,7234
#define HAVE_STRTOULL238,7301

include/md5.h,214
#define PROTOTYPES 55,1996
typedef unsigned char *POINTER;POINTER59,2097
typedef uint16 UINT2;62,2166
typedef uint32 UINT4;65,2257
#define PROTO_LIST(72,2494
#define PROTO_LIST(74,2530
} my_MD5_CTX;81,2814

include/merge.h,259
#define _merge_h21,861
#define MRG_NAME_EXT	33,1009
typedef struct st_mrg_info	37,1069
} MERGE_INFO;46,1450
typedef struct st_mrg_table_info48,1465
} MRG_TABLE;52,1542
typedef struct st_merge54,1556
} MRG_INFO;63,1845
typedef ulong mrg_off_t;65,1858

include/my_aes.h,31
#define AES_KEY_LENGTH 25,909

include/my_alarm.h,347
#define _my_alarm_h22,889
#define ALARM_VARIABLES 32,1099
#define ALARM_INIT	34,1172
#define ALARM_END	37,1322
#define ALARM_TEST	39,1405
#define ALARM_REINIT	41,1470
#define ALARM_REINIT	45,1608
#define ALARM_VARIABLES 49,1738
#define ALARM_INIT50,1817
#define ALARM_END51,1836
#define ALARM_TEST 52,1854
#define ALARM_REINIT 53,1904

include/my_alloc.h,226
#define _my_alloc_h22,837
#define ALLOC_MAX_BLOCK_TO_DROP	24,858
#define ALLOC_MAX_BLOCK_USAGE_BEFORE_DROP	25,897
typedef struct st_used_mem27,943
} USED_MEM;32,1167
typedef struct st_mem_root35,1181
} MEM_ROOT;51,1839

include/my_base.h,7740
#define _my_base_h21,855
#define USES_TYPES	24,924
#define CHSIZE_USED25,985
#define HA_OPEN_ABORT_IF_LOCKED	42,1437
#define HA_OPEN_WAIT_IF_LOCKED	43,1486
#define HA_OPEN_IGNORE_IF_LOCKED	44,1520
#define HA_OPEN_TMP_TABLE	45,1555
#define HA_OPEN_DELAY_KEY_WRITE	46,1612
#define HA_OPEN_ABORT_IF_CRASHED	47,1673
#define HA_OPEN_FOR_REPAIR	48,1709
enum ha_rkey_function 67,2598
  HA_READ_KEY_EXACT,68,2622
  HA_READ_KEY_OR_NEXT,69,2680
  HA_READ_KEY_OR_PREV,70,2733
  HA_READ_AFTER_KEY,71,2783
  HA_READ_BEFORE_KEY,72,2844
  HA_READ_PREFIX,73,2907
  HA_READ_PREFIX_LAST,74,2958
  HA_READ_MBR_CONTAIN,75,3019
  HA_READ_MBR_INTERSECT,76,3042
  HA_READ_MBR_WITHIN,77,3067
  HA_READ_MBR_DISJOINT,78,3089
  HA_READ_MBR_EQUAL79,3113
enum ha_key_alg 84,3165
  HA_KEY_ALG_UNDEF=85,3186
  HA_KEY_ALG_BTREE=86,3241
  HA_KEY_ALG_RTREE=87,3300
  HA_KEY_ALG_HASH=88,3359
  HA_KEY_ALG_FULLTEXT=89,3412
enum ha_extra_function 94,3522
  HA_EXTRA_NORMAL=95,3547
  HA_EXTRA_QUICK=96,3601
  HA_EXTRA_RESET=97,3648
  HA_EXTRA_CACHE=98,3705
  HA_EXTRA_NO_CACHE=99,3758
  HA_EXTRA_NO_READCHECK=100,3819
  HA_EXTRA_READCHECK=101,3876
  HA_EXTRA_KEYREAD=102,3928
  HA_EXTRA_NO_KEYREAD=103,3984
  HA_EXTRA_NO_USER_CHANGE=104,4045
  HA_EXTRA_KEY_CACHE=105,4109
  HA_EXTRA_NO_KEY_CACHE=106,4134
  HA_EXTRA_WAIT_LOCK=107,4162
  HA_EXTRA_NO_WAIT_LOCK=108,4228
  HA_EXTRA_WRITE_CACHE=109,4297
  HA_EXTRA_FLUSH_CACHE=110,4361
  HA_EXTRA_NO_KEYS=111,4420
  HA_EXTRA_KEYREAD_CHANGE_POS=112,4477
  HA_EXTRA_REMEMBER_POS=114,4576
  HA_EXTRA_RESTORE_POS=115,4638
  HA_EXTRA_REINIT_CACHE=116,4665
  HA_EXTRA_FORCE_REOPEN=117,4731
  HA_EXTRA_FLUSH,118,4796
  HA_EXTRA_NO_ROWS,119,4843
  HA_EXTRA_RESET_STATE,120,4888
  HA_EXTRA_IGNORE_DUP_KEY,121,4936
  HA_EXTRA_NO_IGNORE_DUP_KEY,122,5004
  HA_EXTRA_DONT_USE_CURSOR_TO_UPDATE,123,5034
  HA_EXTRA_PREPARE_FOR_DELETE,124,5113
  HA_EXTRA_PREPARE_FOR_UPDATE	125,5144
enum ha_panic_function 130,5264
  HA_PANIC_CLOSE,131,5289
  HA_PANIC_WRITE,132,5335
  HA_PANIC_READ	133,5385
enum ha_base_keytype 138,5496
  HA_KEYTYPE_END=139,5519
  HA_KEYTYPE_TEXT=140,5539
  HA_KEYTYPE_BINARY=141,5593
  HA_KEYTYPE_SHORT_INT=142,5656
  HA_KEYTYPE_LONG_INT=143,5682
  HA_KEYTYPE_FLOAT=144,5707
  HA_KEYTYPE_DOUBLE=145,5729
  HA_KEYTYPE_NUM=146,5752
  HA_KEYTYPE_USHORT_INT=147,5810
  HA_KEYTYPE_ULONG_INT=148,5837
  HA_KEYTYPE_LONGLONG=149,5863
  HA_KEYTYPE_ULONGLONG=150,5889
  HA_KEYTYPE_INT24=151,5916
  HA_KEYTYPE_UINT24=152,5939
  HA_KEYTYPE_INT8=153,5963
  HA_KEYTYPE_VARTEXT=154,5985
  HA_KEYTYPE_VARBINARY=155,6042
#define HA_MAX_KEYTYPE	158,6111
#define HA_NOSAME	162,6205
#define HA_PACK_KEY	163,6264
#define HA_AUTO_KEY	164,6326
#define HA_BINARY_PACK_KEY	165,6351
#define HA_FULLTEXT	166,6420
#define HA_UNIQUE_CHECK	167,6482
#define HA_SPATIAL	168,6546
#define HA_NULL_ARE_EQUAL	169,6612
#define HA_SPACE_PACK_USED	174,6715
#define HA_VAR_LENGTH_KEY	175,6779
#define HA_NULL_PART_KEY	176,6808
#define HA_SORT_ALLOWS_SAME 178,6858
#define HA_SORT_ALLOWS_SAME	181,6983
#define HA_END_SPACE_KEY	188,7277
#define HA_SPACE_PACK	192,7357
#define HA_PART_KEY_SEG	193,7411
#define HA_VAR_LENGTH	194,7477
#define HA_NULL_PART	195,7503
#define HA_BLOB_PART	196,7529
#define HA_SWAP_KEY	197,7555
#define HA_REVERSE_SORT	198,7580
#define HA_NO_SORT 199,7642
#define HA_OPTION_PACK_RECORD	202,7754
#define HA_OPTION_PACK_KEYS	203,7787
#define HA_OPTION_COMPRESS_RECORD	204,7818
#define HA_OPTION_LONG_BLOB_PTR	205,7854
#define HA_OPTION_TMP_TABLE	206,7911
#define HA_OPTION_CHECKSUM	207,7943
#define HA_OPTION_DELAY_KEY_WRITE	208,7974
#define HA_OPTION_NO_PACK_KEYS	209,8011
#define HA_OPTION_TEMP_COMPRESS_RECORD	210,8073
#define HA_OPTION_READ_ONLY_DATA	211,8148
#define HA_DONT_TOUCH_DATA	215,8251
#define HA_PACK_RECORD	216,8317
#define HA_CREATE_TMP_TABLE	217,8378
#define HA_CREATE_CHECKSUM	218,8408
#define HA_CREATE_DELAY_KEY_WRITE 219,8437
#define HA_STATUS_POS	223,8507
#define HA_STATUS_NO_LOCK 224,8555
#define HA_STATUS_TIME	225,8615
#define HA_STATUS_CONST	226,8667
#define HA_STATUS_VARIABLE	227,8725
#define HA_STATUS_ERRKEY	228,8755
#define HA_STATUS_AUTO	229,8783
#define HA_ERR_KEY_NOT_FOUND	234,8899
#define HA_ERR_FOUND_DUPP_KEY	235,8972
#define HA_ERR_RECORD_CHANGED	236,9036
#define HA_ERR_WRONG_INDEX	237,9104
#define HA_ERR_CRASHED	238,9171
#define HA_ERR_WRONG_IN_RECORD	239,9226
#define HA_ERR_OUT_OF_MEM	240,9290
#define HA_ERR_NOT_A_TABLE 241,9349
#define HA_ERR_WRONG_COMMAND	242,9425
#define HA_ERR_OLD_FILE	243,9486
#define HA_ERR_NO_ACTIVE_RECORD 244,9537
#define HA_ERR_RECORD_DELETED	245,9606
#define HA_ERR_RECORD_FILE_FULL 246,9664
#define HA_ERR_INDEX_FILE_FULL	247,9727
#define HA_ERR_END_OF_FILE	248,9789
#define HA_ERR_UNSUPPORTED	249,9854
#define HA_ERR_TO_BIG_ROW	250,9918
#define HA_WRONG_CREATE_OPTION	251,9966
#define HA_ERR_FOUND_DUPP_UNIQUE 252,10027
#define HA_ERR_UNKNOWN_CHARSET	253,10097
#define HA_ERR_WRONG_MRG_TABLE_DEF 254,10158
#define HA_ERR_CRASHED_ON_REPAIR 255,10241
#define HA_ERR_CRASHED_ON_USAGE 256,10316
#define HA_ERR_LOCK_WAIT_TIMEOUT 257,10382
#define HA_ERR_LOCK_TABLE_FULL 258,10419
#define HA_ERR_READ_ONLY_TRANSACTION 259,10456
#define HA_ERR_LOCK_DEADLOCK	260,10523
#define HA_ERR_CANNOT_ADD_FOREIGN 261,10557
#define HA_ERR_NO_REFERENCED_ROW 262,10637
#define HA_ERR_ROW_IS_REFERENCED 263,10707
#define HA_ERR_NO_SAVEPOINT	264,10781
#define HA_NAMELEN 268,10877
#define NO_SUCH_KEY 269,10936
#define SEARCH_FIND	274,11062
#define SEARCH_NO_FIND	275,11084
#define SEARCH_SAME	276,11109
#define SEARCH_BIGGER	277,11131
#define SEARCH_SMALLER	278,11155
#define SEARCH_SAVE_BUFF	279,11181
#define SEARCH_UPDATE	280,11209
#define SEARCH_PREFIX	281,11234
#define SEARCH_LAST	282,11260
#define MBR_CONTAIN 283,11284
#define MBR_INTERSECT 284,11312
#define MBR_WITHIN 285,11341
#define MBR_DISJOINT 286,11370
#define MBR_EQUAL 287,11399
#define MBR_DATA 288,11428
#define SEARCH_NULL_ARE_EQUAL 289,11458
#define SEARCH_NULL_ARE_NOT_EQUAL 290,11523
#define QUICK_USED	293,11621
#define READ_CACHE_USED	294,11642
#define READ_CHECK_USED 295,11668
#define KEY_READ_USED	296,11694
#define WRITE_CACHE_USED 297,11718
#define OPT_NO_ROWS 298,11746
#define HA_STATE_CHANGED	301,11793
#define HA_STATE_AKTIV	302,11847
#define HA_STATE_WRITTEN	303,11900
#define HA_STATE_DELETED	304,11951
#define HA_STATE_NEXT_FOUND	305,11978
#define HA_STATE_PREV_FOUND	306,12049
#define HA_STATE_NO_KEY	307,12119
#define HA_STATE_KEY_CHANGED	308,12182
#define HA_STATE_WRITE_AT_END	309,12215
#define HA_STATE_BUFF_SAVED	310,12280
#define HA_STATE_ROW_CHANGED	311,12351
#define HA_STATE_EXTEND_BLOCK	312,12413
enum en_fieldtype 314,12449
  FIELD_LAST=315,12469
  FIELD_LAST=-1,FIELD_NORMAL,315,12469
  FIELD_LAST=-1,FIELD_NORMAL,FIELD_SKIP_ENDSPACE,315,12469
  FIELD_LAST=-1,FIELD_NORMAL,FIELD_SKIP_ENDSPACE,FIELD_SKIP_PRESPACE,315,12469
  FIELD_SKIP_ZERO,316,12539
  FIELD_SKIP_ZERO,FIELD_BLOB,316,12539
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,316,12539
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,FIELD_INTERVALL,316,12539
  FIELD_SKIP_ZERO,FIELD_BLOB,FIELD_CONSTANT,FIELD_INTERVALL,FIELD_ZERO,316,12539
  FIELD_VARCHAR,317,12611
  FIELD_VARCHAR,FIELD_CHECK317,12611
enum data_file_type 320,12643
  STATIC_RECORD,321,12665
  STATIC_RECORD,DYNAMIC_RECORD,321,12665
  STATIC_RECORD,DYNAMIC_RECORD,COMPRESSED_RECORD321,12665
#define rows2double(326,12764
typedef my_off_t	ha_rows;327,12807
#define rows2double(329,12839
typedef ulong		ha_rows;330,12875
#define HA_POS_ERROR	333,12908
#define HA_OFFSET_ERROR	334,12945
#define MAX_FILE_SIZE	337,13016
#define MAX_FILE_SIZE	339,13054

include/my_bitmap.h,110
#define _my_bitmap_h_18,767
#define MY_BIT_NONE 22,815
typedef struct st_bitmap24,848
} MY_BITMAP;37,1197

include/my_dbug.h,1103
#define _dbug_h18,761
#define DBUG_ENTER(43,1641
#define DBUG_LEAVE 47,1830
#define DBUG_RETURN(49,1914
#define DBUG_VOID_RETURN 50,1964
#define DBUG_EXECUTE(51,2011
#define DBUG_PRINT(53,2099
#define DBUG_PUSH(55,2206
#define DBUG_POP(56,2243
#define DBUG_PROCESS(57,2274
#define DBUG_FILE 58,2319
#define DBUG_SETJMP(59,2347
#define DBUG_LONGJMP(60,2401
#define DBUG_DUMP(61,2465
#define DBUG_IN_USE 63,2552
#define DEBUGGER_OFF 64,2603
#define DEBUGGER_ON 65,2645
#define DBUG_LOCK_FILE 66,2676
#define DBUG_UNLOCK_FILE 67,2720
#define DBUG_ASSERT(68,2768
#define DBUG_ENTER(71,2831
#define DBUG_RETURN(72,2854
#define DBUG_VOID_RETURN 73,2889
#define DBUG_EXECUTE(74,2921
#define DBUG_PRINT(75,2957
#define DBUG_PUSH(76,2996
#define DBUG_POP(77,3021
#define DBUG_PROCESS(78,3043
#define DBUG_FILE 79,3071
#define DBUG_SETJMP 80,3098
#define DBUG_LONGJMP 81,3125
#define DBUG_DUMP(82,3154
#define DBUG_IN_USE 83,3190
#define DEBUGGER_OFF84,3212
#define DEBUGGER_ON85,3233
#define DBUG_LOCK_FILE86,3253
#define DBUG_UNLOCK_FILE87,3276
#define DBUG_ASSERT(88,3301

include/my_dir.h,763
#define _my_dir_h18,763
#define MY_DIR_H24,838
#define MY_S_IFMT	30,918
#define MY_S_IFDIR	31,962
#define MY_S_IFCHR	32,1005
#define MY_S_IFBLK	33,1056
#define MY_S_IFREG	34,1103
#define MY_S_IFIFO	35,1144
#define MY_S_ISUID	36,1182
#define MY_S_ISGID	37,1240
#define MY_S_ISVTX	38,1299
#define MY_S_IREAD	39,1365
#define MY_S_IWRITE	40,1421
#define MY_S_IEXEC	41,1480
#define MY_S_ISDIR(43,1547
#define MY_S_ISCHR(44,1603
#define MY_S_ISBLK(45,1659
#define MY_S_ISREG(46,1715
#define MY_S_ISFIFO(47,1771
#define MY_DONT_SORT	49,1829
#define MY_WANT_STAT	50,1885
typedef struct my_stat56,2002
} MY_STAT;69,2556
#define MY_STAT 73,2575
typedef struct fileinfo78,2730
} FILEINFO;82,2792
typedef struct st_my_dir	84,2805
} MY_DIR;94,3204

include/my_getopt.h,742
enum get_opt_var_type 19,799
enum get_opt_var_type { GET_NO_ARG,19,799
enum get_opt_var_type { GET_NO_ARG, GET_BOOL,19,799
enum get_opt_var_type { GET_NO_ARG, GET_BOOL, GET_INT,19,799
enum get_opt_var_type { GET_NO_ARG, GET_BOOL, GET_INT, GET_UINT,19,799
enum get_opt_var_type { GET_NO_ARG, GET_BOOL, GET_INT, GET_UINT, GET_LONG,19,799
			GET_ULONG,20,874
			GET_ULONG, GET_LL,20,874
			GET_ULONG, GET_LL, GET_ULL,20,874
			GET_ULONG, GET_LL, GET_ULL, GET_STR,20,874
			GET_ULONG, GET_LL, GET_ULL, GET_STR, GET_STR_ALLOC 20,874
enum get_opt_arg_type 21,931
enum get_opt_arg_type { NO_ARG,21,931
enum get_opt_arg_type { NO_ARG, OPT_ARG,21,931
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG 21,931
struct my_option23,989

include/my_global.h,12096
#define _global_h20,849
#define HAVE_REPLICATION23,893
#define HAVE_EXTERNAL_CLIENT24,918
#define INCL_BASE29,1058
#define INCL_NOPMAPI30,1076
#undef WIN36,1207
#undef WIN3237,1218
#undef _WIN38,1231
#undef _WIN3239,1243
#undef _WIN6440,1257
#undef __WIN__41,1271
#undef __WIN32__42,1286
#define HAVE_ERRNO_AS_DEFINE43,1303
#define __i386__47,1397
#define C_MODE_START 52,1502
#define C_MODE_END	53,1539
#define C_MODE_START55,1566
#define C_MODE_END56,1587
#undef inline	67,1882
#undef inline	72,2007
#define __builtin_expect(86,2565
#define likely(89,2621
#define unlikely(90,2663
#undef  _GNU_SOURCE95,2782
#define _GNU_SOURCE 96,2802
#undef THREAD101,2919
#undef HAVE_mit_thread102,2933
#undef HAVE_LINUXTHREADS103,2956
#undef HAVE_UNIXWARE7_THREADS104,2981
#undef HAVE_SYS_UN_H109,3106
#define __EXTENSIONS__ 112,3135
#define __STDC_EXT__ 114,3210
#define _POSIX_PTHREAD_SEMANTICS 119,3381
#define _REENTRANT	123,3468
#define _THREAD_SAFE 126,3582
#define _REENTRANT	136,3894
#define _H_STRINGS142,4071
#define _SYS_STREAM_H143,4090
#define ulonglong2double(145,4184
#define my_off_t2double(146,4235
#undef HAVE_SNPRINTF153,4448
#undef HAVE_PREAD156,4539
#undef HAVE_PWRITE157,4557
#undef inline160,4640
#define inline161,4654
#undef HAVE_GETHOSTBYNAME_R165,4729
#undef HAVE_INITGROUPS168,4813
#undef __LONG_MAX__ 180,5082
#define __LONG_MAX__ 181,5157
#define FIX_GCC_LINKING_PROBLEM 186,5285
#define FIX_GCC_LINKING_PROBLEM188,5375
#define BAD_MEMCPY193,5575
#define HAVE_ATOMIC_ADD198,5826
#define HAVE_ATOMIC_SUB199,5850
#undef HAVE_ATOMIC_ADD204,6064
#undef HAVE_ATOMIC_SUB205,6087
#define lint209,6155
#define _LONG_LONG 212,6224
#define crypt 254,7016
#undef crypt258,7090
#undef HAVE_ALLOCA262,7174
#undef HAVE_ALLOCA_H263,7193
#define __SMP__269,7292
#define CONFIG_SMP274,7415
#define HAVE_ULONG289,7857
#undef HAVE_FINITE292,7939
#undef setrlimit296,8063
#define setrlimit 297,8080
#define HAVE_ERRNO_AS_DEFINE302,8184
#define HAVE_FCNTL_LOCK303,8213
#undef  HAVE_FINITE304,8237
#undef  LONGLONG_MIN 305,8257
#undef  LONGLONG_MAX 306,8332
#define USE_MYFUNC 311,8466
#define MASTER 312,8523
#define ENGLISH 313,8570
#define POSIX_MISTAKE 314,8615
#define USE_REGEX 315,8676
#define USE_BMOVE512 318,8786
#define DONT_ALLOW_USER_CHANGE 323,8950
#define DONT_USE_MYSQL_PWD 324,8983
#define DONT_REMEMBER_SIGNAL329,9110
int	__void__;335,9255
#define VOID(336,9269
#undef VOID338,9315
#define VOID(339,9327
#define LINT_INIT(344,9436
#define LINT_INIT(346,9503
#define max(351,9620
#define min(352,9651
#define max(354,9702
#define min(355,9744
typedef unsigned int uint;359,9838
typedef unsigned short ushort;360,9865
#define CMP_NUM(363,9904
#define sgn(364,9970
#define swap(365,10023
#define test(366,10094
#define set_if_bigger(367,10125
#define set_if_smaller(368,10181
#define test_all_bits(369,10237
#define set_bits(370,10285
#define array_elements(371,10406
#define rint(373,10484
#define TRUE	378,10592
#define FALSE	379,10629
#define function_volatile	383,10698
#define my_reinterpret_cast(384,10733
#define my_const_cast(385,10784
#define my_reinterpret_cast(387,10859
#define my_const_cast(388,10894
#define _VARARGS(401,11308
#define _STATIC_VARARGS(402,11330
#define _PC(403,11359
#undef DBUG_OFF406,11419
#define DBUG_OFF410,11484
#define MIN_ARRAY_SIZE	415,11531
#define ASCII_BITS_USED 416,11590
#define NEAR_F	417,11636
typedef int	File;421,11738
typedef int	my_socket;423,11802
#define INVALID_SOCKET 424,11859
#define sig_handler 427,11937
typedef void	(*sig_return)sig_return429,11981
typedef char	pchar;432,12093
typedef char	puchar;433,12151
typedef char	pbool;434,12210
typedef short	pshort;435,12268
typedef float	pfloat;436,12333
typedef int	pchar;438,12400
typedef uint	puchar;439,12459
typedef int	pbool;440,12520
typedef int	pshort;441,12579
typedef double	pfloat;442,12644
typedef int	(*qsort_cmp)qsort_cmp445,12728
typedef int	(*qsort_cmp2)qsort_cmp2446,12781
#define qsort_t 449,12876
#undef QSORT_TYPE_IS_VOID450,12897
#define QSORT_TYPE_IS_VOID451,12923
#define qsort_t 453,12956
#define size_socket 456,13057
typedef SOCKET_SIZE_TYPE size_socket;461,13182
#define SOCKOPT_OPTLEN_TYPE 465,13256
#define O_SHARE	471,13374
#define O_BINARY	473,13449
#define FILE_BINARY	476,13534
#define HAVE_FCNTL_LOCK479,13630
#define F_TO_EOF	480,13654
#define O_TEMPORARY	485,13767
#define O_SHORT_LIVED	488,13818
#define UNSINT8	494,13929
#define UNSINT16	495,13974
#define UNSINT32	496,14013
#define SC_MAXWIDTH	499,14078
#define FN_LEN	500,14149
#define FN_HEADLEN	501,14193
#define FN_EXTLEN	502,14258
#define FN_REFLEN	503,14326
#define FN_EXTCHAR	504,14383
#define FN_HOMELIB	505,14406
#define FN_CURLIB	506,14469
#define FN_PARENTDIR	507,14534
#define FN_DEVCHAR	508,14600
#define FN_LIBCHAR	512,14658
#define FN_ROOTDIR	513,14682
#define FN_LIBCHAR	515,14712
#define FN_ROOTDIR	516,14735
#define MY_NFILE	518,14765
#define IO_SIZE	530,15121
#define MALLOC_OVERHEAD 536,15275
#define MALLOC_OVERHEAD 538,15314
#define ONCE_ALLOC_INIT	541,15374
#define RECORD_CACHE_SIZE	543,15456
#define KEY_CACHE_SIZE	545,15539
#define NO_HASH	549,15651
#define NO_DIR_LIBRARY	551,15709
#define USE_MY_STAT_STRUCT	552,15763
#define USE_MY_ITOA	558,15879
#define atod	564,15998
#define atof	567,16043
#undef remove	571,16142
#define closesocket(574,16217
#define closesocket(576,16257
#define ulonglong2double(579,16321
#define my_off_t2double(580,16376
#define offsetof(585,16462
#define ulong_to_double(587,16532
#define SET_STACK_SIZE(588,16582
#define strtok_r(591,16700
#undef HAVE_PREAD596,16862
#undef HAVE_REALPATH597,16880
#undef HAVE_MLOCK598,16901
#undef HAVE_TEMPNAM	599,16919
#undef HAVE_PTHREAD_SETPRIO600,16957
#undef HAVE_FTRUNCATE601,16985
#undef HAVE_READLINK602,17007
#define HAVE_LONG_LONG 608,17106
#define LONGLONG_MIN	618,17413
#define LONGLONG_MAX	619,17469
#define ULONGLONG_MAX 625,17649
#define ULONGLONG_MAX 627,17689
#define INT_MIN32	632,17834
#define INT_MAX32	633,17871
#define INT_MIN24	634,17908
#define INT_MAX24	635,17947
#define INT_MIN16	636,17977
#define INT_MAX16	637,18016
#define INT_MIN8	638,18041
#define INT_MAX8	639,18072
#define INT_MIN32	641,18131
#define INT_MAX32	642,18175
#define INT_MIN24	643,18219
#define INT_MAX24	644,18263
#define INT_MIN16	645,18307
#define INT_MAX16	646,18350
#define DBL_MIN	651,18445
#define FLT_MIN	652,18487
#define DBL_MAX	655,18560
#define FLT_MAX	656,18602
typedef long		my_ptrdiff_t;664,18770
typedef long long	my_ptrdiff_t;666,18804
#define MY_ALIGN(669,18844
#define ALIGN_SIZE(670,18897
#define ALIGN_PTR(672,18983
#define OFFSET(674,19081
#define ADD_TO_PTR(675,19133
#define PTR_BYTE_DIFF(676,19195
#define NullS	678,19266
#define NEAR	681,19346
#define FAR	682,19389
#define HUGE_PTR684,19445
#define STDCALL 688,19521
#define STDCALL690,19578
typedef void	*gptr;gptr696,19663
typedef char	*gptr;gptr698,19712
typedef char	int8;701,19787
typedef short	int16;702,19838
typedef unsigned char	uchar;705,19918
typedef unsigned char	uint8;707,19984
typedef unsigned short	uint16;708,20057
typedef int		int32;712,20178
typedef unsigned int	uint32;714,20205
typedef long		int32;717,20326
typedef unsigned long	uint32;719,20354
typedef unsigned long	ulong;725,20570
typedef unsigned long long int ulonglong;729,20712
typedef long long int	longlong;730,20788
typedef unsigned long	ulonglong;732,20826
typedef long		longlong;733,20895
typedef ulong		size_str;738,20996
#define SYSTEM_SIZEOF_OFF_T 746,21170
#define SYSTEM_SIZEOF_OFF_T 748,21206
#undef  SIZEOF_OFF_T750,21243
#define SIZEOF_OFF_T	751,21264
#define SYSTEM_SIZEOF_OFF_T 753,21297
typedef ulonglong my_off_t;757,21382
typedef unsigned long my_off_t;759,21416
#define MY_FILEPOS_ERROR	761,21455
typedef off_t os_off_t;763,21535
#define socket_errno	767,21588
#define SOCKET_EINTR	768,21627
#define SOCKET_EAGAIN	769,21657
#define SOCKET_EWOULDBLOCK 770,21694
#define SOCKET_ENFILE	771,21736
#define SOCKET_EMFILE	772,21765
#define socket_errno	774,21813
#define SOCKET_EINTR	775,21847
#define SOCKET_EAGAIN	776,21877
#define SOCKET_EWOULDBLOCK 777,21914
#define SOCKET_ENFILE	778,21956
#define SOCKET_EMFILE	779,21988
#define closesocket(780,22020
#define socket_errno	782,22071
#define closesocket(783,22098
#define SOCKET_EINTR	784,22130
#define SOCKET_EAGAIN	785,22157
#define SOCKET_EWOULDBLOCK 786,22186
#define SOCKET_ENFILE	787,22225
#define SOCKET_EMFILE	788,22254
typedef uint8		int7;791,22291
typedef short		int15;792,22355
typedef char		*my_string;my_string793,22422
typedef unsigned long	size_s;794,22475
typedef int		myf;795,22545
typedef char		byte;797,22618
typedef char		my_bool;799,22677
typedef char		bool;801,22812
#define INT8(804,22932
#define INT16(805,22960
#define INT32(806,22989
#define MYF(807,23018
#define LL(811,23078
#define LL(813,23106
#define reg1 822,23280
#define reg2 823,23302
#define reg3 824,23324
#define reg4 825,23346
#define reg5 826,23368
#define reg6 827,23390
#define reg7 828,23412
#define reg8 829,23434
#define reg9 830,23456
#define reg10 831,23478
#define reg11 832,23501
#define reg12 833,23524
#define reg13 834,23547
#define reg14 835,23570
#define reg15 836,23593
#define reg16 837,23616
#define dbug_volatile 846,23805
#define dbug_volatile848,23842
#define SCALE_SEC	852,23904
#define SCALE_USEC	853,23926
#define MY_HOW_OFTEN_TO_ALARM	854,23951
#define MY_HOW_OFTEN_TO_WRITE	855,24022
#define set_timespec(859,24146
#define set_timespec(861,24254
#define sint2korr(878,24673
#define sint3korr(879,24713
#define sint4korr(887,25052
#define uint2korr(888,25091
#define uint3korr(890,25151
#define uint3korr(894,25306
#define uint4korr(896,25379
#define uint5korr(897,25427
#define uint8korr(902,25682
#define sint8korr(903,25726
#define int2store(904,25769
#define int3store(905,25823
#define int4store(908,25953
#define int5store(909,26004
#define int8store(914,26203
} doubleget_union;919,26306
#define doubleget(920,26325
#define doublestore(925,26461
#define float4get(927,26596
#define float8get(928,26658
#define float4store(929,26700
#define float8store(930,26770
#define sint2korr(934,26857
#define sint3korr(936,26955
#define sint4korr(944,27294
#define sint8korr(948,27477
#define uint2korr(949,27522
#define uint3korr(951,27624
#define uint4korr(954,27773
#define uint5korr(958,27967
#define uint8korr(963,28222
#define int2store(972,28634
#define int3store(975,28786
#define int4store(980,28993
#define int5store(984,29153
#define int8store(989,29317
#define float4store(994,29501
#define float4get(999,29753
#define float8store(1005,30094
#define float8get(1014,30606
#define float4get(1025,31182
#define float4store(1026,31258
#define doublestore(1029,31407
#define doubleget(1037,31918
#define float8get(1049,32517
#define float8store(1050,32561
#define ushortget(1063,32867
#define shortget(1065,32979
#define longget(1067,33092
#define ulongget(1073,33303
#define shortstore(1079,33516
#define longstore(1082,33639
#define doubleget(1087,33772
#define doublestore(1088,33842
#define longlongget(1089,33913
#define longlongstore(1090,33987
#define ushortget(1094,34071
#define shortget(1095,34116
#define longget(1096,34160
#define ulongget(1097,34203
#define shortstore(1098,34249
#define longstore(1099,34288
#define doubleget(1101,34344
#define doublestore(1102,34420
#define longlongget(1104,34520
#define longlongstore(1105,34600
#define my_sprintf(1111,34800
#define my_sprintf(1114,34876
#define my_sprintf(1116,34941
#define thread_safe_increment(1121,35046
#define thread_safe_add(1122,35087
#define thread_safe_sub(1123,35131
#define statistic_increment(1124,35175
#define statistic_add(1125,35216
#define DES_cblock 1131,35358
#define DES_key_schedule 1132,35388
#define DES_set_key_unchecked(1133,35430
#define DES_ede3_cbc_encrypt(1134,35499

include/my_list.h,201
#define _list_h_18,762
typedef struct st_list 24,820
} LIST;27,889
typedef int (*list_walk_action)list_walk_action29,898
#define rest(39,1295
#define list_push(40,1323
#define list_pop(41,1369

include/my_net.h,472
#define _my_net_h27,928
#define ioctlsocket(58,1569
#undef HAVE_FCNTL59,1636
#define O_NONBLOCK 63,1724
#define in_addr_t 72,2054
#define my_gethostbyname_r_free(95,2724
#define GETHOSTBYNAME_BUFF_SIZE 97,2826
#define GETHOSTBYNAME_BUFF_SIZE 101,2991
#define my_gethostbyname_r_free(105,3184
#define my_gethostbyname_r(107,3224
#define my_gethostbyname_r_free(108,3299
#define GETHOSTBYNAME_BUFF_SIZE 112,3410
#undef h_errno117,3525
#define h_errno 118,3540

include/my_no_pthread.h,180
#define _my_no_pthread_h24,968
#define pthread_mutex_init(26,994
#define pthread_mutex_lock(27,1026
#define pthread_mutex_unlock(28,1056
#define pthread_mutex_destroy(29,1088

include/my_nosys.h,238
#define _my_nosys_h22,892
#define __MY_NOSYS__28,973
#undef my_read	37,1118
#undef my_write38,1169
#undef my_seek39,1185
#define my_read(40,1200
#define my_write(41,1248
#define my_malloc(46,1494
#define my_no_flags_free(47,1529

include/my_pthread.h,10204
#define _my_pthread_h20,827
#define ETIME 24,883
typedef ULONG     HANDLE;34,1045
typedef ULONG     DWORD;35,1071
typedef int sigset_t;36,1096
typedef HMTX             pthread_mutex_t;40,1137
typedef CRITICAL_SECTION pthread_mutex_t;42,1185
typedef HANDLE		 pthread_t;44,1234
typedef struct thread_attr 45,1262
} pthread_attr_t 49,1361
typedef struct { int dummy; } pthread_condattr_t;51,1381
typedef struct st_pthread_link 55,1474
} pthread_link;58,1558
} pthread_cond_t;67,1674
struct timespec 71,1706
typedef int pthread_mutexattr_t;77,1808
#define win_pthread_self 78,1841
#define pthread_handler_decl(80,1905
typedef void * (_Optlink *pthread_handler)pthread_handler81,1966
#define pthread_handler_decl(83,2024
typedef void * (__cdecl *pthread_handler)pthread_handler84,2084
#define ETIMEDOUT 106,3097
#define getpid(107,3154
#define pthread_self(109,3199
#define HAVE_LOCALTIME_R	110,3239
#define _REENTRANT	111,3267
#define HAVE_PTHREAD_ATTR_SETSTACKSIZE	112,3290
#undef SAFE_MUTEX	115,3374
#define pthread_key(116,3427
#define pthread_key_create(117,3461
#define pthread_key_delete(118,3523
#define pthread_getspecific(119,3564
#define my_pthread_getspecific(120,3612
#define my_pthread_getspecific_ptr(121,3669
#define my_pthread_setspecific_ptr(122,3730
#define pthread_setspecific(123,3794
#define pthread_key(125,3857
#define pthread_key_create(126,3905
#define pthread_key_delete(127,3954
#define pthread_getspecific(128,4001
#define my_pthread_getspecific(129,4039
#define my_pthread_getspecific_ptr(130,4082
#define my_pthread_setspecific_ptr(131,4126
#define pthread_setspecific(132,4178
#define pthread_equal(135,4277
#define my_pthread_setprio(141,4566
#define pthread_kill(142,4649
#define pthread_exit(143,4684
#define pthread_mutex_init(145,4730
#define pthread_mutex_lock(146,4792
#define pthread_mutex_trylock(147,4851
#define pthread_mutex_unlock(148,4930
#define pthread_mutex_destroy(149,4987
#define my_pthread_setprio(150,5045
#define pthread_kill(151,5121
#define pthread_attr_setdetachstate(155,5218
#define my_pthread_attr_setprio(156,5276
#define pthread_attr_setscope(157,5339
#define pthread_detach_this_thread(158,5374
#define pthread_condattr_init(159,5411
#define pthread_condattr_destroy(160,5444
#define my_pthread_getprio(164,5592
#define _REENTRANT172,5746
#define HAVE_NONPOSIX_SIGWAIT175,5773
#define pthread_t 176,5803
#define pthread_cond_t 177,5830
#define pthread_mutex_t 178,5860
#define pthread_key_t 179,5892
typedef int pthread_attr_t;180,5927
#define pthread_key_create(182,5989
#define pthread_key_delete(183,6044
#define pthread_handler_decl(185,6092
#define pthread_key(186,6143
#define my_pthread_getspecific(189,6239
#define my_pthread_getspecific_ptr(190,6311
#define pthread_setspecific(192,6380
#define my_pthread_setspecific_ptr(193,6434
#define pthread_create(195,6500
#define pthread_cond_init(196,6581
#define pthread_cond_destroy(197,6645
#define pthread_cond_signal(198,6693
#define pthread_cond_wait(199,6739
#define pthread_cond_timedwait(200,6789
#define pthread_cond_broadcast(201,6855
#define pthread_mutex_init(203,6908
#define pthread_mutex_lock(204,6974
#define pthread_mutex_unlock(205,7018
#define pthread_mutex_destroy(206,7066
#define pthread_self(208,7117
#define pthread_exit(209,7151
#define pthread_equal(210,7187
#define pthread_kill(211,7237
#define HAVE_PTHREAD_KILL212,7281
#define pthread_sigmask(214,7308
#define pthread_detach_this_thread(218,7422
#define pthread_attr_init(220,7477
#define pthread_attr_destroy(221,7523
#define pthread_attr_setscope(222,7572
#define pthread_attr_setdetachstate(223,7624
#define my_pthread_setprio(224,7682
#define my_pthread_getprio(225,7732
#define my_pthread_attr_setprio(226,7780
#define sigwait 231,7887
#undef sigwait233,7935
#undef _REENTRANT	235,7957
#define _REENTRANT238,8057
#define pthread_exit(255,8454
#define pthread_key(260,8558
#define my_pthread_getspecific_ptr(261,8599
#define my_pthread_setspecific_ptr(262,8669
#define pthread_detach_this_thread(263,8744
#define pthread_handler_decl(264,8781
typedef void *(* pthread_handler)265,8832
#define HAVE_rts_threads270,8985
#define pthread_sigmask(272,9049
#define PTHREAD_CREATE_DETACHED 273,9105
#define PTHREAD_SCOPE_SYSTEM 274,9165
#define PTHREAD_SCOPE_PROCESS 275,9216
#define USE_ALARM_THREAD276,9266
#define USE_ALARM_THREAD278,9322
#undef	HAVE_LOCALTIME_R279,9347
#define HAVE_LOCALTIME_R280,9371
#undef	HAVE_PTHREAD_ATTR_SETSCOPE281,9396
#define HAVE_PTHREAD_ATTR_SETSCOPE282,9430
#undef HAVE_GETHOSTBYNAME_R_GLIBC2_STYLE	283,9465
#undef HAVE_RWLOCK_T284,9536
#undef HAVE_RWLOCK_INIT285,9557
#undef HAVE_PTHREAD_RWLOCK_RDLOCK286,9581
#undef HAVE_SNPRINTF287,9615
#define sigset(289,9637
#define signal(290,9697
#define my_pthread_attr_setprio(291,9757
#undef HAVE_NONPOSIX_SIGWAIT299,10005
#define HAVE_NONPOSIX_SIGWAIT	300,10034
#define my_sigwait(304,10138
#define pthread_mutex_init(311,10298
#define pthread_cond_init(315,10478
#define pthread_sigmask(321,10741
#define sigset(328,11181
#define my_pthread_setprio(339,11751
#define my_pthread_setprio(341,11847
#define my_pthread_attr_setprio(349,12053
#define pthread_attr_setscope(356,12288
#undef	HAVE_GETHOSTBYADDR_R	357,12323
#define pthread_cond_timedwait(364,12581
#define my_pthread_getspecific(368,12683
#define pthread_setspecific(369,12730
#define my_pthread_getspecific(371,12858
#define my_pthread_getspecific(373,12929
#define pthread_condattr_init 383,13234
#define pthread_condattr_destroy 384,13288
#define pthread_key_delete(389,13441
#define pthread_cond_destroy(393,13544
#define pthread_mutex_destroy(394,13593
#define pthread_attr_delete(395,13643
#define pthread_condattr_delete(396,13691
#define pthread_attr_setstacksize(397,13743
#define pthread_equal(398,13799
#define pthread_cond_timedwait(399,13839
#define pthread_attr_init(400,13904
#define pthread_attr_destroy(401,13956
#define pthread_attr_setdetachstate(402,14011
#define pthread_create(403,14069
#define pthread_sigmask(404,14134
#define pthread_kill(405,14190
#undef	pthread_detach_this_thread406,14233
#define pthread_detach_this_thread(407,14267
#define pthread_sigmask(411,14396
#define pthread_kill(412,14452
#define pthread_condattr_init(413,14495
#define pthread_condattr_destroy(414,14545
#define pthread_signal(415,14598
#undef	pthread_detach_this_thread416,14643
#define pthread_detach_this_thread(417,14677
#undef sigset418,14770
#define sigset(419,14784
#define pthread_key_create(424,15058
#define pthread_attr_init(428,15201
#define pthread_attr_destroy(429,15253
#define pthread_attr_setdetachstate(430,15308
#define pthread_create(431,15366
#define pthread_sigmask(433,15455
#define pthread_kill(435,15518
#undef	pthread_detach_this_thread436,15561
#define pthread_detach_this_thread(437,15595
#define HAVE_PTHREAD_KILL439,15765
#undef pthread_cond_timedwait445,15892
#define pthread_cond_timedwait(446,15922
#define pthread_attr_getstacksize(452,16139
#undef pthread_mutex_trylock457,16372
#define pthread_mutex_trylock(458,16401
#define SAFE_MUTEX_DETECT_DESTROY465,16653
typedef struct st_safe_mutex_t468,16695
} safe_mutex_t;477,16927
typedef struct st_safe_mutex_info_t486,17153
} safe_mutex_info_t;492,17304
#undef pthread_mutex_init509,18042
#undef pthread_mutex_lock510,18068
#undef pthread_mutex_unlock511,18094
#undef pthread_mutex_destroy512,18122
#undef pthread_mutex_wait513,18151
#undef pthread_mutex_timedwait514,18177
#undef pthread_mutex_t515,18208
#undef pthread_cond_wait516,18231
#undef pthread_cond_timedwait517,18256
#undef pthread_mutex_trylock518,18286
#define pthread_mutex_init(519,18315
#define pthread_mutex_lock(520,18390
#define pthread_mutex_unlock(521,18459
#define pthread_mutex_destroy(522,18532
#define pthread_cond_wait(523,18607
#define pthread_cond_timedwait(524,18680
#define pthread_mutex_trylock(525,18769
#define pthread_mutex_t 526,18824
#define safe_mutex_assert_owner(527,18861
#define safe_mutex_assert_owner(529,18978
#undef HAVE_PTHREAD_RWLOCK_RDLOCK535,19120
#undef HAVE_RWLOCK_INIT536,19154
#undef HAVE_RWLOCK_T537,19178
#define rw_lock_t 542,19296
#define my_rwlock_init(543,19330
#define rw_rdlock(544,19386
#define rw_wrlock(545,19431
#define rw_tryrdlock(546,19476
#define rw_trywrlock(547,19527
#define rw_unlock(548,19578
#define rwlock_destroy(549,19625
#define rw_lock_t 551,19720
#define my_rwlock_init(552,19755
#define rw_rdlock(553,19812
#define rw_wrlock(554,19858
#define rw_tryrdlock(555,19904
#define rw_trywrlock(556,19958
#define rw_unlock(557,20012
#define rwlock_destroy(558,20058
#define rw_lock_t 561,20198
#define my_rwlock_init(563,20232
typedef struct _my_rw_lock_t 566,20344
} my_rw_lock_t;572,20616
#define rw_lock_t 574,20633
#define rw_rdlock(575,20664
#define rw_wrlock(576,20703
#define rw_tryrdlock(577,20742
#define rw_trywrlock(578,20787
#define rw_unlock(579,20832
#define rwlock_destroy(580,20871
#define GETHOSTBYADDR_BUFF_SIZE 591,21273
#define thr_setconcurrency(594,21343
#define pthread_attr_setstacksize(597,21482
#define MY_MUTEX_INIT_SLOW 601,21571
#define MY_MUTEX_INIT_FAST 602,21605
#define MY_MUTEX_INIT_ERRCHK 603,21639
#undef  MY_MUTEX_INIT_FAST606,21764
#define MY_MUTEX_INIT_FAST 607,21791
#undef MY_INIT_MUTEX_ERRCHK611,21939
#define MY_INIT_MUTEX_ERRCHK 612,21967
#define THREAD_NAME_SIZE 626,22385
#define DEFAULT_THREAD_STACK	632,22540
#define DEFAULT_THREAD_STACK	634,22587
struct st_my_thread_var637,22636
extern struct st_my_thread_var *_my_thread_var(_my_thread_var655,22983
#define my_thread_var 656,23061
#define my_errno 657,23102
#define thread_safe_increment(668,23421
#define thread_safe_add(669,23486
#define thread_safe_sub(670,23553
#define statistic_increment(671,23620
#define statistic_add(672,23686
#define thread_safe_increment(674,23756
#define thread_safe_add(676,23853
#define thread_safe_sub(678,23949
#define statistic_increment(681,24068
#define statistic_add(682,24134
#define statistic_increment(684,24204
#define statistic_add(685,24243

include/my_semaphore.h,80
#define _my_semaphore_h_32,1122
typedef HANDLE sem_t;41,1263
} sem_t;47,1382

include/my_sys.h,5407
#define _my_sys_h18,763
typedef struct my_aio_result 23,868
} my_aio_result;26,944
#define MYSYS_PROGRAM_USES_CURSES(41,1186
#define MYSYS_PROGRAM_DONT_USE_CURSES(42,1288
#define MY_INIT(43,1396
#define MAXMAPS	45,1455
#define ERRMOD	46,1511
#define ERRMSGSIZE	47,1570
#define NRERRBUFFS	48,1639
#define MY_FILE_ERROR	49,1691
#define MY_FFNF	52,1763
#define MY_FNABP	53,1812
#define MY_NABP	54,1872
#define MY_FAE	55,1932
#define MY_WME	56,1975
#define MY_WAIT_IF_FULL 57,2023
#define MY_RAID 58,2094
#define MY_FULL_IO 59,2185
#define MY_DONT_CHECK_FILESIZE 62,2275
#define MY_LINK_WARNING 63,2342
#define MY_COPYTIME	64,2409
#define MY_DELETE_OLD	65,2460
#define MY_RESOLVE_LINK 66,2517
#define MY_HOLD_ORIGINAL_MODES 67,2585
#define MY_REDEL_MAKE_BACKUP 68,2657
#define MY_SEEK_NOT_DONE 69,2690
#define MY_DONT_WAIT	70,2754
#define MY_ZEROFILL	71,2819
#define MY_ALLOW_ZERO_PTR 72,2882
#define MY_FREE_ON_ERROR 73,2951
#define MY_HOLD_ON_ERROR 74,3023
#define MY_THREADSAFE	75,3097
#define MY_DONT_OVERWRITE_FILE 76,3167
#define MY_CHECK_ERROR	78,3240
#define MY_GIVE_INFO	79,3306
#define ME_HIGHBYTE	81,3364
#define ME_NOCUR	82,3410
#define ME_OLDWIN	83,3460
#define ME_BELL	84,3501
#define ME_HOLDTANG	85,3558
#define ME_WAITTOT	86,3609
#define ME_WAITTANG	87,3675
#define ME_NOREFRESH	88,3728
#define ME_NOINPUT	89,3778
#define ME_COLOUR1	90,3833
#define ME_COLOUR2	91,3902
#define ME_COLOUR3	92,3942
#define MY_REPLACE_DIR	95,4025
#define MY_REPLACE_EXT	96,4088
#define MY_UNPACK_FILENAME	97,4149
#define MY_PACK_FILENAME	98,4208
#define MY_RESOLVE_SYMLINKS	99,4263
#define MY_RETURN_REAL_PATH	100,4327
#define MY_SAFE_PATH	101,4390
#define MY_RELATIVE_PATH	102,4450
#define MY_SEEK_SET	105,4533
#define MY_SEEK_CUR	106,4555
#define MY_SEEK_END	107,4577
#define MY_NO_SETS 110,4637
#define MY_COMPILED_SETS 111,4664
#define MY_CONFIG_SETS 112,4724
#define MY_INDEX_SETS 113,4791
#define MY_LOADED_SETS 114,4863
#define MY_WAIT_FOR_USER_TO_FIX_PANIC	117,4960
#define MY_WAIT_GIVE_USER_A_MESSAGE	118,5018
#define MIN_COMPRESS_LENGTH	119,5086
#define DEFAULT_KEYCACHE_BLOCK_SIZE	120,5149
#define MAX_KEYCACHE_BLOCK_SIZE	121,5190
#define MY_KEEP_PREALLOC	124,5254
#define MY_MARK_BLOCKS_FREE 125,5281
#define my_malloc(130,5416
#define my_malloc_ci(131,5486
#define my_realloc(132,5553
#define my_checkmalloc(133,5636
#define my_free(134,5691
#define my_memdup(135,5757
#define my_strdup(136,5823
#define my_strdup_with_length(137,5883
#define QUICK_SAFEMALLOC 138,5972
#define NORMAL_SAFEMALLOC 139,6015
#define CALLER_INFO_PROTO 143,6163
#define CALLER_INFO 144,6223
#define ORIG_CALLER_INFO 145,6272
#define my_checkmalloc(147,6321
#undef TERMINATE148,6346
#define TERMINATE(149,6363
#define QUICK_SAFEMALLOC150,6387
#define NORMAL_SAFEMALLOC151,6412
#define my_malloc_ci(153,6484
#define my_free(160,6843
#define CALLER_INFO_PROTO 161,6889
#define CALLER_INFO 162,6931
#define ORIG_CALLER_INFO 163,6973
#define alloca 171,7185
#define my_alloca(173,7235
#define my_afree(174,7279
#define my_alloca(176,7310
#define my_afree(177,7353
#undef USE_HALLOC187,7608
#define malloc(191,7658
#define free(192,7697
typedef struct wild_file_pack	251,10065
} WF_PACK;256,10281
typedef struct st_typelib 258,10293
} TYPELIB;262,10461
enum cache_type264,10473
  READ_CACHE,266,10491
  READ_CACHE,WRITE_CACHE,266,10491
  SEQ_READ_APPEND	267,10517
  READ_FIFO,268,10569
  READ_FIFO, READ_NET,268,10569
  READ_FIFO, READ_NET,WRITE_NET}WRITE_NET268,10569
enum flush_type270,10604
  FLUSH_KEEP,272,10622
  FLUSH_KEEP, FLUSH_RELEASE,272,10622
  FLUSH_KEEP, FLUSH_RELEASE, FLUSH_IGNORE_CHANGED,272,10622
  FLUSH_KEEP, FLUSH_RELEASE, FLUSH_IGNORE_CHANGED, FLUSH_FORCE_WRITE272,10622
typedef struct st_record_cache	275,10695
} RECORD_CACHE;287,11038
enum file_type289,11055
  UNOPEN 291,11072
  UNOPEN = 0, FILE_BY_OPEN,291,11072
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE,291,11072
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN,291,11072
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,291,11072
  FILE_BY_MKSTEMP,292,11151
  FILE_BY_MKSTEMP, FILE_BY_DUP292,11151
extern struct my_file_info295,11186
} my_file_info[my_file_info302,11333
typedef struct st_dynamic_array305,11361
} DYNAMIC_ARRAY;311,11488
typedef struct st_dynamic_string313,11506
} DYNAMIC_STRING;317,11596
typedef int (*IO_CACHE_CALLBACK)IO_CACHE_CALLBACK320,11635
typedef struct st_io_cache_share323,11705
} IO_CACHE_SHARE;335,12035
typedef struct st_io_cache	338,12061
} IO_CACHE;455,16588
typedef int (*qsort2_cmp)qsort2_cmp457,16601
#define my_b_clear(462,16734
#define my_b_inited(463,16776
#define my_b_EOF 464,16817
#define my_b_read(466,16843
#define my_b_write(472,17080
#define my_b_get(478,17326
#define my_b_write_byte(484,17527
#define my_b_fill_cache(489,17708
#define my_b_tell(492,17816
#define my_b_bytes_in_cache(498,18015
#define dont_break(590,22529
#define allow_break(591,22550
#define base_name(602,22981
#define flush_io_cache(687,27538
#define my_init_dynamic_array(703,28312
#define my_init_dynamic_array_ci(704,28391
#define dynamic_array_ptr(715,29100
#define dynamic_element(716,29202
#define push_dynamic(717,29291
#define my_malloc_lock(734,30117
#define my_free_lock(735,30164
#define alloc_root_inited(737,30214

include/my_tree.h,887
#define _tree_h18,761
#define MAX_TREE_HIGHT	24,895
#define ELEMENT_KEY(26,922
#define tree_set_pointer(30,1057
typedef enum { left_root_right,32,1137
typedef enum { left_root_right, right_root_left 32,1137
typedef enum { left_root_right, right_root_left } TREE_WALK;32,1137
typedef uint32 element_count;33,1198
typedef int (*tree_walk_action)tree_walk_action34,1228
typedef enum { free_init,36,1291
typedef enum { free_init, free_free,36,1291
typedef enum { free_init, free_free, free_end 36,1291
typedef enum { free_init, free_free, free_end } TREE_FREE;36,1291
typedef void (*tree_element_free)tree_element_free37,1350
typedef struct st_tree_element 40,1425
} TREE_ELEMENT;44,1568
typedef struct st_tree_element 46,1590
} TREE_ELEMENT;50,1722
typedef struct st_tree 53,1758
} TREE;62,2050
#define is_tree_inited(72,2416
#define TREE_ELEMENT_EXTRA_SIZE 81,2727

include/myisam.h,2662
#define _myisam_h20,827
#define MI_MAX_KEY	35,1079
#define MI_MAX_KEY_SEG	36,1125
#define MI_MAX_KEY_LENGTH 37,1179
#define MI_MAX_KEY_BUFF 39,1210
#define MI_MAX_POSSIBLE_KEY_BUFF 40,1276
#define MI_MAX_POSSIBLE_KEY	41,1341
#define MI_MAX_MSG_BUF 42,1394
#define MI_NAME_IEXT	43,1467
#define MI_NAME_DEXT	44,1495
#define MI_MAX_TEMP_LENGTH	46,1570
#define MI_KEY_BLOCK_LENGTH	49,1679
#define MI_MIN_KEY_BLOCK_LENGTH	50,1743
#define MI_MAX_KEY_BLOCK_LENGTH	51,1807
#define mi_portable_sizeof_char_ptr 53,1846
typedef uint32 ha_checksum;55,1885
typedef struct st_mi_isaminfo	59,1944
} MI_ISAMINFO;89,3154
typedef struct st_mi_create_info92,3171
} MI_CREATE_INFO;104,3501
typedef struct st_myisam_info MI_INFO;107,3565
typedef struct st_mi_keyseg	109,3605
} MI_KEYSEG;120,3997
typedef struct st_mi_keydef	125,4035
} MI_KEYDEF;151,5222
#define MI_UNIQUE_HASH_LENGTH	154,5237
typedef struct st_unique_def	156,5270
} MI_UNIQUEDEF;162,5474
typedef struct st_mi_decode_tree	164,5491
} MI_DECODE_TREE;169,5614
typedef struct st_columndef	180,5813
} MI_COLUMNDEF;195,6329
typedef void (* invalidator_by_filename)198,6399
#define   MYISAMCHK_REPAIR 256,9336
#define   MYISAMCHK_VERIFY 257,9399
#define T_AUTO_INC 269,9814
#define T_AUTO_REPAIR 270,9848
#define T_BACKUP_DATA 271,9918
#define T_CALC_CHECKSUM 272,9952
#define T_CHECK 273,9986
#define T_CHECK_ONLY_CHANGED 274,10056
#define T_CREATE_MISSING_KEYS 275,10126
#define T_DESCRIPT 276,10161
#define T_DONT_CHECK_CHECKSUM 277,10197
#define T_EXTEND 278,10233
#define T_FAST 279,10269
#define T_FORCE_CREATE 280,10339
#define T_FORCE_UNIQUENESS 281,10409
#define T_INFO 282,10452
#define T_MEDIUM 283,10495
#define T_QUICK 284,10538
#define T_READONLY 285,10608
#define T_REP 286,10678
#define T_REP_BY_SORT 287,10721
#define T_REP_PARALLEL 288,10791
#define T_RETRY_WITHOUT_QUICK 289,10861
#define T_SAFE_REPAIR 290,10904
#define T_SILENT 291,10947
#define T_SORT_INDEX 292,10990
#define T_SORT_RECORDS 293,11060
#define T_STATISTICS 294,11130
#define T_UNPACK 295,11173
#define T_UPDATE_STATE 296,11216
#define T_VERBOSE 297,11259
#define T_VERY_SILENT 298,11302
#define T_WAIT_FOREVER 299,11345
#define T_WRITE_LOOP 300,11388
#define T_REP_ANY 302,11440
#define TT_USEFRM 309,11614
#define O_NEW_INDEX	311,11649
#define O_NEW_DATA	312,11699
#define O_DATA_LOST	313,11720
typedef struct st_sort_key_blocks	317,11805
} SORT_KEY_BLOCKS;323,11967
typedef struct st_mi_check_param325,11987
} MI_CHECK;353,13001
typedef struct st_sort_info356,13015
} SORT_INFO;373,13415
typedef struct st_mi_sort_param376,13430
} MI_SORT_PARAM;399,14181

include/myisammrg.h,360
#define _myisammrg_h20,834
#define MYRG_NAME_EXT	34,1009
#define MERGE_INSERT_DISABLED	37,1075
#define MERGE_INSERT_TO_FIRST	38,1107
#define MERGE_INSERT_TO_LAST	39,1139
typedef struct st_mymerge_info	45,1240
} MYMERGE_INFO;55,1674
typedef struct st_myrg_table_info57,1691
} MYRG_TABLE;61,1784
typedef struct st_myrg_info63,1799
} MYRG_INFO;76,2220

include/myisampack.h,1100
#define mi_sint2korr(24,892
#define mi_sint3korr(26,993
#define mi_sint4korr(34,1335
#define mi_sint8korr(38,1521
#define mi_uint2korr(39,1572
#define mi_uint3korr(41,1677
#define mi_uint4korr(44,1829
#define mi_uint5korr(48,2026
#define mi_uint6korr(53,2283
#define mi_uint7korr(60,2604
#define mi_uint8korr(68,2972
#define mi_int2store(78,3387
#define mi_int3store(81,3550
#define mi_int4store(87,3798
#define mi_int5store(92,4025
#define mi_int6store(99,4329
#define mi_int7store(107,4676
#define mi_int8store(116,5067
#define mi_float4store(124,5293
#define mi_float4get(129,5483
#define mi_float8store(136,5720
#define mi_float8get(145,6085
#define mi_float4store(157,6494
#define mi_float4get(162,6687
#define mi_float8store(170,6996
#define mi_float8get(179,7360
#define mi_float8store(191,7768
#define mi_float8get(200,8132
#define mi_rowstore(216,8679
#define mi_rowkorr(217,8725
#define mi_rowstore(219,8773
#define mi_rowkorr(220,8849
#define mi_sizestore(224,8924
#define mi_sizekorr(225,8971
#define mi_sizestore(227,9021
#define mi_sizekorr(228,9163

include/mysql.h,2573
#define _mysql_h18,767
#undef WIN21,842
#undef _WIN22,853
#undef _WIN3223,865
#undef _WIN6424,879
#undef __WIN__25,893
typedef char my_bool;37,1093
#define __WIN__39,1177
#define STDCALL42,1222
#define STDCALL 44,1244
typedef char * gptr;46,1277
#define my_socket 50,1340
typedef int my_socket;52,1371
#define CLIENT_NET_READ_TIMEOUT	63,1584
#define CLIENT_NET_WRITE_TIMEOUT	64,1651
#define IS_PRI_KEY(70,1793
#define IS_NOT_NULL(71,1836
#define IS_BLOB(72,1881
#define IS_NUM(73,1918
#define IS_NUM_FIELD(74,1988
#define INTERNAL_NUM_FIELD(75,2037
typedef struct st_mysql_field 77,2214
} MYSQL_FIELD;88,2789
typedef char **MYSQL_ROW;MYSQL_ROW90,2805
typedef unsigned int MYSQL_FIELD_OFFSET;91,2870
typedef unsigned long my_ulonglong;94,2975
typedef unsigned __int64 my_ulonglong;96,3035
typedef unsigned long long my_ulonglong;98,3080
#define MYSQL_COUNT_ERROR 101,3129
typedef struct st_mysql_rows 103,3176
} MYSQL_ROWS;106,3275
typedef MYSQL_ROWS *MYSQL_ROW_OFFSET;MYSQL_ROW_OFFSET108,3290
typedef struct st_mysql_data 112,3380
} MYSQL_DATA;117,3493
struct st_mysql_options 119,3508
enum mysql_option 149,4485
enum mysql_option { MYSQL_OPT_CONNECT_TIMEOUT,149,4485
enum mysql_option { MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS,149,4485
		    MYSQL_OPT_NAMED_PIPE,150,4552
		    MYSQL_OPT_NAMED_PIPE, MYSQL_INIT_COMMAND,150,4552
		    MYSQL_READ_DEFAULT_FILE,151,4600
		    MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,151,4600
		    MYSQL_SET_CHARSET_DIR,152,4657
		    MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME,152,4657
		    MYSQL_OPT_LOCAL_INFILE}MYSQL_OPT_LOCAL_INFILE153,4710
enum mysql_status 155,4742
enum mysql_status { MYSQL_STATUS_READY,155,4742
enum mysql_status { MYSQL_STATUS_READY,MYSQL_STATUS_GET_RESULT,155,4742
		    MYSQL_STATUS_USE_RESULT}MYSQL_STATUS_USE_RESULT156,4806
enum mysql_rpl_type 163,5025
enum mysql_rpl_type { MYSQL_RPL_MASTER,163,5025
enum mysql_rpl_type { MYSQL_RPL_MASTER, MYSQL_RPL_SLAVE,163,5025
		      MYSQL_RPL_ADMIN 164,5082
typedef struct st_mysql 167,5111
} MYSQL;205,6542
typedef struct st_mysql_res 208,6553
} MYSQL_RES;220,7000
#define MAX_MYSQL_MANAGER_ERR 222,7014
#define MAX_MYSQL_MANAGER_MSG 223,7050
#define MANAGER_OK 225,7085
#define MANAGER_INFO 226,7118
#define MANAGER_ACCESS 227,7151
#define MANAGER_CLIENT_ERR 228,7184
#define MANAGER_INTERNAL_ERR 229,7217
typedef struct st_mysql_manager233,7253
} MYSQL_MANAGER;245,7523
#define mysql_reload(410,14442
#define	 mysql_reload(417,14763
#define HAVE_MYSQL_REAL_CONNECT419,14836

include/mysql_com.h,4769
#define _mysql_com_h22,824
#define NAME_LEN	24,846
#define HOSTNAME_LENGTH 25,897
#define USERNAME_LENGTH 26,924
#define SERVER_VERSION_LENGTH 27,951
#define LOCAL_HOST	29,985
#define LOCAL_HOST_NAMEDPIPE 30,1016
#define MYSQL_NAMEDPIPE 33,1100
#define MYSQL_SERVICENAME 34,1132
enum enum_server_command 37,1188
  COM_SLEEP,38,1215
  COM_SLEEP, COM_QUIT,38,1215
  COM_SLEEP, COM_QUIT, COM_INIT_DB,38,1215
  COM_SLEEP, COM_QUIT, COM_INIT_DB, COM_QUERY,38,1215
  COM_SLEEP, COM_QUIT, COM_INIT_DB, COM_QUERY, COM_FIELD_LIST,38,1215
  COM_CREATE_DB,39,1278
  COM_CREATE_DB, COM_DROP_DB,39,1278
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH,39,1278
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH, COM_SHUTDOWN,39,1278
  COM_CREATE_DB, COM_DROP_DB, COM_REFRESH, COM_SHUTDOWN,  COM_STATISTICS,39,1278
  COM_PROCESS_INFO,40,1352
  COM_PROCESS_INFO, COM_CONNECT,40,1352
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL,40,1352
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL, COM_DEBUG,40,1352
  COM_PROCESS_INFO, COM_CONNECT, COM_PROCESS_KILL, COM_DEBUG, COM_PING,40,1352
  COM_TIME,41,1424
  COM_TIME, COM_DELAYED_INSERT,41,1424
  COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER,41,1424
  COM_TIME, COM_DELAYED_INSERT, COM_CHANGE_USER, COM_BINLOG_DUMP,41,1424
  COM_TABLE_DUMP,42,1490
  COM_TABLE_DUMP,  COM_CONNECT_OUT,42,1490
  COM_TABLE_DUMP,  COM_CONNECT_OUT, COM_REGISTER_SLAVE,42,1490
  COM_END	43,1546
#define NOT_NULL_FLAG	46,1584
#define PRI_KEY_FLAG	47,1635
#define UNIQUE_KEY_FLAG 48,1696
#define MULTIPLE_KEY_FLAG 49,1759
#define BLOB_FLAG	50,1817
#define UNSIGNED_FLAG	51,1861
#define ZEROFILL_FLAG	52,1911
#define BINARY_FLAG	53,1961
#define ENUM_FLAG	55,2034
#define AUTO_INCREMENT_FLAG 56,2080
#define TIMESTAMP_FLAG	57,2150
#define SET_FLAG	58,2206
#define NUM_FLAG	59,2250
#define PART_KEY_FLAG	60,2307
#define GROUP_FLAG	61,2367
#define UNIQUE_FLAG	62,2419
#define REFRESH_GRANT	64,2478
#define REFRESH_LOG	65,2530
#define REFRESH_TABLES	66,2581
#define REFRESH_HOSTS	67,2630
#define REFRESH_STATUS	68,2678
#define REFRESH_THREADS	69,2734
#define REFRESH_SLAVE 70,2787
#define REFRESH_MASTER 72,2884
#define REFRESH_READ_LOCK	76,3049
#define REFRESH_FAST	77,3108
#define REFRESH_QUERY_CACHE	80,3205
#define REFRESH_QUERY_CACHE_FREE 81,3239
#define REFRESH_DES_KEY_FILE	82,3304
#define REFRESH_USER_RESOURCES	83,3342
#define CLIENT_LONG_PASSWORD	85,3383
#define CLIENT_FOUND_ROWS	86,3446
#define CLIENT_LONG_FLAG	87,3511
#define CLIENT_CONNECT_WITH_DB	88,3565
#define CLIENT_NO_SCHEMA	89,3634
#define CLIENT_COMPRESS	90,3702
#define CLIENT_ODBC	91,3765
#define CLIENT_LOCAL_FILES	92,3807
#define CLIENT_IGNORE_SPACE	93,3868
#define CLIENT_INTERACTIVE	94,3931
#define CLIENT_SSL 95,3999
#define CLIENT_IGNORE_SIGPIPE 96,4076
#define CLIENT_TRANSACTIONS	97,4139
#define SERVER_STATUS_IN_TRANS 99,4211
#define SERVER_STATUS_AUTOCOMMIT 100,4275
#define MYSQL_ERRMSG_SIZE	102,4344
#define NET_READ_TIMEOUT	103,4374
#define NET_WRITE_TIMEOUT	104,4425
#define NET_WAIT_TIMEOUT	105,4478
typedef struct st_vio Vio;108,4570
#define MAX_CHAR_WIDTH	110,4598
#define MAX_BLOB_WIDTH	111,4660
typedef struct st_net 113,4719
} NET;135,5503
#define packet_error 137,5511
enum enum_field_types 139,5554
enum enum_field_types { FIELD_TYPE_DECIMAL,139,5554
enum enum_field_types { FIELD_TYPE_DECIMAL, FIELD_TYPE_TINY,139,5554
			FIELD_TYPE_SHORT,140,5615
			FIELD_TYPE_SHORT,  FIELD_TYPE_LONG,140,5615
			FIELD_TYPE_FLOAT,141,5654
			FIELD_TYPE_FLOAT,  FIELD_TYPE_DOUBLE,141,5654
			FIELD_TYPE_NULL,142,5695
			FIELD_TYPE_NULL,   FIELD_TYPE_TIMESTAMP,142,5695
			FIELD_TYPE_LONGLONG,143,5739
			FIELD_TYPE_LONGLONG,FIELD_TYPE_INT24,143,5739
			FIELD_TYPE_DATE,144,5780
			FIELD_TYPE_DATE,   FIELD_TYPE_TIME,144,5780
			FIELD_TYPE_DATETIME,145,5819
			FIELD_TYPE_DATETIME, FIELD_TYPE_YEAR,145,5819
			FIELD_TYPE_NEWDATE,146,5860
			FIELD_TYPE_ENUM=147,5883
			FIELD_TYPE_SET=148,5907
			FIELD_TYPE_TINY_BLOB=149,5930
			FIELD_TYPE_MEDIUM_BLOB=150,5959
			FIELD_TYPE_LONG_BLOB=151,5990
			FIELD_TYPE_BLOB=152,6019
			FIELD_TYPE_VAR_STRING=153,6043
			FIELD_TYPE_STRING=154,6073
			FIELD_TYPE_GEOMETRY=155,6099
#define FIELD_TYPE_CHAR 158,6130
#define FIELD_TYPE_INTERVAL 159,6193
#define net_new_transaction(161,6260
struct rand_struct 183,6953
enum Item_result 194,7123
enum Item_result {STRING_RESULT,STRING_RESULT194,7123
enum Item_result {STRING_RESULT,REAL_RESULT,194,7123
enum Item_result {STRING_RESULT,REAL_RESULT,INT_RESULT}INT_RESULT194,7123
typedef struct st_udf_args196,7181
} UDF_ARGS;203,7489
typedef struct st_udf_init207,7551
} UDF_INIT;214,7872
#define NET_HEADER_SIZE 217,7926
#define COMP_HEADER_SIZE 218,7980
#define NULL_LENGTH 254,9066

include/mysql_embed.h,233
#undef HAVE_PSTACK	23,895
#undef HAVE_DLOPEN	24,937
#undef HAVE_OPENSSL25,982
#undef HAVE_VIO26,1002
#undef HAVE_ISAM27,1018
#define DONT_USE_RAID29,1036
#undef  MYSQL_SERVER_SUFFIX31,1059
#define MYSQL_SERVER_SUFFIX 32,1087

include/mysqld_error.h,9277
#define ER_HASHCHK 19,788
#define ER_NISAMCHK 20,812
#define ER_NO 21,837
#define ER_YES 22,856
#define ER_CANT_CREATE_FILE 23,876
#define ER_CANT_CREATE_TABLE 24,909
#define ER_CANT_CREATE_DB 25,943
#define ER_DB_CREATE_EXISTS 26,974
#define ER_DB_DROP_EXISTS 27,1007
#define ER_DB_DROP_DELETE 28,1038
#define ER_DB_DROP_RMDIR 29,1069
#define ER_CANT_DELETE_FILE 30,1099
#define ER_CANT_FIND_SYSTEM_REC 31,1132
#define ER_CANT_GET_STAT 32,1169
#define ER_CANT_GET_WD 33,1199
#define ER_CANT_LOCK 34,1227
#define ER_CANT_OPEN_FILE 35,1253
#define ER_FILE_NOT_FOUND 36,1284
#define ER_CANT_READ_DIR 37,1315
#define ER_CANT_SET_WD 38,1345
#define ER_CHECKREAD 39,1373
#define ER_DISK_FULL 40,1399
#define ER_DUP_KEY 41,1425
#define ER_ERROR_ON_CLOSE 42,1449
#define ER_ERROR_ON_READ 43,1480
#define ER_ERROR_ON_RENAME 44,1510
#define ER_ERROR_ON_WRITE 45,1542
#define ER_FILE_USED 46,1573
#define ER_FILSORT_ABORT 47,1599
#define ER_FORM_NOT_FOUND 48,1629
#define ER_GET_ERRNO 49,1660
#define ER_ILLEGAL_HA 50,1686
#define ER_KEY_NOT_FOUND 51,1713
#define ER_NOT_FORM_FILE 52,1743
#define ER_NOT_KEYFILE 53,1773
#define ER_OLD_KEYFILE 54,1801
#define ER_OPEN_AS_READONLY 55,1829
#define ER_OUTOFMEMORY 56,1862
#define ER_OUT_OF_SORTMEMORY 57,1890
#define ER_UNEXPECTED_EOF 58,1924
#define ER_CON_COUNT_ERROR 59,1955
#define ER_OUT_OF_RESOURCES 60,1987
#define ER_BAD_HOST_ERROR 61,2020
#define ER_HANDSHAKE_ERROR 62,2051
#define ER_DBACCESS_DENIED_ERROR 63,2083
#define ER_ACCESS_DENIED_ERROR 64,2121
#define ER_NO_DB_ERROR 65,2157
#define ER_UNKNOWN_COM_ERROR 66,2185
#define ER_BAD_NULL_ERROR 67,2219
#define ER_BAD_DB_ERROR 68,2250
#define ER_TABLE_EXISTS_ERROR 69,2279
#define ER_BAD_TABLE_ERROR 70,2314
#define ER_NON_UNIQ_ERROR 71,2346
#define ER_SERVER_SHUTDOWN 72,2377
#define ER_BAD_FIELD_ERROR 73,2409
#define ER_WRONG_FIELD_WITH_GROUP 74,2441
#define ER_WRONG_GROUP_FIELD 75,2480
#define ER_WRONG_SUM_SELECT 76,2514
#define ER_WRONG_VALUE_COUNT 77,2547
#define ER_TOO_LONG_IDENT 78,2581
#define ER_DUP_FIELDNAME 79,2612
#define ER_DUP_KEYNAME 80,2642
#define ER_DUP_ENTRY 81,2670
#define ER_WRONG_FIELD_SPEC 82,2696
#define ER_PARSE_ERROR 83,2729
#define ER_EMPTY_QUERY 84,2757
#define ER_NONUNIQ_TABLE 85,2785
#define ER_INVALID_DEFAULT 86,2815
#define ER_MULTIPLE_PRI_KEY 87,2847
#define ER_TOO_MANY_KEYS 88,2880
#define ER_TOO_MANY_KEY_PARTS 89,2910
#define ER_TOO_LONG_KEY 90,2945
#define ER_KEY_COLUMN_DOES_NOT_EXITS 91,2974
#define ER_BLOB_USED_AS_KEY 92,3016
#define ER_TOO_BIG_FIELDLENGTH 93,3049
#define ER_WRONG_AUTO_KEY 94,3085
#define ER_READY 95,3116
#define ER_NORMAL_SHUTDOWN 96,3138
#define ER_GOT_SIGNAL 97,3170
#define ER_SHUTDOWN_COMPLETE 98,3197
#define ER_FORCING_CLOSE 99,3231
#define ER_IPSOCK_ERROR 100,3261
#define ER_NO_SUCH_INDEX 101,3290
#define ER_WRONG_FIELD_TERMINATORS 102,3320
#define ER_BLOBS_AND_NO_TERMINATED 103,3360
#define ER_TEXTFILE_NOT_READABLE 104,3400
#define ER_FILE_EXISTS_ERROR 105,3438
#define ER_LOAD_INFO 106,3472
#define ER_ALTER_INFO 107,3498
#define ER_WRONG_SUB_KEY 108,3525
#define ER_CANT_REMOVE_ALL_FIELDS 109,3555
#define ER_CANT_DROP_FIELD_OR_KEY 110,3594
#define ER_INSERT_INFO 111,3633
#define ER_INSERT_TABLE_USED 112,3661
#define ER_NO_SUCH_THREAD 113,3695
#define ER_KILL_DENIED_ERROR 114,3726
#define ER_NO_TABLES_USED 115,3760
#define ER_TOO_BIG_SET 116,3791
#define ER_NO_UNIQUE_LOGFILE 117,3819
#define ER_TABLE_NOT_LOCKED_FOR_WRITE 118,3853
#define ER_TABLE_NOT_LOCKED 119,3896
#define ER_BLOB_CANT_HAVE_DEFAULT 120,3929
#define ER_WRONG_DB_NAME 121,3968
#define ER_WRONG_TABLE_NAME 122,3998
#define ER_TOO_BIG_SELECT 123,4031
#define ER_UNKNOWN_ERROR 124,4062
#define ER_UNKNOWN_PROCEDURE 125,4092
#define ER_WRONG_PARAMCOUNT_TO_PROCEDURE 126,4126
#define ER_WRONG_PARAMETERS_TO_PROCEDURE 127,4172
#define ER_UNKNOWN_TABLE 128,4218
#define ER_FIELD_SPECIFIED_TWICE 129,4248
#define ER_INVALID_GROUP_FUNC_USE 130,4286
#define ER_UNSUPPORTED_EXTENSION 131,4325
#define ER_TABLE_MUST_HAVE_COLUMNS 132,4363
#define ER_RECORD_FILE_FULL 133,4403
#define ER_UNKNOWN_CHARACTER_SET 134,4436
#define ER_TOO_MANY_TABLES 135,4474
#define ER_TOO_MANY_FIELDS 136,4506
#define ER_TOO_BIG_ROWSIZE 137,4538
#define ER_STACK_OVERRUN 138,4570
#define ER_WRONG_OUTER_JOIN 139,4600
#define ER_NULL_COLUMN_IN_INDEX 140,4633
#define ER_CANT_FIND_UDF 141,4670
#define ER_CANT_INITIALIZE_UDF 142,4700
#define ER_UDF_NO_PATHS 143,4736
#define ER_UDF_EXISTS 144,4765
#define ER_CANT_OPEN_LIBRARY 145,4792
#define ER_CANT_FIND_DL_ENTRY 146,4826
#define ER_FUNCTION_NOT_DEFINED 147,4861
#define ER_HOST_IS_BLOCKED 148,4898
#define ER_HOST_NOT_PRIVILEGED 149,4930
#define ER_PASSWORD_ANONYMOUS_USER 150,4966
#define ER_PASSWORD_NOT_ALLOWED 151,5006
#define ER_PASSWORD_NO_MATCH 152,5043
#define ER_UPDATE_INFO 153,5077
#define ER_CANT_CREATE_THREAD 154,5105
#define ER_WRONG_VALUE_COUNT_ON_ROW 155,5140
#define ER_CANT_REOPEN_TABLE 156,5181
#define ER_INVALID_USE_OF_NULL 157,5215
#define ER_REGEXP_ERROR 158,5251
#define ER_MIX_OF_GROUP_FUNC_AND_FIELDS 159,5280
#define ER_NONEXISTING_GRANT 160,5325
#define ER_TABLEACCESS_DENIED_ERROR 161,5359
#define ER_COLUMNACCESS_DENIED_ERROR 162,5400
#define ER_ILLEGAL_GRANT_FOR_TABLE 163,5442
#define ER_GRANT_WRONG_HOST_OR_USER 164,5482
#define ER_NO_SUCH_TABLE 165,5523
#define ER_NONEXISTING_TABLE_GRANT 166,5553
#define ER_NOT_ALLOWED_COMMAND 167,5593
#define ER_SYNTAX_ERROR 168,5629
#define ER_DELAYED_CANT_CHANGE_LOCK 169,5658
#define ER_TOO_MANY_DELAYED_THREADS 170,5699
#define ER_ABORTING_CONNECTION 171,5740
#define ER_NET_PACKET_TOO_LARGE 172,5776
#define ER_NET_READ_ERROR_FROM_PIPE 173,5813
#define ER_NET_FCNTL_ERROR 174,5854
#define ER_NET_PACKETS_OUT_OF_ORDER 175,5886
#define ER_NET_UNCOMPRESS_ERROR 176,5927
#define ER_NET_READ_ERROR 177,5964
#define ER_NET_READ_INTERRUPTED 178,5995
#define ER_NET_ERROR_ON_WRITE 179,6032
#define ER_NET_WRITE_INTERRUPTED 180,6067
#define ER_TOO_LONG_STRING 181,6105
#define ER_TABLE_CANT_HANDLE_BLOB 182,6137
#define ER_TABLE_CANT_HANDLE_AUTO_INCREMENT 183,6176
#define ER_DELAYED_INSERT_TABLE_LOCKED 184,6225
#define ER_WRONG_COLUMN_NAME 185,6269
#define ER_WRONG_KEY_COLUMN 186,6303
#define ER_WRONG_MRG_TABLE 187,6336
#define ER_DUP_UNIQUE 188,6368
#define ER_BLOB_KEY_WITHOUT_LENGTH 189,6395
#define ER_PRIMARY_CANT_HAVE_NULL 190,6435
#define ER_TOO_MANY_ROWS 191,6474
#define ER_REQUIRES_PRIMARY_KEY 192,6504
#define ER_NO_RAID_COMPILED 193,6541
#define ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE 194,6574
#define ER_KEY_DOES_NOT_EXITS 195,6622
#define ER_CHECK_NO_SUCH_TABLE 196,6657
#define ER_CHECK_NOT_IMPLEMENTED 197,6693
#define ER_CANT_DO_THIS_DURING_AN_TRANSACTION 198,6731
#define ER_ERROR_DURING_COMMIT 199,6782
#define ER_ERROR_DURING_ROLLBACK 200,6818
#define ER_ERROR_DURING_FLUSH_LOGS 201,6856
#define ER_ERROR_DURING_CHECKPOINT 202,6896
#define ER_NEW_ABORTING_CONNECTION 203,6936
#define ER_DUMP_NOT_IMPLEMENTED 204,6976
#define ER_FLUSH_MASTER_BINLOG_CLOSED 205,7016
#define ER_INDEX_REBUILD 206,7059
#define ER_MASTER 207,7090
#define ER_MASTER_NET_READ 208,7113
#define ER_MASTER_NET_WRITE 209,7145
#define ER_FT_MATCHING_KEY_NOT_FOUND 210,7178
#define ER_LOCK_OR_ACTIVE_TRANSACTION 211,7220
#define ER_UNKNOWN_SYSTEM_VARIABLE 212,7263
#define ER_CRASHED_ON_USAGE 213,7303
#define ER_CRASHED_ON_REPAIR 214,7336
#define ER_WARNING_NOT_COMPLETE_ROLLBACK 215,7370
#define ER_TRANS_CACHE_FULL 216,7416
#define ER_SLAVE_MUST_STOP 217,7449
#define ER_SLAVE_NOT_RUNNING 218,7481
#define ER_BAD_SLAVE 219,7515
#define ER_MASTER_INFO 220,7541
#define ER_SLAVE_THREAD 221,7569
#define ER_TOO_MANY_USER_CONNECTIONS 222,7598
#define ER_SET_CONSTANTS_ONLY 223,7640
#define ER_LOCK_WAIT_TIMEOUT 224,7675
#define ER_LOCK_TABLE_FULL 225,7709
#define ER_READ_ONLY_TRANSACTION 226,7741
#define ER_DROP_DB_WITH_READ_LOCK 227,7779
#define ER_CREATE_DB_WITH_READ_LOCK 228,7818
#define ER_WRONG_ARGUMENTS 229,7859
#define ER_NO_PERMISSION_TO_CREATE_USER 230,7891
#define ER_UNION_TABLES_IN_DIFFERENT_DIR 231,7936
#define ER_LOCK_DEADLOCK 232,7982
#define ER_TABLE_CANT_HANDLE_FULLTEXT 233,8012
#define ER_CANNOT_ADD_FOREIGN 234,8055
#define ER_NO_REFERENCED_ROW 235,8090
#define ER_ROW_IS_REFERENCED 236,8124
#define ER_CONNECT_TO_MASTER 237,8158
#define ER_QUERY_ON_MASTER 238,8192
#define ER_ERROR_WHEN_EXECUTING_COMMAND 239,8224
#define ER_WRONG_USAGE 240,8269
#define ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT 241,8297
#define ER_CANT_UPDATE_WITH_READLOCK 242,8347
#define ER_MIXING_NOT_ALLOWED 243,8389
#define ER_DUP_ARGUMENT 244,8424
#define ER_USER_LIMIT_REACHED 245,8453
#define ER_SPECIFIC_ACCESS_DENIED_ERROR 246,8488
#define ER_LOCAL_VARIABLE 247,8533
#define ER_GLOBAL_VARIABLE 248,8564
#define ER_NO_DEFAULT 249,8596
#define ER_WRONG_VALUE_FOR_VAR 250,8623
#define ER_WRONG_TYPE_FOR_VAR 251,8659
#define ER_VAR_CANT_BE_READ 252,8694
#define ER_CANT_USE_OPTION_HERE 253,8727
#define ER_NOT_SUPPORTED_YET	254,8764
#define ER_MASTER_FATAL_ERROR_READING_BINLOG 255,8798
#define ER_SLAVE_IGNORED_TABLE 256,8848
#define ER_INCORRECT_GLOBAL_LOCAL_VAR 257,8933
#define ER_ERROR_MESSAGES 258,8976

include/mysys_err.h,1350
#define _mysys_err_h18,766
#define GLOB	23,827
#define GLOBERRS	24,860
#define EE(25,924
#define EE_FILENOTFOUND	30,1105
#define EE_CANTCREATEFILE	31,1132
#define EE_READ	32,1160
#define EE_WRITE	33,1180
#define EE_BADCLOSE	34,1200
#define EE_OUTOFMEMORY	35,1223
#define EE_DELETE	36,1249
#define EE_LINK	37,1270
#define EE_EOFERR	38,1290
#define EE_CANTLOCK	39,1311
#define EE_CANTUNLOCK	40,1335
#define EE_DIR	41,1361
#define EE_STAT	42,1381
#define EE_CANT_CHSIZE	43,1402
#define EE_CANT_OPEN_STREAM	44,1429
#define EE_GETWD	45,1460
#define EE_SETWD	46,1481
#define EE_LINK_WARNING	47,1502
#define EE_OPEN_WARNING	48,1530
#define EE_DISK_FULL	49,1558
#define EE_CANT_MKDIR	50,1583
#define EE_UNKNOWN_CHARSET	51,1609
#define EE_OUT_OF_FILERESOURCES	52,1639
#define EE_CANT_READLINK	53,1674
#define EE_CANT_SYMLINK	54,1702
#define EE_REALPATH	55,1730
#define EE_SYNC	56,1754
#define EXIT_UNSPECIFIED_ERROR	60,1819
#define EXIT_UNKNOWN_OPTION	61,1853
#define EXIT_AMBIGUOUS_OPTION	62,1884
#define EXIT_NO_ARGUMENT_ALLOWED	63,1917
#define EXIT_ARGUMENT_REQUIRED	64,1952
#define EXIT_VAR_PREFIX_NOT_UNIQUE	65,1986
#define EXIT_UNKNOWN_VARIABLE	66,2023
#define EXIT_OUT_OF_MEMORY	67,2056
#define EXIT_UNKNOWN_SUFFIX	68,2086
#define EXIT_NO_PTR_TO_VARIABLE	69,2117
#define EXIT_CANNOT_CONNECT_TO_SERVICE	70,2153

include/nisam.h,908
#define _nisam_h21,856
#define N_MAXKEY	31,1000
#define N_MAXKEY_SEG	32,1044
#define N_MAX_KEY_LENGTH 33,1096
#define N_MAX_KEY_BUFF	34,1159
#define N_MAX_POSSIBLE_KEY_BUFF 35,1232
#define N_NAME_IEXT	37,1271
#define N_NAME_DEXT	38,1298
#define NI_POS_ERROR	39,1325
typedef struct st_n_isaminfo	44,1395
} N_ISAMINFO;67,2358
#define uint 74,2455
#define uint 79,2550
typedef struct st_n_save_keyseg	82,2610
} N_SAVE_KEYSEG;88,2834
typedef struct st_n_save_keydef 90,2852
} N_SAVE_KEYDEF;98,3253
typedef struct st_n_save_recinfo	100,3271
} N_SAVE_RECINFO;104,3405
#undef uint109,3458
#undef uint114,3512
typedef struct st_isam_info N_INFO;121,3598
typedef struct st_n_keyseg	124,3642
} N_KEYSEG;127,3712
typedef struct st_n_keydef	130,3726
} N_KEYDEF;140,4117
typedef struct st_decode_tree	143,4131
} DECODE_TREE;148,4252
typedef struct st_n_recinfo	153,4290
} N_RECINFO;163,4591

include/queues.h,275
#define _queues_h25,929
typedef struct st_queue 30,987
} QUEUE;38,1248
#define queue_top(40,1258
#define queue_element(41,1302
#define queue_end(42,1362
#define queue_replaced(43,1422
typedef int (*queue_compare)queue_compare44,1471
#define is_queue_inited(58,2078

include/raid.h,572
#define RAID_TYPE_0 18,819
#define RAID_TYPE_x 19,862
#define RAID_TYPE_y 20,911
#define RAID_DEFAULT_CHUNKS 22,934
#define RAID_DEFAULT_CHUNKSIZE 23,964
#define my_raid_type(26,1030
#undef USE_RAID31,1170
#define my_read(43,1424
#define my_write(44,1475
#define my_pwrite(45,1527
#define my_pread(46,1582
#define my_chsize(47,1636
#define my_close(48,1689
#define my_tell(49,1737
#define my_seek(50,1784
#define my_lock(51,1835
#define my_fstat(52,1890
class RaidName 95,3419
class RaidFd 107,3758
    inline void Calculate(RaidFd::Calculate140,5159

include/rijndael.h,81
#define AES_MAXKC	31,1173
#define AES_MAXKB	32,1200
#define AES_MAXNR	33,1226

include/sha1.h,222
enum sha_result_codes32,1176
  SHA_SUCCESS 34,1200
  SHA_NULL,35,1219
  SHA_INPUT_TOO_LONG,36,1261
  SHA_STATE_ERROR	37,1309
#define SHA1_HASH_SIZE 40,1363
typedef struct SHA1_CONTEXT47,1503
} SHA1_CONTEXT;55,1894

include/sslopt-case.h,48
      opt_use_ssl=27,1013
      break;28,1035

include/sslopt-longopts.h,908
  {"ssl", OPT_SSL_SSL,19,766
 (gptr*) &opt_use_ssl,opt_use_ssl21,887
 (gptr*) &opt_use_ssl, (gptr*) &opt_use_ssl,opt_use_ssl21,887
 (gptr*) &opt_use_ssl, (gptr*) &opt_use_ssl, 0, GET_BOOL,21,887
 (gptr*) &opt_use_ssl, (gptr*) &opt_use_ssl, 0, GET_BOOL, NO_ARG,21,887
  {"ssl-cert", OPT_SSL_CERT,26,1139
   (gptr*) &opt_ssl_cert,opt_ssl_cert27,1211
   (gptr*) &opt_ssl_cert, (gptr*) &opt_ssl_cert,opt_ssl_cert27,1211
   (gptr*) &opt_ssl_cert, (gptr*) &opt_ssl_cert, 0, GET_STR,27,1211
   (gptr*) &opt_ssl_cert, (gptr*) &opt_ssl_cert, 0, GET_STR, REQUIRED_ARG,27,1211
  {"ssl-capath", OPT_SSL_CAPATH,33,1490
   (gptr*) &opt_ssl_capath,opt_ssl_capath35,1578
   (gptr*) &opt_ssl_capath, (gptr*) &opt_ssl_capath,opt_ssl_capath35,1578
   (gptr*) &opt_ssl_capath, (gptr*) &opt_ssl_capath, 0, GET_STR,35,1578
   (gptr*) &opt_ssl_capath, (gptr*) &opt_ssl_capath, 0, GET_STR, REQUIRED_ARG,35,1578

include/sslopt-vars.h,272
static my_bool opt_use_ssl 18,765
static char *opt_ssl_key opt_ssl_key19,798
static char *opt_ssl_cert opt_ssl_cert20,831
static char *opt_ssl_ca opt_ssl_ca21,864
static char *opt_ssl_capath opt_ssl_capath22,897
static char *opt_ssl_cipher opt_ssl_cipher23,930

include/t_ctype.h,5060
#define _t_ctype_h31,1350
#define TOT_LEVELS 33,1370
#define LAST_LEVEL 34,1391
#define IGNORE 36,1435
enum l1_symbols 40,1484
    L1_08 41,1502
    L1_08 = TOT_LEVELS,41,1502
    L1_18,42,1526
    L1_28,43,1537
    L1_38,44,1548
    L1_48,45,1559
    L1_58,46,1570
    L1_68,47,1581
    L1_78,48,1592
    L1_88,49,1603
    L1_98,50,1614
    L1_A8,51,1625
    L1_B8,52,1636
    L1_C8,53,1647
    L1_D8,54,1658
    L1_E8,55,1669
    L1_F8,56,1680
    L1_G8,57,1691
    L1_H8,58,1702
    L1_I8,59,1713
    L1_J8,60,1724
    L1_K8,61,1735
    L1_L8,62,1746
    L1_M8,63,1757
    L1_N8,64,1768
    L1_O8,65,1779
    L1_P8,66,1790
    L1_Q8,67,1801
    L1_R8,68,1812
    L1_S8,69,1823
    L1_T8,70,1834
    L1_U8,71,1845
    L1_V8,72,1856
    L1_W8,73,1867
    L1_X8,74,1878
    L1_Y8,75,1889
    L1_Z8,76,1900
    L1_KO_KAI,77,1911
    L1_KHO_KHAI,78,1926
    L1_KHO_KHUAT,79,1943
    L1_KHO_KHWAI,80,1961
    L1_KHO_KHON,81,1979
    L1_KHO_RAKHANG,82,1996
    L1_NGO_NGU,83,2016
    L1_CHO_CHAN,84,2032
    L1_CHO_CHING,85,2049
    L1_CHO_CHANG,86,2067
    L1_SO_SO,87,2085
    L1_CHO_CHOE,88,2099
    L1_YO_YING,89,2116
    L1_DO_CHADA,90,2132
    L1_TO_PATAK,91,2149
    L1_THO_THAN,92,2166
    L1_THO_NANGMONTHO,93,2183
    L1_THO_PHUTHAO,94,2206
    L1_NO_NEN,95,2226
    L1_DO_DEK,96,2241
    L1_TO_TAO,97,2256
    L1_THO_THUNG,98,2271
    L1_THO_THAHAN,99,2289
    L1_THO_THONG,100,2308
    L1_NO_NU,101,2326
    L1_BO_BAIMAI,102,2340
    L1_PO_PLA,103,2358
    L1_PHO_PHUNG,104,2373
    L1_FO_FA,105,2391
    L1_PHO_PHAN,106,2405
    L1_FO_FAN,107,2422
    L1_PHO_SAMPHAO,108,2437
    L1_MO_MA,109,2457
    L1_YO_YAK,110,2471
    L1_RO_RUA,111,2486
    L1_RU,112,2501
    L1_LO_LING,113,2512
    L1_LU,114,2528
    L1_WO_WAEN,115,2539
    L1_SO_SALA,116,2555
    L1_SO_RUSI,117,2571
    L1_SO_SUA,118,2587
    L1_HO_HIP,119,2602
    L1_LO_CHULA,120,2617
    L1_O_ANG,121,2634
    L1_HO_NOKHUK,122,2648
    L1_NKHIT,123,2666
    L1_SARA_A,124,2680
    L1_MAI_HAN_AKAT,125,2695
    L1_SARA_AA,126,2716
    L1_SARA_AM,127,2732
    L1_SARA_I,128,2748
    L1_SARA_II,129,2763
    L1_SARA_UE,130,2779
    L1_SARA_UEE,131,2795
    L1_SARA_U,132,2812
    L1_SARA_UU,133,2827
    L1_SARA_E,134,2843
    L1_SARA_AE,135,2858
    L1_SARA_O,136,2874
    L1_SARA_AI_MAIMUAN,137,2889
    L1_SARA_AI_MAIMALAI138,2913
enum l2_symbols 142,2971
    L2_BLANK 143,2989
    L2_BLANK = TOT_LEVELS,143,2989
    L2_THAII,144,3016
    L2_YAMAK,145,3030
    L2_PINTHU,146,3044
    L2_GARAN,147,3059
    L2_TYKHU,148,3073
    L2_TONE1,149,3087
    L2_TONE2,150,3101
    L2_TONE3,151,3115
    L2_TONE4152,3129
enum l3_symbols 156,3176
	L3_BLANK 157,3194
	L3_BLANK = TOT_LEVELS,157,3194
    L3_SPACE,158,3218
    L3_NB_SACE,159,3232
    L3_LOW_LINE,160,3248
    L3_HYPHEN,161,3265
    L3_COMMA,162,3280
    L3_SEMICOLON,163,3294
    L3_COLON,164,3312
    L3_EXCLAMATION,165,3326
    L3_QUESTION,166,3346
    L3_SOLIDUS,167,3363
    L3_FULL_STOP,168,3379
    L3_PAIYAN_NOI,169,3397
    L3_MAI_YAMOK,170,3416
    L3_GRAVE,171,3434
    L3_CIRCUMFLEX,172,3448
    L3_TILDE,173,3467
    L3_APOSTROPHE,174,3481
    L3_QUOTATION,175,3500
    L3_L_PARANTHESIS,176,3518
    L3_L_BRACKET,177,3540
    L3_L_BRACE,178,3558
    L3_R_BRACE,179,3574
    L3_R_BRACKET,180,3590
    L3_R_PARENTHESIS,181,3608
    L3_AT,182,3630
    L3_BAHT,183,3641
    L3_DOLLAR,184,3654
    L3_FONGMAN,185,3669
    L3_ANGKHANKHU,186,3685
    L3_KHOMUT,187,3704
    L3_ASTERISK,188,3719
    L3_BK_SOLIDUS,189,3736
    L3_AMPERSAND,190,3755
    L3_NUMBER,191,3773
    L3_PERCENT,192,3788
    L3_PLUS,193,3804
    L3_LESS_THAN,194,3817
    L3_EQUAL,195,3835
    L3_GREATER_THAN,196,3849
    L3_V_LINE197,3870
enum l4_symbols 201,3918
    L4_BLANK 202,3936
    L4_BLANK = TOT_LEVELS,202,3936
    L4_MIN,203,3963
    L4_CAP,204,3975
    L4_EXT205,3987
enum level_symbols 208,4002
    L_UPRUPR 209,4023
    L_UPRUPR = TOT_LEVELS,209,4023
    L_UPPER,210,4050
    L_MIDDLE,211,4063
    L_LOWER212,4077
#define	_is(215,4093
#define _level	216,4137
#define _consnt	217,4156
#define _ldvowel	218,4177
#define _fllwvowel	219,4198
#define _uprvowel	220,4221
#define _lwrvowel	221,4244
#define _tone	222,4267
#define _diacrt1	223,4287
#define _diacrt2	224,4310
#define _combine	225,4333
#define _stone	226,4356
#define _tdig	227,4378
#define _rearvowel	228,4400
#define _diacrt	229,4457
#define levelof(230,4497
#define isthai(231,4537
#define istalpha(232,4571
#define isconsnt(234,4686
#define isldvowel(235,4728
#define isfllwvowel(236,4771
#define ismidvowel(237,4818
#define isuprvowel(238,4875
#define islwrvowel(239,4920
#define isuprlwrvowel(240,4965
#define isrearvowel(241,5026
#define isvowel(242,5073
#define istone(243,5132
#define isunldable(244,5175
#define iscombinable(245,5249
#define istdigit(246,5295
#define isstone(247,5338
#define isdiacrt1(248,5382
#define isdiacrt2(249,5424
#define isdiacrt(250,5466

include/thr_alarm.h,1117
#define _thr_alarm_h20,823
#define USE_ONE_SIGNAL_HAND	26,909
#define THR_CLIENT_ALARM 29,1004
#define THR_CLIENT_ALARM 31,1043
#undef USE_ONE_SIGNAL_HAND34,1107
#define USE_ALARM_THREAD35,1134
#define THR_SERVER_ALARM 36,1159
#define THR_SERVER_ALARM 38,1198
typedef struct st_alarm_info41,1239
} ALARM_INFO;46,1341
#define USE_ALARM_THREAD52,1449
#undef USE_ONE_SIGNAL_HAND53,1474
typedef my_bool thr_alarm_t;55,1502
typedef my_bool ALARM;56,1531
#define thr_alarm_init(58,1555
#define thr_alarm_in_use(59,1590
#define thr_end_alarm(60,1630
#define thr_alarm(61,1655
#define thr_got_alarm(63,1736
#define init_thr_alarm(64,1763
#define thr_alarm_kill(65,1789
#define resize_thr_alarm(66,1815
#define end_thr_alarm(67,1843
typedef struct st_thr_alarm_entry71,1895
} thr_alarm_entry;74,1952
typedef struct st_thr_alarm_entry78,2012
} thr_alarm_entry;82,2076
typedef int thr_alarm_entry;86,2135
#define thr_got_alarm(88,2165
typedef thr_alarm_entry* thr_alarm_t;92,2237
typedef struct st_alarm 94,2276
} ALARM;99,2419
#define thr_alarm_init(101,2429
#define thr_alarm_in_use(102,2464

include/thr_lock.h,664
#define _thr_lock_h20,796
enum thr_lock_type 31,967
enum thr_lock_type { TL_IGNORE=31,967
		     TL_UNLOCK,32,1002
		     TL_READ,33,1044
		     TL_READ_WITH_SHARED_LOCKS,34,1078
		     TL_READ_HIGH_PRIORITY,36,1176
		     TL_READ_NO_INSERT,38,1255
		     TL_WRITE_ALLOW_WRITE,44,1447
		     TL_WRITE_ALLOW_READ,50,1644
		     TL_WRITE_CONCURRENT_INSERT,55,1810
		     TL_WRITE_DELAYED,57,1907
		     TL_WRITE_LOW_PRIORITY,59,1993
		     TL_WRITE,61,2054
		     TL_WRITE_ONLY}TL_WRITE_ONLY63,2121
typedef struct st_thr_lock_data 69,2276
} THR_LOCK_DATA;77,2524
struct st_lock_list 79,2542
typedef struct st_thr_lock 83,2598
} THR_LOCK;97,3112

include/violite.h,1041
#define	vio_violite_h_23,852
enum enum_vio_type 34,1075
enum enum_vio_type { VIO_CLOSED,34,1075
enum enum_vio_type { VIO_CLOSED, VIO_TYPE_TCPIP,34,1075
enum enum_vio_type { VIO_CLOSED, VIO_TYPE_TCPIP, VIO_TYPE_SOCKET,34,1075
		     VIO_TYPE_NAMEDPIPE,35,1141
		     VIO_TYPE_NAMEDPIPE, VIO_TYPE_SSL}VIO_TYPE_SSL35,1141
#define HANDLE 38,1200
#define HEADER_DES_LOCL_H 81,2659
struct st_VioSSLAcceptorFd 85,2752
struct st_VioSSLConnectorFd93,2912
#define vio_delete(119,3695
#define vio_errno(120,3744
#define vio_read(121,3792
#define vio_write(122,3853
#define vio_blocking(123,3918
#define vio_is_blocking(125,4029
#define vio_fastsend(126,4085
#define vio_keepalive(127,4134
#define vio_should_retry(128,4218
#define vio_close(129,4276
#define vio_peer_addr(130,4325
#define vio_in_addr(131,4395
#define vio_timeout(132,4450
enum SSL_type136,4640
  SSL_TYPE_NOT_SPECIFIED=138,4656
  SSL_TYPE_NONE,139,4686
  SSL_TYPE_ANY,140,4703
  SSL_TYPE_X509,141,4719
  SSL_TYPE_SPECIFIED142,4736
struct st_vio147,4845

innobase/ib_config.h,728
#define HAVE_AIO_H 5,168
#define HAVE_DLFCN_H 8,247
#define HAVE_FDATASYNC 11,327
#define HAVE_INTTYPES_H 14,413
#define HAVE_MEMORY_H 17,498
#define HAVE_SCHED_H 20,580
#define HAVE_SCHED_YIELD 23,662
#define HAVE_STDINT_H 26,748
#define HAVE_STDLIB_H 29,831
#define HAVE_STRINGS_H 32,915
#define HAVE_STRING_H 35,999
#define HAVE_SYS_STAT_H 38,1084
#define HAVE_SYS_TYPES_H 41,1172
#define HAVE_UNISTD_H 44,1258
#define PACKAGE 47,1305
#define PACKAGE_BUGREPORT 50,1406
#define PACKAGE_NAME 53,1483
#define PACKAGE_STRING 56,1567
#define PACKAGE_TARNAME 59,1653
#define PACKAGE_VERSION 62,1726
#define SIZEOF_INT 65,1804
#define SIZEOF_LONG 68,1877
#define STDC_HEADERS 71,1955
#define VERSION 74,2011

isam/isamdef.h,2252
#define ISAM_LIBRARY19,831
#undef my_write	29,1019
#undef HA_SORT_ALLOWS_SAME31,1077
#define HA_SORT_ALLOWS_SAME 32,1104
#define uint 36,1203
#define uint 40,1297
#define uint 44,1427
typedef struct st_state_info47,1455
} N_STATE_INFO;75,2476
typedef struct st_base_info78,2494
} N_BASE_INFO;103,3583
#undef uint108,3633
#undef uint112,3686
#undef uint116,3773
typedef struct st_n_blob	121,3833
} N_BLOB;126,4029
typedef struct st_isam_pack 129,4041
} N_PACK;132,4113
typedef struct st_isam_share 135,4125
} ISAM_SHARE;171,5681
typedef uint bit_type;174,5697
typedef struct st_bit_buff 176,5721
} BIT_BUFF;181,5855
typedef struct st_isam_info 184,5869
} N_INFO;228,7660
#define USE_HOLE_KEY	233,7716
#define F_EXTRA_LCK	234,7778
#define MEMMAP_USED	237,7826
#define REMEMBER_OLD_POS 238,7849
#define getint(240,7878
#define putint(241,7938
#define test_if_nod(243,8047
#define test_if_nod(245,8123
#define N_MIN_BLOCK_LENGTH	248,8201
#define N_EXTEND_BLOCK_LENGTH	249,8259
#define N_SPLITT_LENGTH 250,8331
#define MAX_DYN_BLOCK_HEADER	251,8386
#define DYN_DELETE_BLOCK_HEADER 252,8451
#define MEMMAP_EXTRA_MARGIN	253,8521
#define INDEX_BLOCK_MARGIN	254,8589
#define PACK_TYPE_SELECTED	256,8656
#define PACK_TYPE_SPACE_FIELDS	257,8716
#define PACK_TYPE_ZERO_FILL	258,8749
typedef struct st_s_param273,9126
} S_PARAM;281,9285
typedef struct st_sortinfo 362,14240
} SORT_PARAM;369,14470
#define BLOCK_INFO_HEADER_LENGTH 374,14574
typedef struct st_block_info 376,14611
} BLOCK_INFO;384,14868
#define BLOCK_FIRST	388,14933
#define BLOCK_LAST	389,14955
#define BLOCK_DELETED	390,14976
#define BLOCK_ERROR	391,15000
#define BLOCK_SYNC_ERROR 392,15039
#define BLOCK_FATAL_ERROR 393,15099
enum nisam_log_commands 395,15150
  LOG_OPEN,396,15176
  LOG_OPEN,LOG_WRITE,396,15176
  LOG_OPEN,LOG_WRITE,LOG_UPDATE,396,15176
  LOG_OPEN,LOG_WRITE,LOG_UPDATE,LOG_DELETE,396,15176
  LOG_OPEN,LOG_WRITE,LOG_UPDATE,LOG_DELETE,LOG_CLOSE,396,15176
  LOG_OPEN,LOG_WRITE,LOG_UPDATE,LOG_DELETE,LOG_CLOSE,LOG_EXTRA,396,15176
  LOG_OPEN,LOG_WRITE,LOG_UPDATE,LOG_DELETE,LOG_CLOSE,LOG_EXTRA,LOG_LOCK396,15176
#define nisam_log_simple(399,15252
#define nisam_log_command(400,15331
#define nisam_log_record(401,15423

myisam/ft_eval.h,642
const char **stopwordlist=stopwordlist19,846
#define MAX_REC_LENGTH 21,899
#define MAX_BLOB_LENGTH 22,926
char record[record23,956
char record[MAX_REC_LENGTH], read_record[read_record23,956
char blob_record[blob_record24,1030
char *filename=filename26,1072
int silent=28,1105
uint key_length=30,1129
char *d_file,d_file31,1178
char *d_file, *q_file;q_file31,1178
FILE *df,df32,1201
FILE *df,*qf;qf32,1201
MI_COLUMNDEF recinfo[recinfo34,1216
MI_KEYDEF keyinfo[keyinfo35,1241
MI_KEYSEG keyseg[keyseg36,1263
#define SWL_INIT 38,1286
#define SWL_PLUS 39,1307
#define MAX_LINE_LENGTH 41,1328
char line[line42,1356

myisam/ft_test1.h,157
#define NUPD 19,864
#define NDATAS 20,891
struct { const char *f0, *f2; } data[data21,919
#define NQUERIES 414,18563
const char *query[query415,18582

myisam/ftdefs.h,1348
#define HYPHEN_IS_DELIM25,975
#define HYPHEN_IS_CONCAT 26,999
#define COMPILE_STOPWORDS_IN28,1052
#define LWS_FOR_QUERY	42,1583
#define LWS_IN_USE	43,1618
#define PRENORM_IN_USE	44,1650
#define NORM_IN_USE	45,1693
#define GWS_IN_USE	46,1733
#define LWS_TF	48,1832
#define LWS_BINARY	49,1862
#define LWS_SQUARE	50,1895
#define LWS_LOG	51,1935
#define PRENORM_NONE	53,2057
#define PRENORM_MAX	54,2099
#define PRENORM_AUG	55,2147
#define PRENORM_AVG	56,2202
#define PRENORM_AVGLOG 57,2264
#define NORM_NONE	59,2409
#define NORM_SUM	60,2441
#define NORM_COS	61,2479
#define PIVOT_VAL 73,2794
#define NORM_PIVOT 74,2821
#define GWS_NORM	76,2936
#define GWS_GFIDF	77,2976
#define GWS_IDF	79,3080
#define GWS_IDF1	80,3139
#define GWS_PROB 81,3206
#define GWS_FREQ	82,3329
#define GWS_SQUARED 83,3364
#define GWS_CUBIC 84,3438
#define GWS_ENTROPY 85,3512
#define FTB_YES 89,3689
#define FTB_EGAL 90,3730
#define FTB_NO 91,3771
#define FTB_INC 92,3812
#define FTB_DEC 93,3853
#define FTB_LBR 94,3894
#define FTB_RBR 95,3935
#define FTB_NEG 96,3976
#define FTB_TRUNC 97,4017
#define FTB_LQUOT 98,4058
#define FTB_RQUOT 99,4100
typedef struct st_ft_word 101,4143
} FT_WORD;108,4266
typedef struct st_ftb_param 110,4278
} FTB_PARAM;117,4396
typedef struct _st_ft_seg_iterator 126,4630
} FT_SEG_ITERATOR;130,4735

myisam/fulltext.h,131
#undef EVAL_RUN25,1006
#define HA_FT_WTYPE 27,1023
#define HA_FT_WLEN 28,1061
#define FT_SEGS 30,1100
#define FT_SEGS 32,1144

myisam/myisamdef.h,4719
#undef my_write	30,1115
typedef struct st_mi_status_info33,1199
} MI_STATUS_INFO;41,1472
typedef struct st_mi_state_info43,1491
} MI_STATE_INFO;91,3378
#define MI_STATE_INFO_SIZE	93,3396
#define MI_STATE_KEY_SIZE 94,3443
#define MI_STATE_KEYBLOCK_SIZE 95,3472
#define MI_STATE_KEYSEG_SIZE	96,3506
#define MI_STATE_EXTRA_SIZE 97,3537
#define MI_KEYDEF_SIZE	98,3669
#define MI_UNIQUEDEF_SIZE	99,3702
#define MI_KEYSEG_SIZE	100,3736
#define MI_COLUMNDEF_SIZE	101,3775
#define MI_BASE_INFO_SIZE	102,3809
#define MI_INDEX_BLOCK_MARGIN	103,3862
typedef struct st_mi_base_info105,3932
} MI_BASE_INFO;136,5150
typedef struct st_mi_blob	141,5208
} MI_BLOB;146,5407
typedef struct st_mi_isam_pack 149,5420
} MI_PACK;152,5495
typedef struct st_mi_isam_share 155,5508
} MYISAM_SHARE;208,7840
typedef uint mi_bit_type;211,7858
typedef struct st_mi_bit_buff 213,7885
} MI_BIT_BUFF;218,8045
struct st_myisam_info 220,8061
#define USE_WHOLE_KEY	281,10599
#define F_EXTRA_LCK	282,10675
#define MEMMAP_USED	285,10723
#define REMEMBER_OLD_POS 286,10746
#define WRITEINFO_UPDATE_KEYFILE	288,10775
#define WRITEINFO_NO_UNLOCK	289,10810
#define STATE_CHANGED	293,10872
#define STATE_CRASHED	294,10897
#define STATE_CRASHED_ON_REPAIR 295,10922
#define STATE_NOT_ANALYZED	296,10956
#define STATE_NOT_OPTIMIZED_KEYS 297,10985
#define STATE_NOT_SORTED_PAGES	298,11021
#define READING_NEXT	302,11089
#define READING_HEADER	303,11112
#define mi_getint(305,11138
#define mi_putint(306,11192
#define mi_test_if_nod(308,11304
#define mi_mark_crashed(309,11377
#define mi_mark_crashed_on_repair(310,11441
#define mi_is_crashed(311,11577
#define mi_is_crashed_on_repair(312,11642
#define store_key_length_inc(316,11804
#define store_key_length(323,11972
#define get_key_length(330,12124
#define get_key_full_length(337,12293
#define get_key_pack_length(344,12473
#define get_pack_length(351,12690
#define MI_MIN_BLOCK_LENGTH	353,12749
#define MI_EXTEND_BLOCK_LENGTH	354,12809
#define MI_SPLIT_LENGTH	355,12882
#define MI_MAX_DYN_BLOCK_HEADER	356,12937
#define MI_BLOCK_INFO_HEADER_LENGTH 357,13005
#define MI_DYN_DELETE_BLOCK_HEADER 358,13044
#define MI_DYN_MAX_BLOCK_LENGTH	359,13118
#define MI_DYN_MAX_ROW_LENGTH	360,13166
#define MI_DYN_ALIGN_SIZE	361,13240
#define MI_MAX_DYN_HEADER_BYTE	362,13295
#define MI_MAX_BLOCK_LENGTH	363,13368
#define MI_REC_BUFF_OFFSET 364,13456
#define MEMMAP_EXTRA_MARGIN	366,13543
#define PACK_TYPE_SELECTED	368,13612
#define PACK_TYPE_SPACE_FIELDS	369,13672
#define PACK_TYPE_ZERO_FILL	370,13705
#define MI_FOUND_WRONG_KEY 371,13735
#define MI_MAX_KEY_BLOCK_SIZE	373,13809
#define MI_BLOCK_SIZE(374,13889
#define MI_MAX_KEYPTR_SIZE	375,14046
#define MI_MIN_KEYBLOCK_LENGTH	376,14118
#define MI_MIN_SIZE_BULK_INSERT_TREE 378,14195
#define MI_MIN_ROWS_TO_USE_BULK_INSERT 379,14272
#define MI_UNIQUE_HASH_TYPE	383,14371
#define mi_unique_store(384,14420
#define rw_wrlock(390,14587
#define rw_rdlock(391,14611
#define rw_unlock(392,14635
typedef struct st_mi_s_param406,15018
} MI_KEY_PARAM;415,15222
#define mi_get_rec_buff_ptr(533,21533
#define mi_get_rec_buff_len(536,21715
typedef struct st_mi_block_info 560,22812
} MI_BLOCK_INFO;571,23106
#define BLOCK_FIRST	575,23171
#define BLOCK_LAST	576,23193
#define BLOCK_DELETED	577,23214
#define BLOCK_ERROR	578,23238
#define BLOCK_SYNC_ERROR 579,23277
#define BLOCK_FATAL_ERROR 580,23337
#define NEED_MEM	582,23388
#define MAXERR	583,23460
#define BUFFERS_WHEN_SORTING	584,23480
#define WRITE_COUNT	585,23543
#define INDEX_TMP_EXT	586,23586
#define DATA_TMP_EXT	587,23616
#define UPDATE_TIME	589,23646
#define UPDATE_STAT	590,23669
#define UPDATE_SORT	591,23692
#define UPDATE_AUTO_INC	592,23715
#define UPDATE_OPEN_COUNT	593,23742
#define USE_BUFFER_INIT	595,23772
#define READ_BUFFER_INIT	596,23846
#define SORT_BUFFER_INIT	597,23900
#define MIN_SORT_BUFFER	598,23955
enum myisam_log_commands 600,24004
  MI_LOG_OPEN,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,MI_LOG_UPDATE,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,MI_LOG_UPDATE,MI_LOG_DELETE,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,MI_LOG_UPDATE,MI_LOG_DELETE,MI_LOG_CLOSE,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,MI_LOG_UPDATE,MI_LOG_DELETE,MI_LOG_CLOSE,MI_LOG_EXTRA,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,MI_LOG_UPDATE,MI_LOG_DELETE,MI_LOG_CLOSE,MI_LOG_EXTRA,MI_LOG_LOCK,601,24031
  MI_LOG_OPEN,MI_LOG_WRITE,MI_LOG_UPDATE,MI_LOG_DELETE,MI_LOG_CLOSE,MI_LOG_EXTRA,MI_LOG_LOCK,MI_LOG_DELETE_ALL601,24031
#define myisam_log(604,24146
#define myisam_log_command(605,24221
#define myisam_log_record(606,24316
#define fast_mi_writeinfo(608,24410
#define fast_mi_readinfo(609,24500

mysys/my_os2dirsrch.h,186
#define __MY_OS2DIRSRCH2_H__24,1036
struct _finddata_t30,1109
struct dirent47,1429
struct DIR63,1745
#define _A_NORMAL	75,1919
#define _A_SUBDIR	76,1949
#define _A_RDONLY	77,1982

mysys/my_static.h,170
#define MAX_SIGNALS	25,891
#define MIN_KEYBLOCK	26,952
#define MAX_KEYBLOCK	27,993
#define MAX_BLOCK_TYPES 28,1058
struct st_remember 30,1109
struct st_irem43,1483

pstack/bucomm.h,143
#define _BUCOMM_H21,858
# undef alloca37,1060
# define alloca 38,1075
#define boolean 54,1421
#define true 55,1449
#define false 56,1467

pstack/budbg.h,93
#define BUDBG_H23,954
#define boolean 28,1014
#define true 29,1042
#define false 30,1060

pstack/debug.h,1856
#define DEBUG_H23,936
enum debug_type_kind33,1293
  DEBUG_KIND_ILLEGAL,36,1335
  DEBUG_KIND_INDIRECT,38,1390
  DEBUG_KIND_VOID,40,1428
  DEBUG_KIND_INT,42,1465
  DEBUG_KIND_FLOAT,44,1508
  DEBUG_KIND_COMPLEX,46,1546
  DEBUG_KIND_BOOL,48,1586
  DEBUG_KIND_STRUCT,50,1622
  DEBUG_KIND_UNION,52,1659
  DEBUG_KIND_CLASS,54,1695
  DEBUG_KIND_UNION_CLASS,56,1763
  DEBUG_KIND_ENUM,58,1816
  DEBUG_KIND_POINTER,60,1853
  DEBUG_KIND_FUNCTION,62,1894
  DEBUG_KIND_REFERENCE,64,1937
  DEBUG_KIND_RANGE,66,1977
  DEBUG_KIND_ARRAY,68,2013
  DEBUG_KIND_SET,70,2047
  DEBUG_KIND_OFFSET,72,2089
  DEBUG_KIND_METHOD,74,2127
  DEBUG_KIND_CONST,76,2179
  DEBUG_KIND_VOLATILE,78,2233
  DEBUG_KIND_NAMED,80,2277
  DEBUG_KIND_TAGGED82,2319
enum debug_var_kind87,2381
  DEBUG_VAR_ILLEGAL,90,2422
  DEBUG_GLOBAL,92,2471
  DEBUG_STATIC,94,2515
  DEBUG_LOCAL_STATIC,96,2565
  DEBUG_LOCAL,98,2614
  DEBUG_REGISTER100,2659
enum debug_parm_kind105,2728
  DEBUG_PARM_ILLEGAL,108,2770
  DEBUG_PARM_STACK,110,2826
  DEBUG_PARM_REG,112,2877
  DEBUG_PARM_REFERENCE,114,2939
  DEBUG_PARM_REF_REG116,3004
enum debug_visibility121,3068
  DEBUG_VISIBILITY_PUBLIC,124,3147
  DEBUG_VISIBILITY_PROTECTED,126,3202
  DEBUG_VISIBILITY_PRIVATE,128,3258
  DEBUG_VISIBILITY_IGNORE130,3328
typedef struct debug_type *debug_type;debug_type135,3374
#define DEBUG_TYPE_NULL 137,3414
typedef struct debug_field *debug_field;debug_field141,3497
#define DEBUG_FIELD_NULL 143,3539
typedef struct debug_baseclass *debug_baseclass;debug_baseclass147,3622
#define DEBUG_BASECLASS_NULL 149,3672
typedef struct debug_method *debug_method;debug_method153,3758
#define DEBUG_METHOD_NULL 155,3802
typedef struct debug_method_variant *debug_method_variant;debug_method_variant160,3948
#define DEBUG_METHOD_VARIANT_NULL 162,4008
struct debug_write_fns168,4231

pstack/demangle.h,986
#define DEMANGLE_H21,829
#define PARAMS(25,886
#define DMGL_NO_OPTS	32,1043
#define DMGL_PARAMS	33,1092
#define DMGL_ANSI	34,1149
#define DMGL_JAVA	35,1211
#define DMGL_AUTO	37,1279
#define DMGL_GNU	38,1306
#define DMGL_LUCID	39,1332
#define DMGL_ARM	40,1361
#define DMGL_STYLE_MASK 42,1467
extern enum demangling_styles52,1902
  unknown_demangling 54,1934
  auto_demangling 55,1960
  auto_demangling = DMGL_AUTO,55,1960
  gnu_demangling 56,1991
  gnu_demangling = DMGL_GNU,56,1991
  lucid_demangling 57,2020
  lucid_demangling = DMGL_LUCID,57,2020
  arm_demangling 58,2053
  arm_demangling = DMGL_ARM58,2053
#define AUTO_DEMANGLING_STYLE_STRING	63,2172
#define GNU_DEMANGLING_STYLE_STRING	64,2216
#define LUCID_DEMANGLING_STYLE_STRING	65,2258
#define ARM_DEMANGLING_STYLE_STRING	66,2304
#define CURRENT_DEMANGLING_STYLE 70,2407
#define AUTO_DEMANGLING 71,2465
#define GNU_DEMANGLING 72,2536
#define LUCID_DEMANGLING 73,2605
#define ARM_DEMANGLING 74,2678

pstack/ieee.h,7221
#define N_W_VARIABLES 4,115
#define Module_Beginning 5,139
typedef struct ieee_module 7,170
} ieee_module_begin_type;10,239
#define Address_Descriptor 12,266
typedef struct ieee_address 13,298
#define IEEE_LITTLE 18,421
#define IEEE_BIG 19,446
} ieee_address_descriptor_type;20,468
typedef union ieee_w_variable 22,501
} ieee_w_variable_type;34,818
typedef enum ieee_record40,847
  ieee_number_start_enum 42,874
  ieee_number_start_enum = 0x00,x0042,874
  ieee_number_end_enum=43,907
  ieee_number_end_enum=0x7f,x7f43,907
  ieee_number_repeat_start_enum 44,936
  ieee_number_repeat_start_enum = 0x80,x8044,936
  ieee_number_repeat_end_enum 45,976
  ieee_number_repeat_end_enum = 0x88,x8845,976
  ieee_number_repeat_4_enum 46,1014
  ieee_number_repeat_4_enum = 0x84,x8446,1014
  ieee_number_repeat_3_enum 47,1050
  ieee_number_repeat_3_enum = 0x83,x8347,1050
  ieee_number_repeat_2_enum 48,1086
  ieee_number_repeat_2_enum = 0x82,x8248,1086
  ieee_number_repeat_1_enum 49,1122
  ieee_number_repeat_1_enum = 0x81,x8149,1122
  ieee_module_beginning_enum 50,1158
  ieee_module_beginning_enum = 0xe0,xe050,1158
  ieee_module_end_enum 51,1195
  ieee_module_end_enum = 0xe1,xe151,1195
  ieee_extension_length_1_enum 52,1226
  ieee_extension_length_1_enum = 0xde,xde52,1226
  ieee_extension_length_2_enum 53,1265
  ieee_extension_length_2_enum = 0xdf,xdf53,1265
  ieee_section_type_enum 54,1304
  ieee_section_type_enum = 0xe6,xe654,1304
  ieee_section_alignment_enum 55,1337
  ieee_section_alignment_enum = 0xe7,xe755,1337
  ieee_external_symbol_enum 56,1375
  ieee_external_symbol_enum = 0xe8,xe856,1375
  ieee_comma 57,1411
  ieee_comma = 0x90,x9057,1411
  ieee_external_reference_enum 58,1432
  ieee_external_reference_enum = 0xe9,xe958,1432
  ieee_set_current_section_enum 59,1471
  ieee_set_current_section_enum = 0xe5,xe559,1471
  ieee_address_descriptor_enum 60,1511
  ieee_address_descriptor_enum = 0xec,xec60,1511
  ieee_load_constant_bytes_enum 61,1550
  ieee_load_constant_bytes_enum = 0xed,xed61,1550
  ieee_load_with_relocation_enum 62,1590
  ieee_load_with_relocation_enum = 0xe4,xe462,1590
  ieee_variable_A_enum 64,1632
  ieee_variable_A_enum = 0xc1,xc164,1632
  ieee_variable_B_enum 65,1681
  ieee_variable_B_enum = 0xc2,xc265,1681
  ieee_variable_C_enum 66,1730
  ieee_variable_C_enum = 0xc3,xc366,1730
  ieee_variable_D_enum 67,1779
  ieee_variable_D_enum = 0xc4,xc467,1779
  ieee_variable_E_enum 68,1828
  ieee_variable_E_enum = 0xc5,xc568,1828
  ieee_variable_F_enum 69,1877
  ieee_variable_F_enum = 0xc6,xc669,1877
  ieee_variable_G_enum 70,1926
  ieee_variable_G_enum = 0xc7,xc770,1926
  ieee_variable_H_enum 71,1975
  ieee_variable_H_enum = 0xc8,xc871,1975
  ieee_variable_I_enum 72,2024
  ieee_variable_I_enum = 0xc9,xc972,2024
  ieee_variable_J_enum 73,2073
  ieee_variable_J_enum = 0xca,xca73,2073
  ieee_variable_K_enum 74,2122
  ieee_variable_K_enum = 0xcb,xcb74,2122
  ieee_variable_L_enum 75,2171
  ieee_variable_L_enum = 0xcc,xcc75,2171
  ieee_variable_M_enum 76,2220
  ieee_variable_M_enum = 0xcd,xcd76,2220
  ieee_variable_N_enum 77,2269
  ieee_variable_N_enum = 0xce,xce77,2269
  ieee_variable_O_enum 78,2318
  ieee_variable_O_enum = 0xcf,xcf78,2318
  ieee_variable_P_enum 79,2367
  ieee_variable_P_enum = 0xd0,xd079,2367
  ieee_variable_Q_enum 80,2416
  ieee_variable_Q_enum = 0xd1,xd180,2416
  ieee_variable_R_enum 81,2465
  ieee_variable_R_enum = 0xd2,xd281,2465
  ieee_variable_S_enum 82,2514
  ieee_variable_S_enum = 0xd3,xd382,2514
  ieee_variable_T_enum 83,2563
  ieee_variable_T_enum = 0xd4,xd483,2563
  ieee_variable_U_enum 84,2612
  ieee_variable_U_enum = 0xd5,xd584,2612
  ieee_variable_V_enum 85,2661
  ieee_variable_V_enum = 0xd6,xd685,2661
  ieee_variable_W_enum 86,2710
  ieee_variable_W_enum = 0xd7,xd786,2710
  ieee_variable_X_enum 87,2759
  ieee_variable_X_enum = 0xd8,xd887,2759
  ieee_variable_Y_enum 88,2808
  ieee_variable_Y_enum = 0xd9,xd988,2808
  ieee_variable_Z_enum 89,2857
  ieee_variable_Z_enum = 0xda,xda89,2857
  ieee_function_plus_enum 90,2888
  ieee_function_plus_enum = 0xa5,xa590,2888
  ieee_function_minus_enum 91,2922
  ieee_function_minus_enum = 0xa6,xa691,2922
  ieee_function_signed_open_b_enum 92,2957
  ieee_function_signed_open_b_enum = 0xba,xba92,2957
  ieee_function_signed_close_b_enum 93,3000
  ieee_function_signed_close_b_enum = 0xbb,xbb93,3000
  ieee_function_unsigned_open_b_enum 95,3045
  ieee_function_unsigned_open_b_enum = 0xbc,xbc95,3045
  ieee_function_unsigned_close_b_enum 96,3090
  ieee_function_unsigned_close_b_enum = 0xbd,xbd96,3090
  ieee_function_either_open_b_enum 98,3137
  ieee_function_either_open_b_enum = 0xbe,xbe98,3137
  ieee_function_either_close_b_enum 99,3180
  ieee_function_either_close_b_enum = 0xbf,xbf99,3180
  ieee_record_seperator_enum 100,3224
  ieee_record_seperator_enum = 0xdb,xdb100,3224
  ieee_e2_first_byte_enum 102,3262
  ieee_e2_first_byte_enum = 0xe2,xe2102,3262
  ieee_section_size_enum 103,3296
  ieee_section_size_enum = 0xe2d3,xe2d3103,3296
  ieee_physical_region_size_enum 104,3331
  ieee_physical_region_size_enum = 0xe2c1,xe2c1104,3331
  ieee_region_base_address_enum 105,3374
  ieee_region_base_address_enum = 0xe2c2,xe2c2105,3374
  ieee_mau_size_enum 106,3416
  ieee_mau_size_enum = 0xe2c6,xe2c6106,3416
  ieee_m_value_enum 107,3447
  ieee_m_value_enum = 0xe2cd,xe2cd107,3447
  ieee_section_base_address_enum 108,3477
  ieee_section_base_address_enum = 0xe2cc,xe2cc108,3477
  ieee_asn_record_enum 109,3520
  ieee_asn_record_enum = 0xe2ce,xe2ce109,3520
  ieee_section_offset_enum 110,3553
  ieee_section_offset_enum = 0xe2d2,xe2d2110,3553
  ieee_value_starting_address_enum 111,3590
  ieee_value_starting_address_enum = 0xe2c7,xe2c7111,3590
  ieee_assign_value_to_variable_enum 112,3635
  ieee_assign_value_to_variable_enum = 0xe2d7,xe2d7112,3635
  ieee_set_current_pc_enum 113,3682
  ieee_set_current_pc_enum = 0xe2d0,xe2d0113,3682
  ieee_value_record_enum 114,3719
  ieee_value_record_enum = 0xe2c9,xe2c9114,3719
  ieee_nn_record 115,3754
  ieee_nn_record = 0xf0,xf0115,3754
  ieee_at_record_enum 116,3779
  ieee_at_record_enum = 0xf1,xf1116,3779
  ieee_ty_record_enum 117,3809
  ieee_ty_record_enum = 0xf2,xf2117,3809
  ieee_attribute_record_enum 118,3839
  ieee_attribute_record_enum = 0xf1c9,xf1c9118,3839
  ieee_atn_record_enum 119,3878
  ieee_atn_record_enum = 0xf1ce,xf1ce119,3878
  ieee_external_reference_info_record_enum 120,3911
  ieee_external_reference_info_record_enum = 0xf1d8,xf1d8120,3911
  ieee_weak_external_reference_enum=121,3964
  ieee_weak_external_reference_enum= 0xf4,xf4121,3964
  ieee_repeat_data_enum 122,4007
  ieee_repeat_data_enum = 0xf7,xf7122,4007
  ieee_bb_record_enum 123,4039
  ieee_bb_record_enum = 0xf8,xf8123,4039
  ieee_be_record_enum 124,4069
  ieee_be_record_enum = 0xf9xf9124,4069
} ieee_record_enum_type;125,4098
typedef struct ieee_section 128,4125
} ieee_section_type;135,4341
#define IEEE_REFERENCE_BASE 136,4362
#define IEEE_PUBLIC_BASE 137,4393
#define IEEE_SECTION_NUMBER_BASE 138,4421

pstack/linuxthreads.h,36
#define	pstack_linuxthreads_h_8,87

pstack/pstack.h,30
#define	pstack_pstack_h_4,41

pstack/pstacktrace.h,259
#define	pstacktrace_h_8,68
#define	PSTACK_DEBUG 10,92
#undef PSTACK_DEBUG11,115
#	define	TRACE_PUTC(14,156
#	define	TRACE_FPUTS(15,187
#	define	TRACE_FPRINTF(16,220
#	define	TRACE_PUTC(18,281
#	define	TRACE_FPUTS(19,313
#	define	TRACE_FPRINTF(20,346

readline/ansi_stdlib.h,27
#define	_STDLIB_H_ 24,960

readline/chardefs.h,1105
#define _CHARDEFS_H_24,1039
#define whitespace(41,1327
#undef CTRL45,1401
#define control_character_threshold 49,1449
#define control_character_mask 50,1529
#define meta_character_threshold 51,1584
#define control_character_bit 52,1659
#define meta_character_bit 53,1727
#define largest_char 54,1792
#define CTRL_CHAR(56,1854
#define META_CHAR(57,1923
#define CTRL(59,2001
#define META(60,2048
#define UNMETA(62,2092
#define UNCTRL(63,2140
#define _rl_lowercase_p(71,2404
#define _rl_uppercase_p(72,2444
#define _rl_digit_p(73,2484
#define _rl_pure_alphabetic(75,2523
#define ALPHABETIC(76,2597
#  define _rl_to_upper(84,2854
#  define _rl_to_lower(85,2912
#define _rl_digit_value(89,3002
#define NEWLINE 93,3065
#define RETURN 97,3109
#define RUBOUT 101,3157
#define TAB 105,3197
#undef ABORT_CHAR109,3240
#define ABORT_CHAR 111,3265
#undef PAGE114,3307
#define PAGE 116,3326
#undef SPACE119,3363
#define SPACE 121,3383
#undef ESC124,3434
#define ESC 126,3452
#define ISOCTAL(129,3491
#define OCTVALUE(131,3549
#  define isxdigit(134,3603
#define HEXVALUE(137,3710

readline/histlib.h,720
#define _HISTLIB_H_23,1031
#  define _FUNCTION_DEF27,1141
typedef int Function 28,1165
typedef void VFunction 29,1190
typedef char *CPFunction CPFunction30,1217
typedef char **CPPFunction CPPFunction31,1246
#define STREQ(34,1305
#define STREQN(35,1374
#define savestring(41,1523
#define whitespace(45,1611
#define _rl_digit_p(49,1693
#define _rl_digit_value(53,1776
#define member(60,1888
#  define FREE(64,1986
#define EVENT_NOT_FOUND 68,2080
#define BAD_WORD_SPEC	69,2106
#define SUBST_FAILED	70,2130
#define BAD_MODIFIER	71,2153
#define NO_PREV_SUBST	72,2176
#define ANCHORED_SEARCH 75,2270
#define NON_ANCHORED_SEARCH 76,2296
#define HISTORY_APPEND 79,2406
#define HISTORY_OVERWRITE 80,2431

readline/history.h,452
#define _HISTORY_H_23,1031
#  define _FUNCTION_DEF36,1217
typedef int Function 37,1241
typedef void VFunction 38,1266
typedef char *CPFunction CPFunction39,1293
typedef char **CPPFunction CPPFunction40,1322
typedef void *histdata_t;histdata_t44,1377
typedef char *histdata_t;histdata_t46,1409
typedef struct _hist_entry 50,1494
} HIST_ENTRY;53,1556
typedef struct _hist_state 56,1649
} HISTORY_STATE;62,1940
#define HS_STIFLED	65,2017

readline/keymaps.h,491
#define _KEYMAPS_H_24,1047
#  define _FUNCTION_DEF35,1252
typedef int Function 36,1276
typedef void VFunction 37,1301
typedef char *CPFunction CPFunction38,1328
typedef char **CPPFunction CPPFunction39,1357
typedef struct _keymap_entry 47,1655
} KEYMAP_ENTRY;50,1721
#define KEYMAP_SIZE 55,1900
typedef KEYMAP_ENTRY KEYMAP_ENTRY_ARRAY[KEYMAP_ENTRY_ARRAY62,2150
typedef KEYMAP_ENTRY *Keymap;Keymap63,2204
#define ISFUNC 66,2290
#define ISKMAP 67,2307
#define ISMACR 68,2324

readline/posixdir.h,140
#define _POSIXDIR_H_24,962
#  define D_NAMLEN(28,1034
#    define dirent 40,1302
#  define D_NAMLEN(42,1351
#  define d_fileno 46,1499

readline/posixjmp.h,188
#define _POSIXJMP_H_4,95
#  define procenv_t	11,221
#    undef setjmp13,278
#    define setjmp(14,296
#    undef longjmp15,336
#    define longjmp(16,355
#  define procenv_t	19,433

readline/posixstat.h,1136
#define _POSIXSTAT_H_25,1020
#  undef S_ISBLK30,1099
#  undef S_ISCHR31,1116
#  undef S_ISDIR32,1133
#  undef S_ISFIFO33,1150
#  undef S_ISREG34,1168
#  undef S_ISLNK35,1185
#  define S_IFDIR 40,1330
#  define S_IFMT 43,1412
#define S_IFMT 52,1688
#define S_IFIFO 55,1763
#define S_IFCHR 58,1840
#define S_IFDIR 61,1917
#define S_IFBLK 64,1994
#define S_IFREG 67,2071
#define S_IFLNK 70,2148
#define S_IFSOCK 73,2227
#define	S_ISBLK(80,2449
#define	S_ISCHR(84,2565
#define	S_ISDIR(88,2685
#define	S_ISREG(92,2798
#define	S_ISFIFO(96,2907
#define	S_ISLNK(100,3029
#define	S_ISSOCK(104,3148
#    define S_IREAD	113,3320
#    define S_IWRITE	114,3346
#    define S_IEXEC	115,3373
#    define S_IRUSR	119,3448
#    define S_IWUSR	120,3496
#    define S_IXUSR	121,3545
#    define S_IRGRP	123,3597
#    define S_IWGRP	124,3652
#    define S_IXGRP	125,3708
#    define S_IROTH	127,3767
#    define S_IWOTH	128,3822
#    define S_IXOTH	129,3878
#  define S_IRWXU	132,3961
#  define S_IRWXG	133,4009
#  define S_IRWXO	134,4057
#define S_IRUGO	138,4202
#define S_IWUGO	139,4249
#define S_IXUGO	140,4296

readline/readline.h,596
#define _READLINE_H_24,1076
enum undo_code 48,1698
enum undo_code { UNDO_DELETE,48,1698
enum undo_code { UNDO_DELETE, UNDO_INSERT,48,1698
enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN,48,1698
enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN, UNDO_END 48,1698
typedef struct undo_list 51,1817
} UNDO_LIST;56,2045
typedef struct _funmap 62,2210
} FUNMAP;65,2277
#define rl_symbolic_link_hook 539,20757
#define RL_PROMPT_START_IGNORE	604,23780
#define RL_PROMPT_END_IGNORE	605,23818
#define NO_MATCH 609,23969
#define SINGLE_MATCH 610,23995
#define MULT_MATCH 611,24021

readline/rlconf.h,284
#define _RLCONF_H_25,1030
#define VI_MODE28,1111
#define VISIBLE_STATS31,1206
#define HANDLE_SIGNALS39,1501
#define PREFIX_META_HACK42,1578
#define DEFAULT_INPUTRC 45,1667
#define DISPLAY_TABS48,1746
#define RL_COMMENT_BEGIN_DEFAULT 55,2009
#define READLINE_CALLBACKS59,2143

readline/rldefs.h,887
#define _RLDEFS_H_27,1185
#  define TERMIOS_TTY_DRIVER34,1322
#    define TERMIO_TTY_DRIVER37,1387
#    define NEW_TTY_DRIVER39,1425
#  define S_ISDIR(46,1641
#define _rl_stricmp 71,2219
#define _rl_strnicmp 72,2250
#  define no_mode 78,2367
#  define vi_mode 79,2388
#  define emacs_mode 80,2408
#  define FUNCTION_TO_KEYMAP(89,2734
#  define KEYMAP_TO_FUNCTION(90,2806
#  define FUNCTION_TO_KEYMAP(92,2873
#  define KEYMAP_TO_FUNCTION(93,2940
#define savestring(98,3046
#define NO_BELL 102,3162
#define AUDIBLE_BELL 103,3180
#define VISIBLE_BELL 104,3203
#define	FTO	108,3356
#define BTO	109,3389
#define FFIND	110,3423
#define BFIND	111,3460
#define RL_QF_SINGLE_QUOTE	116,3666
#define RL_QF_DOUBLE_QUOTE	117,3697
#define RL_QF_BACKSLASH	118,3728
#define DEFAULT_BUFFER_SIZE 121,3801
#define STREQ(124,3855
#define STREQN(125,3924
#  define FREE(129,4031

readline/rlstdc.h,382
#define _RL_STDC_H_23,901
#    define __P(34,1222
#  define __STRING(36,1262
#    define inline39,1359
#    define __P(45,1432
#  define __STRING(47,1468
#    define const 51,1570
#    define inline 54,1630
#    define signed 57,1691
#    define volatile 60,1754
#    define const64,1840
#    define inline67,1891
#    define signed70,1943
#    define volatile73,1997

readline/rltty.h,167
#define _RLTTY_H25,1051
#    define TCOON 36,1335
#    define _POSIX_VDISABLE 53,1876
#      define _POSIX_VDISABLE 56,1960
#      define _POSIX_VDISABLE 58,2024

readline/rlwinsize.h,62
#define _RLWINSIZE_H_26,1099
#    define _IO_PTEM_H 49,1889

readline/tcap.h,47
#define _RLTCAP_H_25,1034
#  undef PC41,1416

readline/tilde.h,215
#  define _TILDE_H_25,1050
#  define _FUNCTION_DEF29,1160
typedef int Function 30,1184
typedef void VFunction 31,1209
typedef char *CPFunction CPFunction32,1236
typedef char **CPPFunction CPPFunction33,1265

regex/cclass.h,423
#define CCLASS_ALNUM	3,29
#define CCLASS_ALPHA	4,52
#define CCLASS_BLANK	5,75
#define CCLASS_CNTRL	6,98
#define CCLASS_DIGIT	7,121
#define CCLASS_GRAPH	8,144
#define CCLASS_LOWER	9,167
#define CCLASS_PRINT	10,190
#define CCLASS_PUNCT	11,213
#define CCLASS_SPACE	12,236
#define CCLASS_UPPER	13,259
#define CCLASS_XDIGIT	14,283
#define CCLASS_LAST	15,308
extern struct cclass 17,332
} cclasses[cclasses21,415

regex/cname.h,48
static struct cname 2,27
} cnames[cnames5,88

regex/regex.h,1005
#define	_REGEX_H_	2,18
typedef __int64 regoff_t;10,189
typedef off_t regoff_t;12,221
} regex_t;20,505
} regmatch_t;24,609
#define	REG_BASIC	29,699
#define	REG_EXTENDED	30,722
#define	REG_ICASE	31,748
#define	REG_NOSUB	32,771
#define	REG_NEWLINE	33,794
#define	REG_NOSPEC	34,819
#define	REG_PEND	35,843
#define	REG_DUMP	36,865
#define	REG_NOMATCH	40,914
#define	REG_BADPAT	41,937
#define	REG_ECOLLATE	42,959
#define	REG_ECTYPE	43,983
#define	REG_EESCAPE	44,1005
#define	REG_ESUBREG	45,1028
#define	REG_EBRACK	46,1051
#define	REG_EPAREN	47,1073
#define	REG_EBRACE	48,1095
#define	REG_BADBR	49,1117
#define	REG_ERANGE	50,1138
#define	REG_ESPACE	51,1160
#define	REG_BADRPT	52,1182
#define	REG_EMPTY	53,1204
#define	REG_ASSERT	54,1225
#define	REG_INVARG	55,1247
#define	REG_ATOI	56,1269
#define	REG_ITOA	57,1323
#define	REG_NOTBOL	63,1545
#define	REG_NOTEOL	64,1570
#define	REG_STARTEND	65,1595
#define	REG_TRACE	66,1622
#define	REG_LARGE	67,1673
#define	REG_BACKR	68,1730

regex/regex2.h,1166
#define __regex2_h__19,489
#define	MAGIC1	21,511
typedef unsigned long sop;42,1496
typedef long sopno;43,1544
#define	OPRMASK	44,1564
#define	OPDMASK	45,1591
#define	OPSHIFT	46,1618
#define	OP(47,1654
#define	OPND(48,1700
#define	SOP(49,1748
#define OSHIFT(50,1800
#define	OEND	53,1925
#define	OCHAR	54,1968
#define	OBOL	55,2023
#define	OEOL	56,2068
#define	OANY	57,2114
#define	OANYOF	58,2150
#define	OBACK_	59,2199
#define	O_BACK	60,2253
#define	OPLUS_	61,2305
#define	O_PLUS	62,2360
#define	OQUEST_	63,2417
#define	O_QUEST	64,2474
#define	OLPAREN	65,2532
#define	ORPAREN	66,2578
#define	OCH_	67,2625
#define	OOR1	68,2681
#define	OOR2	69,2740
#define	O_CH	70,2798
#define	OBOW	71,2853
#define	OEOW	72,2898
typedef unsigned char uch 87,3536
} cset;96,3759
#define	CHadd(98,3838
#define	CHsub(99,3920
#define	CHIN(100,4002
#define	MCadd(101,4057
#define	MCsub(102,4128
#define	MCin(103,4170
typedef unsigned char cat_t;106,4248
struct re_guts 111,4323
#		define	MAGIC2	113,4352
#		define	USEBOL	124,4848
#		define	USEEOL	125,4881
#		define	BAD	126,4914
#undef OUT	141,5438
#define	OUT	142,5483
#define	ISWORD(143,5536

regex/utils.h,168
#define	DUPMAX	3,52
#define DUPMAX	5,118
#define	RE_INFINITY	7,145
#define	NC	8,178
typedef unsigned char uch;9,216
#define	NDEBUG	14,338
#define	memmove(21,483

sql/field.h,15447
#define NOT_FIXED_DEC	27,997
class Field 33,1107
  static void *operator new(Field::operator new37,1209
  static void operator delete(Field::operator delete38,1292
  enum utype Field::utype47,1697
  enum utype  { NONE,Field::utype::NONE47,1697
  enum utype  { NONE,DATE,Field::utype::DATE47,1697
  enum utype  { NONE,DATE,SHIELD,Field::utype::SHIELD47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,Field::utype::NOEMPTY47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,Field::utype::CASEUP47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,Field::utype::PNR47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,Field::utype::BGNR47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,Field::utype::PGNR47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,Field::utype::YES47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,NO,Field::utype::NO47,1697
  enum utype  { NONE,DATE,SHIELD,NOEMPTY,CASEUP,PNR,BGNR,PGNR,YES,NO,REL,Field::utype::REL47,1697
		CHECK,Field::utype::CHECK48,1771
		CHECK,EMPTY,Field::utype::EMPTY48,1771
		CHECK,EMPTY,UNKNOWN_FIELD,Field::utype::UNKNOWN_FIELD48,1771
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,Field::utype::CASEDN48,1771
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,NEXT_NUMBER,Field::utype::NEXT_NUMBER48,1771
		CHECK,EMPTY,UNKNOWN_FIELD,CASEDN,NEXT_NUMBER,INTERVAL_FIELD,Field::utype::INTERVAL_FIELD48,1771
		BIT_FIELD,Field::utype::BIT_FIELD49,1834
		BIT_FIELD, TIMESTAMP_FIELD,Field::utype::TIMESTAMP_FIELD49,1834
		BIT_FIELD, TIMESTAMP_FIELD,CAPITALIZE,Field::utype::CAPITALIZE49,1834
		BIT_FIELD, TIMESTAMP_FIELD,CAPITALIZE,BLOB_FIELD}Field::utype::BLOB_FIELD49,1834
  virtual ~Field(Field::~Field58,2182
  virtual Item_result cmp_type Field::cmp_type67,2554
  bool eq(Field::eq68,2620
  virtual uint32 pack_length(Field::pack_length70,2742
  virtual void reset(Field::reset71,2813
  virtual void reset_fields(Field::reset_fields72,2870
  virtual void set_default(Field::set_default73,2903
  virtual bool binary(Field::binary82,3177
  virtual bool zero_pack(Field::zero_pack83,3221
  virtual enum ha_base_keytype key_type(Field::key_type84,3268
  virtual uint32 key_length(Field::key_length85,3346
  virtual enum_field_types real_type(Field::real_type87,3452
  inline  int cmp(Field::cmp88,3516
  virtual int cmp_binary(Field::cmp_binary90,3624
  virtual int cmp_offset(Field::cmp_offset92,3741
  virtual int cmp_binary_offset(Field::cmp_binary_offset94,3838
  virtual int key_cmp(Field::key_cmp96,3942
  virtual int key_cmp(Field::key_cmp98,4032
  virtual uint decimals(Field::decimals100,4119
  inline bool is_null(Field::is_null108,4443
  inline bool is_real_null(Field::is_real_null110,4569
  inline void set_null(Field::set_null112,4688
  inline void set_notnull(Field::set_notnull114,4784
  inline bool maybe_null(Field::maybe_null116,4892
  inline bool real_maybe_null(Field::real_maybe_null117,4970
  virtual bool store_for_compare(Field::store_for_compare121,5170
  Field *new_field(Field::new_field122,5219
  inline void move_field(Field::move_field137,5733
  inline void move_field(Field::move_field141,5883
  inline void move_field(Field::move_field142,5940
  inline void get_image(Field::get_image148,6107
  inline void set_image(Field::set_image150,6188
  virtual void get_key_image(Field::get_key_image152,6269
  virtual void set_key_image(Field::set_key_image154,6354
  inline int cmp_image(Field::cmp_image156,6439
  inline longlong val_int_offset(Field::val_int_offset163,6599
  virtual char *pack(Field::pack171,6794
  virtual const char *unpack(Field::unpack177,6961
  virtual char *pack_key(Field::pack_key183,7109
  virtual char *pack_key_from_key_image(Field::pack_key_from_key_image187,7224
  virtual uint packed_col_length(Field::packed_col_length192,7359
  virtual uint max_packed_col_length(Field::max_packed_col_length194,7441
  virtual int pack_cmp(Field::pack_cmp197,7520
  virtual int pack_cmp(Field::pack_cmp199,7616
class Field_num 223,8420
  Field_num(Field_num::Field_num227,8545
  Item_result result_type Field_num::result_type241,9050
  uint decimals(Field_num::decimals246,9261
  uint size_of(Field_num::size_of247,9308
class Field_str 252,9391
  Field_str(Field_str::Field_str254,9431
  Item_result result_type Field_str::result_type261,9722
  uint decimals(Field_str::decimals262,9783
  uint size_of(Field_str::size_of265,9895
class Field_decimal 269,9949
  Field_decimal(Field_decimal::Field_decimal271,9997
  enum_field_types type(Field_decimal::type280,10386
  enum ha_base_keytype key_type(Field_decimal::key_type281,10448
  bool zero_pack(Field_decimal::zero_pack293,10865
class Field_tiny 298,10945
  Field_tiny(Field_tiny::Field_tiny300,10990
  enum Item_result result_type Field_tiny::result_type309,11373
  enum_field_types type(Field_tiny::type310,11436
  enum ha_base_keytype key_type(Field_tiny::key_type311,11495
  void reset(Field_tiny::reset316,11697
  uint32 pack_length(Field_tiny::pack_length322,11899
class Field_short 327,11983
  Field_short(Field_short::Field_short329,12029
  enum Item_result result_type Field_short::result_type338,12417
  enum_field_types type(Field_short::type339,12480
  enum ha_base_keytype key_type(Field_short::key_type340,12540
  void reset(Field_short::reset345,12750
  uint32 pack_length(Field_short::pack_length351,12959
class Field_medium 356,13043
  Field_medium(Field_medium::Field_medium358,13090
  enum Item_result result_type Field_medium::result_type367,13479
  enum_field_types type(Field_medium::type368,13542
  enum ha_base_keytype key_type(Field_medium::key_type369,13602
  void reset(Field_medium::reset374,13805
  uint32 pack_length(Field_medium::pack_length380,14021
class Field_long 385,14105
  Field_long(Field_long::Field_long387,14150
  Field_long(Field_long::Field_long396,14533
  enum Item_result result_type Field_long::result_type401,14797
  enum_field_types type(Field_long::type402,14860
  enum ha_base_keytype key_type(Field_long::key_type403,14919
  void reset(Field_long::reset408,15128
  uint32 pack_length(Field_long::pack_length414,15351
class Field_longlong 420,15457
  Field_longlong(Field_longlong::Field_longlong422,15506
  Field_longlong(Field_longlong::Field_longlong431,15897
  enum Item_result result_type Field_longlong::result_type437,16166
  enum_field_types type(Field_longlong::type438,16229
  enum ha_base_keytype key_type(Field_longlong::key_type439,16292
  void reset(Field_longlong::reset444,16501
  uint32 pack_length(Field_longlong::pack_length450,16752
  bool store_for_compare(Field_longlong::store_for_compare452,16831
class Field_float 456,16883
  Field_float(Field_float::Field_float458,16929
  enum_field_types type(Field_float::type467,17336
  enum ha_base_keytype key_type(Field_float::key_type468,17396
  void reset(Field_float::reset472,17559
  uint32 pack_length(Field_float::pack_length478,17777
class Field_double 483,17873
  Field_double(Field_double::Field_double485,17920
  Field_double(Field_double::Field_double494,18332
  enum_field_types type(Field_double::type499,18601
  enum ha_base_keytype key_type(Field_double::key_type500,18662
  void reset(Field_double::reset504,18826
  uint32 pack_length(Field_double::pack_length510,19045
class Field_null 517,19216
  Field_null(Field_null::Field_null520,19285
  enum_field_types type(Field_null::type526,19528
  void store(Field_null::store527,19587
  void store(Field_null::store528,19644
  void store(Field_null::store529,19685
  void reset(Field_null::reset530,19726
  double val_real(Field_null::val_real531,19750
  longlong val_int(Field_null::val_int532,19790
  String *val_str(Field_null::val_str533,19828
  int cmp(Field_null::cmp535,19915
  void sort_string(Field_null::sort_string536,19968
  uint32 pack_length(Field_null::pack_length537,20016
  void sql_type(Field_null::sql_type538,20059
  uint size_of(Field_null::size_of539,20117
class Field_timestamp 543,20171
  enum_field_types type(Field_timestamp::type549,20405
  enum ha_base_keytype key_type(Field_timestamp::key_type550,20469
  void reset(Field_timestamp::reset554,20636
  uint32 pack_length(Field_timestamp::pack_length560,20859
  bool store_for_compare(Field_timestamp::store_for_compare562,20938
  bool zero_pack(Field_timestamp::zero_pack563,20979
  virtual void set_default(Field_timestamp::set_default565,21037
  inline long get_timestamp(Field_timestamp::get_timestamp572,21169
class Field_year 589,21514
  Field_year(Field_year::Field_year591,21560
  enum_field_types type(Field_year::type598,21870
  bool store_for_compare(Field_year::store_for_compare606,22147
class Field_date 610,22193
  Field_date(Field_date::Field_date612,22238
  Field_date(Field_date::Field_date618,22520
  enum_field_types type(Field_date::type622,22721
  enum ha_base_keytype key_type(Field_date::key_type623,22780
  enum Item_result cmp_type Field_date::cmp_type624,22853
  void reset(Field_date::reset628,23007
  uint32 pack_length(Field_date::pack_length634,23230
  bool store_for_compare(Field_date::store_for_compare636,23309
  bool zero_pack(Field_date::zero_pack637,23350
class Field_newdate 640,23393
  Field_newdate(Field_newdate::Field_newdate642,23441
  enum_field_types type(Field_newdate::type648,23718
  enum_field_types real_type(Field_newdate::real_type649,23777
  enum ha_base_keytype key_type(Field_newdate::key_type650,23845
  enum Item_result cmp_type Field_newdate::cmp_type651,23915
  void reset(Field_newdate::reset656,24121
  uint32 pack_length(Field_newdate::pack_length662,24337
  bool store_for_compare(Field_newdate::store_for_compare664,24416
  bool zero_pack(Field_newdate::zero_pack665,24457
class Field_time 671,24576
  Field_time(Field_time::Field_time673,24621
  Field_time(Field_time::Field_time679,24902
  enum_field_types type(Field_time::type683,25102
  enum ha_base_keytype key_type(Field_time::key_type684,25161
  enum Item_result cmp_type Field_time::cmp_type685,25230
  void reset(Field_time::reset689,25384
  uint32 pack_length(Field_time::pack_length696,25630
  bool store_for_compare(Field_time::store_for_compare698,25709
  bool zero_pack(Field_time::zero_pack699,25750
class Field_datetime 703,25794
  Field_datetime(Field_datetime::Field_datetime705,25843
  Field_datetime(Field_datetime::Field_datetime711,26123
  enum_field_types type(Field_datetime::type715,26328
  enum ha_base_keytype key_type(Field_datetime::key_type717,26413
  enum Item_result cmp_type Field_datetime::cmp_type719,26493
  void reset(Field_datetime::reset724,26699
  uint32 pack_length(Field_datetime::pack_length730,26950
  bool store_for_compare(Field_datetime::store_for_compare732,27029
  bool zero_pack(Field_datetime::zero_pack733,27070
class Field_string 739,27189
  Field_string(Field_string::Field_string742,27256
  Field_string(Field_string::Field_string753,27665
  enum_field_types type(Field_string::type763,27992
  enum ha_base_keytype key_type(Field_string::key_type769,28182
  bool zero_pack(Field_string::zero_pack771,28288
  bool binary(Field_string::binary772,28327
  void reset(Field_string::reset773,28373
  uint size_of(Field_string::size_of789,29053
  enum_field_types real_type(Field_string::real_type790,29102
class Field_varstring 794,29174
  Field_varstring(Field_varstring::Field_varstring797,29244
  Field_varstring(Field_varstring::Field_varstring808,29645
  enum_field_types type(Field_varstring::type819,29975
  enum ha_base_keytype key_type(Field_varstring::key_type820,30041
  bool zero_pack(Field_varstring::zero_pack822,30153
  bool binary(Field_varstring::binary823,30192
  void reset(Field_varstring::reset824,30238
  uint32 pack_length(Field_varstring::pack_length825,30288
  uint32 key_length(Field_varstring::key_length826,30353
  uint size_of(Field_varstring::size_of842,31046
  enum_field_types real_type(Field_varstring::real_type843,31095
class Field_blob 847,31171
  Field_blob(Field_blob::Field_blob856,31505
  enum_field_types type(Field_blob::type866,31867
  enum ha_base_keytype key_type(Field_blob::key_type867,31926
  uint32 key_length(Field_blob::key_length882,32561
  uint32 pack_length(Field_blob::pack_length884,32647
  void reset(Field_blob::reset886,32733
  void reset_fields(Field_blob::reset_fields887,32794
  inline uint32 get_length(Field_blob::get_length889,32893
  bool binary(Field_blob::binary892,33018
  inline void get_ptr(Field_blob::get_ptr893,33064
  inline void set_ptr(Field_blob::set_ptr897,33164
  inline void set_ptr(Field_blob::set_ptr902,33316
  inline bool copy(Field_blob::copy910,33588
  inline void free(Field_blob::free929,34311
  inline void clear_temporary(Field_blob::clear_temporary930,34350
  uint size_of(Field_blob::size_of932,34472
class Field_enum 936,34526
  Field_enum(Field_enum::Field_enum941,34621
  enum_field_types type(Field_enum::type952,35044
  enum Item_result cmp_type Field_enum::cmp_type953,35106
  void reset(Field_enum::reset958,35301
  uint32 pack_length(Field_enum::pack_length964,35512
  uint size_of(Field_enum::size_of967,35645
  enum_field_types real_type(Field_enum::real_type968,35694
  virtual bool zero_pack(Field_enum::zero_pack969,35759
  bool optimize_range(Field_enum::optimize_range970,35806
  bool binary(Field_enum::binary971,35852
class Field_set 976,35922
  Field_set(Field_set::Field_set978,35967
  void store(Field_set::store991,36453
  virtual bool zero_pack(Field_set::zero_pack993,36541
  enum_field_types real_type(Field_set::real_type996,36661
class create_field 1004,36775
  create_field(create_field::create_field1019,37275
class Send_field 1028,37407
  Send_field(Send_field::Send_field1033,37526
class Copy_field 1041,37599
  Copy_field(Copy_field::Copy_field1052,37907
  ~Copy_field(Copy_field::~Copy_field1053,37925
#define FIELDFLAG_DECIMAL	1080,38866
#define FIELDFLAG_BINARY	1081,38895
#define FIELDFLAG_NUMBER	1082,38944
#define FIELDFLAG_ZEROFILL	1083,38972
#define FIELDFLAG_PACK	1084,39002
#define FIELDFLAG_INTERVAL	1085,39056
#define FIELDFLAG_BITFIELD	1086,39088
#define FIELDFLAG_BLOB	1087,39141
#define FIELDFLAG_GEOM	1088,39192
#define FIELDFLAG_LEFT_FULLSCREEN	1089,39222
#define FIELDFLAG_RIGHT_FULLSCREEN	1090,39261
#define FIELDFLAG_FORMAT_NUMBER	1091,39302
#define FIELDFLAG_SUM	1092,39370
#define FIELDFLAG_MAYBE_NULL	1093,39431
#define FIELDFLAG_PACK_SHIFT	1094,39482
#define FIELDFLAG_DEC_SHIFT	1095,39514
#define FIELDFLAG_MAX_DEC	1096,39545
#define FIELDFLAG_NUM_SCREEN_TYPE	1097,39575
#define FIELDFLAG_ALFA_SCREEN_TYPE	1098,39616
#define FIELD_SORT_REVERSE	1100,39659
#define MTYP_TYPENR(1102,39694
#define f_is_dec(1104,39762
#define f_is_num(1105,39809
#define f_is_zerofill(1106,39855
#define f_is_packed(1107,39907
#define f_packtype(1108,39954
#define f_decimals(1109,40014
#define f_is_alpha(1110,40098
#define f_is_binary(1111,40136
#define f_is_enum(1112,40185
#define f_is_bitfield(1113,40233
#define f_is_blob(1114,40285
#define f_is_geom(1115,40371
#define f_is_equ(1116,40416
#define f_settype(1117,40473
#define f_maybe_null(1118,40531

sql/ha_berkeley.h,1006
#define BDB_HIDDEN_PRIMARY_KEY_LENGTH 26,918
typedef struct st_berkeley_share 28,959
} BDB_SHARE;41,1319
class ha_berkeley:ha_berkeley44,1334
  ha_berkeley(ha_berkeley::ha_berkeley89,3058
  ~ha_berkeley(ha_berkeley::~ha_berkeley99,3516
  const char *table_type(ha_berkeley::table_type100,3536
  const char *index_type(ha_berkeley::index_type101,3594
  ulong table_flags(ha_berkeley::table_flags103,3688
  uint max_record_length(ha_berkeley::max_record_length104,3748
  uint max_keys(ha_berkeley::max_keys105,3811
  uint max_key_parts(ha_berkeley::max_key_parts106,3860
  uint max_key_length(ha_berkeley::max_key_length107,3918
  uint extra_rec_buf_length(ha_berkeley::extra_rec_buf_length108,3978
  bool fast_key_read(ha_berkeley::fast_key_read110,4088
  key_map keys_to_use_for_scanning(ha_berkeley::keys_to_use_for_scanning111,4127
  bool has_transactions(ha_berkeley::has_transactions112,4189
  inline void get_auto_primary_key(ha_berkeley::get_auto_primary_key161,5983

sql/ha_heap.h,678
class ha_heap:ha_heap26,918
  ha_heap(ha_heap::ha_heap31,977
  ~ha_heap(ha_heap::~ha_heap32,1029
  const char *table_type(ha_heap::table_type33,1045
  const char *index_type(ha_heap::index_type34,1097
  ulong table_flags(ha_heap::table_flags40,1263
  ulong index_flags(ha_heap::index_flags46,1447
  uint max_record_length(ha_heap::max_record_length53,1695
  uint max_keys(ha_heap::max_keys54,1758
  uint max_key_parts(ha_heap::max_key_parts55,1811
  uint max_key_length(ha_heap::max_key_length56,1870
  double scan_time(ha_heap::scan_time57,1933
  double read_time(ha_heap::read_time58,2003
  virtual bool fast_key_read(ha_heap::fast_key_read60,2099

sql/ha_innodb.h,876
typedef struct st_innobase_share 28,984
} INNOBASE_SHARE;33,1117
class ha_innobase:ha_innobase36,1189
  	ha_innobase(ha_innobase::ha_innobase87,2952
  	~ha_innobase(ha_innobase::~ha_innobase103,3358
  	const char* table_type(ha_innobase::table_type105,3380
	const char *index_type(ha_innobase::index_type106,3435
 	ulong table_flags(ha_innobase::table_flags108,3529
	ulong index_flags(ha_innobase::index_flags109,3585
  	uint max_record_length(ha_innobase::max_record_length114,3706
  	uint max_keys(ha_innobase::max_keys115,3770
  	uint max_key_parts(ha_innobase::max_key_parts116,3824
  	uint max_key_length(ha_innobase::max_key_length124,4183
  	bool fast_key_read(ha_innobase::fast_key_read126,4282
	key_map keys_to_use_for_scanning(ha_innobase::keys_to_use_for_scanning127,4320
  	bool has_transactions(ha_innobase::has_transactions128,4381

sql/ha_isam.h,584
class ha_isam:ha_isam26,921
  ha_isam(ha_isam::ha_isam33,1066
  ~ha_isam(ha_isam::~ha_isam39,1297
  const char *table_type(ha_isam::table_type40,1313
  const char *index_type(ha_isam::index_type41,1365
  ulong table_flags(ha_isam::table_flags43,1459
  uint max_record_length(ha_isam::max_record_length44,1515
  uint max_keys(ha_isam::max_keys45,1578
  uint max_key_parts(ha_isam::max_key_parts46,1632
  uint max_key_length(ha_isam::max_key_length47,1690
  bool low_byte_first(ha_isam::low_byte_first49,1798
  my_off_t row_position(ha_isam::row_position69,2579

sql/ha_isammrg.h,630
class ha_isammrg:ha_isammrg26,927
  ha_isammrg(ha_isammrg::ha_isammrg31,990
  ~ha_isammrg(ha_isammrg::~ha_isammrg32,1045
  const char *table_type(ha_isammrg::table_type33,1064
  ulong table_flags(ha_isammrg::table_flags35,1152
  ulong index_flags(ha_isammrg::index_flags37,1279
  uint max_record_length(ha_isammrg::max_record_length39,1352
  uint max_keys(ha_isammrg::max_keys40,1415
  uint max_key_parts(ha_isammrg::max_key_parts41,1462
  uint max_key_length(ha_isammrg::max_key_length42,1509
  bool low_byte_first(ha_isammrg::low_byte_first43,1556
  my_off_t row_position(ha_isammrg::row_position63,2320

sql/ha_myisam.h,924
#define HA_RECOVER_NONE	27,945
#define HA_RECOVER_DEFAULT	28,999
#define HA_RECOVER_BACKUP	29,1059
#define HA_RECOVER_FORCE	30,1122
#define HA_RECOVER_QUICK	31,1185
class ha_myisam:ha_myisam37,1364
  ha_myisam(ha_myisam::ha_myisam46,1587
  ~ha_myisam(ha_myisam::~ha_myisam53,1891
  const char *table_type(ha_myisam::table_type54,1909
  ulong table_flags(ha_myisam::table_flags57,2038
  ulong index_flags(ha_myisam::index_flags58,2094
  uint max_record_length(ha_myisam::max_record_length64,2311
  uint max_keys(ha_myisam::max_keys65,2374
  uint max_key_parts(ha_myisam::max_key_parts66,2430
  uint max_key_length(ha_myisam::max_key_length67,2489
  int index_end(ha_myisam::index_end84,3222
  int ft_init(ha_myisam::ft_init85,3271
  FT_INFO *ft_init_ext(ha_myisam::ft_init_ext92,3397
  my_off_t row_position(ha_myisam::row_position101,3768
  bool auto_repair(ha_myisam::auto_repair127,4924

sql/ha_myisammrg.h,720
class ha_myisammrg:ha_myisammrg26,931
  ha_myisammrg(ha_myisammrg::ha_myisammrg31,997
  ~ha_myisammrg(ha_myisammrg::~ha_myisammrg32,1054
  const char *table_type(ha_myisammrg::table_type33,1075
  ulong table_flags(ha_myisammrg::table_flags35,1165
  ulong index_flags(ha_myisammrg::index_flags41,1366
  uint max_record_length(ha_myisammrg::max_record_length48,1659
  uint max_keys(ha_myisammrg::max_keys49,1722
  uint max_key_parts(ha_myisammrg::max_key_parts50,1778
  uint max_key_length(ha_myisammrg::max_key_length51,1837
  virtual double scan_time(ha_myisammrg::scan_time52,1897
  my_off_t row_position(ha_myisammrg::row_position78,2968
  MYRG_INFO *myrg_info(ha_myisammrg::myrg_info90,3528

sql/handler.h,7166
#define NO_HASH	27,963
#define USING_TRANSACTIONS31,1075
#define HA_ADMIN_ALREADY_DONE	36,1151
#define HA_ADMIN_OK 37,1185
#define HA_ADMIN_NOT_IMPLEMENTED 38,1221
#define HA_ADMIN_FAILED	39,1257
#define HA_ADMIN_CORRUPT 40,1286
#define HA_ADMIN_INTERNAL_ERROR 41,1322
#define HA_ADMIN_INVALID 42,1358
#define HA_ADMIN_REJECT 43,1394
#define HA_READ_RND_SAME	46,1488
#define HA_KEYPOS_TO_RNDPOS	48,1588
#define HA_TABLE_SCAN_ON_INDEX 49,1652
#define HA_REC_NOT_IN_SEQ	50,1720
#define HA_NO_INDEX	52,1828
#define HA_KEY_READ_WRONG_STR	53,1888
#define HA_NULL_KEY	54,1961
#define HA_DUPP_POS	55,2020
#define HA_NO_BLOBS	56,2080
#define HA_BLOB_KEY	57,2133
#define HA_AUTO_PART_KEY	58,2188
#define HA_REQUIRE_PRIMARY_KEY	59,2229
#define HA_NOT_EXACT_COUNT	60,2281
#define HA_NO_WRITE_DELAYED	61,2335
#define HA_PRIMARY_KEY_IN_READ_INDEX 62,2386
#define HA_DROP_BEFORE_CREATE	63,2447
#define HA_NOT_READ_AFTER_KEY	64,2510
#define HA_NOT_DELETE_WITH_CACHE 65,2566
#define HA_NO_TEMP_TABLES 66,2625
#define HA_NO_PREFIX_CHAR_KEYS	67,2686
#define HA_CAN_FULLTEXT 68,2740
#define HA_CAN_SQL_HANDLER 69,2799
#define HA_NO_AUTO_INCREMENT	70,2851
#define HA_FILE_BASED	72,2949
#define HA_LASTKEY_ORDER	78,3132
#define HA_WRONG_ASCII_ORDER	82,3248
#define HA_READ_NEXT	83,3315
#define HA_READ_PREV	84,3376
#define HA_READ_ORDER	85,3438
#define HA_ONLY_WHOLE_INDEX	86,3503
#define HA_NOT_READ_PREFIX_LAST	87,3568
#define HA_KEY_READ_ONLY	88,3642
#define HA_OPEN_KEYFILE	95,3812
#define HA_OPEN_RNDFILE	96,3839
#define HA_GET_INDEX	97,3866
#define HA_GET_INFO	98,3890
#define HA_READ_ONLY	99,3945
#define HA_TRY_READ_ONLY	101,4053
#define HA_WAIT_IF_LOCKED	102,4081
#define HA_ABORT_IF_LOCKED	103,4139
#define HA_BLOCK_LOCK	104,4199
#define HA_OPEN_TEMPORARY	105,4265
#define HA_WRITE_SKIP 108,4353
#define HA_READ_CHECK 109,4409
#define HA_CANT_DO_THAT 110,4469
#define HA_KEY_NULL_LENGTH	113,4561
#define HA_KEY_BLOB_LENGTH	114,4590
#define HA_LEX_CREATE_TMP_TABLE	116,4620
#define HA_LEX_CREATE_IF_NOT_EXISTS 117,4654
#define HA_OPTION_NO_CHECKSUM	118,4692
#define HA_OPTION_NO_DELAY_KEY_WRITE 119,4733
#define HA_MAX_REC_LENGTH	120,4781
enum db_type 122,4814
enum db_type { DB_TYPE_UNKNOWN=122,4814
enum db_type { DB_TYPE_UNKNOWN=0,DB_TYPE_DIAB_ISAM=122,4814
	       DB_TYPE_HASH,123,4868
	       DB_TYPE_HASH,DB_TYPE_MISAM,123,4868
	       DB_TYPE_HASH,DB_TYPE_MISAM,DB_TYPE_PISAM,123,4868
	       DB_TYPE_RMS_ISAM,124,4918
	       DB_TYPE_RMS_ISAM, DB_TYPE_HEAP,124,4918
	       DB_TYPE_RMS_ISAM, DB_TYPE_HEAP, DB_TYPE_ISAM,124,4918
	       DB_TYPE_MRG_ISAM,125,4972
	       DB_TYPE_MRG_ISAM, DB_TYPE_MYISAM,125,4972
	       DB_TYPE_MRG_ISAM, DB_TYPE_MYISAM, DB_TYPE_MRG_MYISAM,125,4972
	       DB_TYPE_BERKELEY_DB,126,5034
	       DB_TYPE_BERKELEY_DB, DB_TYPE_INNODB,126,5034
	       DB_TYPE_BERKELEY_DB, DB_TYPE_INNODB, DB_TYPE_GEMINI,126,5034
	       DB_TYPE_DEFAULT 127,5095
enum row_type 129,5123
enum row_type { ROW_TYPE_NOT_USED=129,5123
enum row_type { ROW_TYPE_NOT_USED=-1, ROW_TYPE_DEFAULT,129,5123
enum row_type { ROW_TYPE_NOT_USED=-1, ROW_TYPE_DEFAULT, ROW_TYPE_FIXED,129,5123
		ROW_TYPE_DYNAMIC,130,5195
		ROW_TYPE_DYNAMIC, ROW_TYPE_COMPRESSED}ROW_TYPE_COMPRESSED130,5195
#define HA_CREATE_USED_AUTO	135,5337
#define HA_CREATE_USED_RAID	136,5368
#define HA_CREATE_USED_UNION	137,5399
#define HA_CREATE_USED_INSERT_METHOD	138,5431
#define HA_CREATE_USED_MIN_ROWS	139,5470
#define HA_CREATE_USED_MAX_ROWS	140,5506
#define HA_CREATE_USED_AVG_ROW_LENGTH	141,5542
#define HA_CREATE_USED_PACK_KEYS	142,5583
typedef struct st_thd_trans 144,5621
} THD_TRANS;148,5718
enum enum_tx_isolation 150,5732
enum enum_tx_isolation { ISO_READ_UNCOMMITTED,150,5732
enum enum_tx_isolation { ISO_READ_UNCOMMITTED, ISO_READ_COMMITTED,150,5732
			 ISO_REPEATABLE_READ,151,5799
			 ISO_REPEATABLE_READ, ISO_SERIALIZABLE}ISO_SERIALIZABLE151,5799
typedef struct st_ha_create_information153,5844
} HA_CREATE_INFO;171,6385
typedef struct st_table TABLE;177,6500
typedef struct st_ha_check_opt179,6532
} HA_CHECK_OPT;185,6748
class handler 187,6765
  handler(handler::handler219,7861
  virtual ~handler(handler::~handler228,8303
  void change_table_ptr(handler::change_table_ptr234,8548
  virtual double scan_time(handler::scan_time235,8611
  virtual double read_time(handler::read_time237,8705
  virtual bool fast_key_read(handler::fast_key_read239,8809
  virtual key_map keys_to_use_for_scanning(handler::keys_to_use_for_scanning240,8853
  virtual bool has_transactions(handler::has_transactions241,8912
  virtual uint extra_rec_buf_length(handler::extra_rec_buf_length242,8958
  virtual ha_rows estimate_number_of_rows(handler::estimate_number_of_rows243,9010
  virtual const char *index_type(handler::index_type244,9088
  virtual int index_init(handler::index_init246,9153
  virtual int index_end(handler::index_end247,9219
  uint get_index(handler::get_index248,9258
  virtual void initialize(handler::initialize250,9383
  virtual int index_read_last(handler::index_read_last264,10071
  virtual int ft_init(handler::ft_init268,10197
  virtual FT_INFO *ft_init_ext(handler::ft_init_ext270,10240
  virtual int ft_read(handler::ft_read273,10362
  virtual int rnd_end(handler::rnd_end275,10449
  virtual ha_rows records_in_range(handler::records_in_range280,10685
  virtual my_off_t row_position(handler::row_position287,11021
  virtual int extra_opt(handler::extra_opt290,11169
  virtual void unlock_row(handler::unlock_row296,11363
  virtual int start_stmt(handler::start_stmt297,11394
  virtual void update_create_info(handler::update_create_info300,11515
  virtual bool check_and_repair(handler::check_and_repair303,11698
  virtual int dump(handler::dump312,12130
  virtual void deactivate_non_unique_index(handler::deactivate_non_unique_index313,12208
  virtual bool activate_all_index(handler::activate_all_index314,12268
  virtual int net_read_dump(handler::net_read_dump316,12356
  virtual char *update_table_comment(handler::update_table_comment318,12432
  virtual void append_create_info(handler::append_create_info320,12520
  virtual char* get_foreign_key_create_info(handler::get_foreign_key_create_info321,12573
  virtual uint referenced_by_foreign_key(handler::referenced_by_foreign_key325,12759
  virtual void init_table_handle_for_HANDLER(handler::init_table_handle_for_HANDLER326,12815
  virtual void free_foreign_key_create_info(handler::free_foreign_key_create_info328,12917
  virtual ulong index_flags(handler::index_flags333,13168
  virtual uint max_key_part_length(handler::max_key_part_length341,13460
  virtual uint min_record_length(handler::min_record_length342,13513
  virtual bool low_byte_first(handler::low_byte_first343,13580
  virtual bool is_crashed(handler::is_crashed344,13632
  virtual bool auto_repair(handler::auto_repair345,13681
  virtual uint lock_count(handler::lock_count350,13916
#define ha_commit_stmt(362,14254
#define ha_rollback_stmt(363,14335
#define ha_commit(364,14420
#define ha_rollback(365,14495
#define ha_supports_generate(367,14575

sql/hash_filo.h,369
#define  HASH_FILO_H24,918
class hash_filo_element30,1010
  hash_filo_element(hash_filo_element::hash_filo_element34,1088
class hash_filo39,1144
  hash_filo(hash_filo::hash_filo51,1370
  ~hash_filo(hash_filo::~hash_filo59,1695
  void clear(hash_filo::clear68,1878
  hash_filo_element *search(hash_filo::search85,2280
  my_bool add(hash_filo::add108,2840

sql/item.h,10553
class Item 25,935
  static void *operator new(Item::operator new29,1034
  static void operator delete(Item::operator delete30,1117
  enum Type Item::Type32,1190
  enum Type {FIELD_ITEM,Item::Type::FIELD_ITEM32,1190
  enum Type {FIELD_ITEM,FUNC_ITEM,Item::Type::FUNC_ITEM32,1190
  enum Type {FIELD_ITEM,FUNC_ITEM,SUM_FUNC_ITEM,Item::Type::SUM_FUNC_ITEM32,1190
  enum Type {FIELD_ITEM,FUNC_ITEM,SUM_FUNC_ITEM,STRING_ITEM,Item::Type::STRING_ITEM32,1190
	     INT_ITEM,Item::Type::INT_ITEM33,1251
	     INT_ITEM,REAL_ITEM,Item::Type::REAL_ITEM33,1251
	     INT_ITEM,REAL_ITEM,NULL_ITEM,Item::Type::NULL_ITEM33,1251
	     INT_ITEM,REAL_ITEM,NULL_ITEM,VARBIN_ITEM,Item::Type::VARBIN_ITEM33,1251
	     COPY_STR_ITEM,Item::Type::COPY_STR_ITEM34,1299
	     COPY_STR_ITEM,FIELD_AVG_ITEM,Item::Type::FIELD_AVG_ITEM34,1299
	     COPY_STR_ITEM,FIELD_AVG_ITEM, DEFAULT_ITEM,Item::Type::DEFAULT_ITEM34,1299
	     PROC_ITEM,Item::Type::PROC_ITEM35,1349
	     PROC_ITEM,COND_ITEM,Item::Type::COND_ITEM35,1349
	     PROC_ITEM,COND_ITEM,REF_ITEM,Item::Type::REF_ITEM35,1349
	     PROC_ITEM,COND_ITEM,REF_ITEM,FIELD_STD_ITEM,Item::Type::FIELD_STD_ITEM35,1349
	     PROC_ITEM,COND_ITEM,REF_ITEM,FIELD_STD_ITEM, CONST_ITEM}Item::Type::CONST_ITEM35,1349
  enum cond_result Item::cond_result36,1413
  enum cond_result { COND_UNDEF,Item::cond_result::COND_UNDEF36,1413
  enum cond_result { COND_UNDEF,COND_OK,Item::cond_result::COND_OK36,1413
  enum cond_result { COND_UNDEF,COND_OK,COND_TRUE,Item::cond_result::COND_TRUE36,1413
  enum cond_result { COND_UNDEF,COND_OK,COND_TRUE,COND_FALSE Item::cond_result::COND_FALSE36,1413
  virtual ~Item(Item::~Item52,1870
  virtual void save_org_in_field(Item::save_org_in_field57,2156
  virtual bool save_safe_in_field(Item::save_safe_in_field59,2241
  virtual Item_result result_type Item::result_type63,2427
  virtual Field *tmp_table_field(Item::tmp_table_field69,2675
  virtual const char *full_name(Item::full_name70,2747
  virtual double  val_result(Item::val_result71,2819
  virtual longlong val_int_result(Item::val_int_result72,2868
  virtual String *str_result(Item::str_result73,2926
  virtual table_map used_tables(Item::used_tables75,3032
  virtual table_map not_null_tables(Item::not_null_tables87,3672
  virtual bool basic_const_item(Item::basic_const_item92,3850
  virtual Item *new_item(Item::new_item93,3904
  virtual cond_result eq_cmp_result(Item::eq_cmp_result94,3972
  inline uint float_length(Item::float_length95,4036
  virtual bool const_item(Item::const_item97,4166
  virtual void print(Item::print98,4231
  virtual void update_used_tables(Item::update_used_tables99,4303
  virtual void split_sum_func(Item::split_sum_func100,4342
  virtual bool get_date_result(Item::get_date_result103,4486
  virtual bool is_null(Item::is_null105,4585
  virtual void top_level_item(Item::top_level_item107,4661
  virtual void set_result_field(Item::set_result_field108,4696
  virtual bool is_result_field(Item::is_result_field109,4745
  virtual void save_in_result_field(Item::save_in_result_field110,4792
  virtual void no_rows_in_result(Item::no_rows_in_result111,4852
class Item_ident 115,4895
  unsigned int size_of(Item_ident::size_of124,5143
class Item_field 128,5200
  Item_field(Item_field::Item_field135,5330
  enum Type type(Item_field::type140,5536
  bool send(Item_field::send148,5789
  enum Item_result result_type Item_field::result_type157,6096
  Field *tmp_table_field(Item_field::tmp_table_field161,6177
  bool is_null(Item_field::is_null165,6379
  unsigned int size_of(Item_field::size_of166,6425
class Item_null 170,6482
  Item_null(Item_null::Item_null173,6521
  enum Type type(Item_null::type175,6630
  enum Item_result result_type Item_null::result_type183,6935
  bool basic_const_item(Item_null::basic_const_item186,7039
  Item *new_item(Item_null::new_item187,7085
  bool is_null(Item_null::is_null188,7136
  unsigned int size_of(Item_null::size_of189,7167
class Item_int 193,7224
  Item_int(Item_int::Item_int197,7286
  Item_int(Item_int::Item_int200,7390
  Item_int(Item_int::Item_int203,7471
  Item_int(Item_int::Item_int205,7584
  enum Type type(Item_int::type209,7793
  virtual enum Item_result result_type Item_int::result_type210,7839
  longlong val_int(Item_int::val_int211,7910
  double val(Item_int::val212,7949
  bool basic_const_item(Item_int::basic_const_item216,8114
  Item *new_item(Item_int::new_item217,8160
  unsigned int size_of(Item_int::size_of219,8254
class Item_uint 223,8311
  Item_uint(Item_uint::Item_uint226,8354
  Item_uint(Item_uint::Item_uint228,8479
  double val(Item_uint::val229,8532
  Item *new_item(Item_uint::new_item232,8649
  bool fix_fields(Item_uint::fix_fields233,8711
  unsigned int size_of(Item_uint::size_of239,8843
class Item_real 243,8898
  Item_real(Item_real::Item_real248,8989
  Item_real(Item_real::Item_real254,9159
  Item_real(Item_real::Item_real261,9339
  enum Type type(Item_real::type263,9447
  double val(Item_real::val264,9494
  longlong val_int(Item_real::val_int265,9527
  bool basic_const_item(Item_real::basic_const_item268,9669
  Item *new_item(Item_real::new_item269,9715
  unsigned int size_of(Item_real::size_of270,9792
class Item_float 274,9849
  Item_float(Item_float::Item_float277,9894
  unsigned int size_of(Item_float::size_of282,10021
class Item_string 285,10077
  Item_string(Item_string::Item_string288,10118
  Item_string(Item_string::Item_string295,10285
  ~Item_string(Item_string::~Item_string302,10466
  enum Type type(Item_string::type303,10486
  double val(Item_string::val304,10535
  longlong val_int(Item_string::val_int305,10584
  String *val_str(Item_string::val_str306,10656
  enum Item_result result_type Item_string::result_type309,10811
  bool basic_const_item(Item_string::basic_const_item310,10877
  Item *new_item(Item_string::new_item312,10975
  String *const_string(Item_string::const_string313,11055
  inline void append(Item_string::append314,11103
  unsigned int size_of(Item_string::size_of316,11208
class Item_default 322,11302
  Item_default(Item_default::Item_default325,11344
  enum Type type(Item_default::type326,11390
  void make_field(Item_default::make_field327,11440
  bool save_in_field(Item_default::save_in_field328,11480
  virtual double val(Item_default::val333,11584
  virtual longlong val_int(Item_default::val_int334,11623
  virtual String *val_str(Item_default::val_str335,11666
  bool basic_const_item(Item_default::basic_const_item336,11719
  unsigned int size_of(Item_default::size_of337,11765
class Item_datetime 343,11843
  Item_datetime(Item_datetime::Item_datetime346,11893
  unsigned int size_of(Item_datetime::size_of349,12019
class Item_empty_string 352,12075
  Item_empty_string(Item_empty_string::Item_empty_string355,12129
  unsigned int size_of(Item_empty_string::size_of358,12285
class Item_varbinary 361,12341
  ~Item_varbinary(Item_varbinary::~Item_varbinary365,12436
  enum Type type(Item_varbinary::type366,12459
  double val(Item_varbinary::val367,12508
  String *val_str(Item_varbinary::val_str369,12592
  unsigned int size_of(Item_varbinary::size_of373,12778
class Item_result_field 377,12835
  Item_result_field(Item_result_field::Item_result_field381,12960
  ~Item_result_field(Item_result_field::~Item_result_field382,13002
  Field *tmp_table_field(Item_result_field::tmp_table_field383,13059
  table_map used_tables(Item_result_field::used_tables384,13134
  unsigned int size_of(Item_result_field::size_of386,13219
  void set_result_field(Item_result_field::set_result_field387,13271
  bool is_result_field(Item_result_field::is_result_field388,13334
  void save_in_result_field(Item_result_field::save_in_result_field389,13373
class Item_ref 396,13484
  Item_ref(Item_ref::Item_ref401,13591
  Item_ref(Item_ref::Item_ref403,13722
  enum Type type(Item_ref::type405,13855
  bool eq(Item_ref::eq406,13902
  ~Item_ref(Item_ref::~Item_ref408,13996
  double val(Item_ref::val409,14036
  longlong val_int(Item_ref::val_int415,14147
  String *val_str(Item_ref::val_str421,14270
  bool is_null(Item_ref::is_null427,14393
  bool get_date(Item_ref::get_date432,14486
  bool send(Item_ref::send436,14604
  void make_field(Item_ref::make_field437,14674
  bool save_in_field(Item_ref::save_in_field439,14791
  void save_org_in_field(Item_ref::save_org_in_field441,14906
  enum Item_result result_type Item_ref::result_type442,14983
  table_map used_tables(Item_ref::used_tables443,15057
  unsigned int size_of(Item_ref::size_of444,15124
  void set_result_field(Item_ref::set_result_field445,15176
  bool is_result_field(Item_ref::is_result_field446,15239
  void save_in_result_field(Item_ref::save_in_result_field447,15278
class Item_int_with_ref 460,15577
  Item_int_with_ref(Item_int_with_ref::Item_int_with_ref464,15641
  bool save_in_field(Item_int_with_ref::save_in_field466,15720
  unsigned int size_of(Item_int_with_ref::size_of470,15838
class Item_copy_string 481,16043
  Item_copy_string(Item_copy_string::Item_copy_string485,16103
  ~Item_copy_string(Item_copy_string::~Item_copy_string492,16275
  enum Type type(Item_copy_string::type493,16314
  enum Item_result result_type Item_copy_string::result_type494,16365
  double val(Item_copy_string::val495,16431
  longlong val_int(Item_copy_string::val_int497,16503
  void make_field(Item_copy_string::make_field500,16628
  table_map used_tables(Item_copy_string::used_tables503,16766
  bool const_item(Item_copy_string::const_item504,16825
  bool is_null(Item_copy_string::is_null505,16865
  unsigned int size_of(Item_copy_string::size_of506,16905
class Item_buff 510,16962
  Item_buff(Item_buff::Item_buff514,17028
  unsigned int size_of(Item_buff::size_of517,17129
class Item_str_buff 520,17185
  Item_str_buff(Item_str_buff::Item_str_buff525,17273
  unsigned int size_of(Item_str_buff::size_of528,17401
class Item_real_buff 532,17458
  Item_real_buff(Item_real_buff::Item_real_buff537,17537
  unsigned int size_of(Item_real_buff::size_of539,17618
class Item_int_buff 542,17674
  Item_int_buff(Item_int_buff::Item_int_buff547,17754
  unsigned int size_of(Item_int_buff::size_of549,17832
class Item_field_buff 553,17889
  Item_field_buff(Item_field_buff::Item_field_buff560,17985
  unsigned int size_of(Item_field_buff::size_of566,18129

sql/item_cmpfunc.h,10639
class Item_bool_func 24,895
  Item_bool_func(Item_bool_func::Item_bool_func27,948
  Item_bool_func(Item_bool_func::Item_bool_func28,987
  Item_bool_func(Item_bool_func::Item_bool_func29,1034
  void fix_length_and_dec(Item_bool_func::fix_length_and_dec30,1091
  unsigned int size_of(Item_bool_func::size_of31,1149
class Item_bool_func2 34,1203
  Item_bool_func2(Item_bool_func2::Item_bool_func239,1335
  optimize_type select_optimize(Item_bool_func2::select_optimize46,1665
  virtual enum Functype rev_functype(Item_bool_func2::rev_functype47,1729
  bool have_rev_func(Item_bool_func2::have_rev_func48,1799
  void print(Item_bool_func2::print49,1871
  bool is_null(Item_bool_func2::is_null50,1927
  unsigned int size_of(Item_bool_func2::size_of51,2003
class Item_func_not 55,2060
  Item_func_not(Item_func_not::Item_func_not58,2113
  const char *func_name(Item_func_not::func_name60,2182
class Item_func_eq 63,2236
  Item_func_eq(Item_func_eq::Item_func_eq66,2289
  enum Functype functype(Item_func_eq::functype68,2370
  enum Functype rev_functype(Item_func_eq::rev_functype69,2423
  cond_result eq_cmp_result(Item_func_eq::eq_cmp_result70,2480
  const char *func_name(Item_func_eq::func_name71,2538
class Item_func_equal 74,2590
  Item_func_equal(Item_func_equal::Item_func_equal78,2677
  enum Functype functype(Item_func_equal::functype81,2790
  enum Functype rev_functype(Item_func_equal::rev_functype82,2846
  cond_result eq_cmp_result(Item_func_equal::eq_cmp_result83,2906
  const char *func_name(Item_func_equal::func_name84,2964
  unsigned int size_of(Item_func_equal::size_of85,3014
class Item_func_ge 89,3071
  Item_func_ge(Item_func_ge::Item_func_ge92,3124
  enum Functype functype(Item_func_ge::functype94,3205
  enum Functype rev_functype(Item_func_ge::rev_functype95,3258
  cond_result eq_cmp_result(Item_func_ge::eq_cmp_result96,3315
  const char *func_name(Item_func_ge::func_name97,3373
class Item_func_gt 101,3427
  Item_func_gt(Item_func_gt::Item_func_gt104,3480
  enum Functype functype(Item_func_gt::functype106,3561
  enum Functype rev_functype(Item_func_gt::rev_functype107,3614
  cond_result eq_cmp_result(Item_func_gt::eq_cmp_result108,3671
  const char *func_name(Item_func_gt::func_name109,3730
class Item_func_le 113,3783
  Item_func_le(Item_func_le::Item_func_le116,3836
  enum Functype functype(Item_func_le::functype118,3917
  enum Functype rev_functype(Item_func_le::rev_functype119,3970
  cond_result eq_cmp_result(Item_func_le::eq_cmp_result120,4027
  const char *func_name(Item_func_le::func_name121,4085
class Item_func_lt 125,4139
  Item_func_lt(Item_func_lt::Item_func_lt128,4192
  enum Functype functype(Item_func_lt::functype130,4272
  enum Functype rev_functype(Item_func_lt::rev_functype131,4325
  cond_result eq_cmp_result(Item_func_lt::eq_cmp_result132,4382
  const char *func_name(Item_func_lt::func_name133,4441
class Item_func_ne 137,4494
  Item_func_ne(Item_func_ne::Item_func_ne140,4547
  enum Functype functype(Item_func_ne::functype142,4627
  cond_result eq_cmp_result(Item_func_ne::eq_cmp_result143,4680
  optimize_type select_optimize(Item_func_ne::select_optimize144,4739
  const char *func_name(Item_func_ne::func_name145,4805
class Item_func_between 149,4859
  Item_func_between(Item_func_between::Item_func_between155,5028
  optimize_type select_optimize(Item_func_between::select_optimize157,5120
  enum Functype functype(Item_func_between::functype158,5185
  const char *func_name(Item_func_between::func_name159,5240
class Item_func_strcmp 164,5328
  Item_func_strcmp(Item_func_strcmp::Item_func_strcmp167,5385
  void fix_length_and_dec(Item_func_strcmp::fix_length_and_dec169,5468
  optimize_type select_optimize(Item_func_strcmp::select_optimize170,5514
  const char *func_name(Item_func_strcmp::func_name171,5580
class Item_func_interval 175,5638
  Item_func_interval(Item_func_interval::Item_func_interval180,5730
  bool fix_fields(Item_func_interval::fix_fields183,5848
  ~Item_func_interval(Item_func_interval::~Item_func_interval189,6062
  const char *func_name(Item_func_interval::func_name190,6103
  unsigned int size_of(Item_func_interval::size_of192,6187
class Item_func_ifnull 196,6244
  Item_func_ifnull(Item_func_ifnull::Item_func_ifnull200,6334
  enum Item_result result_type Item_func_ifnull::result_type204,6460
  const char *func_name(Item_func_ifnull::func_name206,6560
  table_map not_null_tables(Item_func_ifnull::not_null_tables207,6613
class Item_func_if 211,6668
  Item_func_if(Item_func_if::Item_func_if215,6754
  enum Item_result result_type Item_func_if::result_type219,6886
  bool fix_fields(Item_func_if::fix_fields220,6957
  const char *func_name(Item_func_if::func_name226,7126
  table_map not_null_tables(Item_func_if::not_null_tables227,7175
class Item_func_nullif 231,7230
  Item_func_nullif(Item_func_nullif::Item_func_nullif235,7326
  enum Item_result result_type Item_func_nullif::result_type239,7458
  const char *func_name(Item_func_nullif::func_name241,7558
  table_map not_null_tables(Item_func_nullif::not_null_tables242,7611
class Item_func_coalesce 246,7666
  Item_func_coalesce(Item_func_coalesce::Item_func_coalesce250,7758
  enum Item_result result_type Item_func_coalesce::result_type255,7913
  const char *func_name(Item_func_coalesce::func_name256,7984
  table_map not_null_tables(Item_func_coalesce::not_null_tables257,8039
class Item_func_case 261,8094
  Item_func_case(Item_func_case::Item_func_case267,8235
  table_map not_null_tables(Item_func_case::not_null_tables274,8504
  enum Item_result result_type Item_func_case::result_type275,8554
  const char *func_name(Item_func_case::func_name276,8625
  unsigned int size_of(Item_func_case::size_of281,8835
class in_vector 287,8936
  in_vector(in_vector::in_vector296,9073
  virtual ~in_vector(in_vector::~in_vector300,9287
  void sort(in_vector::sort303,9397
class in_string 311,9489
class in_longlong 323,9696
class in_double 333,9857
class cmp_item 347,10068
  cmp_item(cmp_item::cmp_item350,10111
  virtual ~cmp_item(cmp_item::~cmp_item351,10127
class cmp_item_sort_string 357,10232
  cmp_item_sort_string(cmp_item_sort_string::cmp_item_sort_string362,10348
  void store_value(cmp_item_sort_string::store_value363,10414
  int cmp(cmp_item_sort_string::cmp367,10496
class cmp_item_binary_string 377,10705
  cmp_item_binary_string(cmp_item_binary_string::cmp_item_binary_string379,10773
  int cmp(cmp_item_binary_string::cmp380,10803
class cmp_item_int 391,11015
  void store_value(cmp_item_int::store_value395,11079
  int cmp(cmp_item_int::cmp399,11151
class cmp_item_real 406,11227
  void store_value(cmp_item_real::store_value410,11290
  int cmp(cmp_item_real::cmp414,11359
class Item_func_in 421,11431
  Item_func_in(Item_func_in::Item_func_in427,11538
  bool fix_fields(Item_func_in::fix_fields430,11657
  ~Item_func_in(Item_func_in::~Item_func_in437,11906
  optimize_type select_optimize(Item_func_in::select_optimize438,11971
  Item *key_item(Item_func_in::key_item440,12064
  enum Functype functype(Item_func_in::functype442,12133
  const char *func_name(Item_func_in::func_name443,12186
  unsigned int size_of(Item_func_in::size_of446,12309
class Item_func_isnull 453,12405
  Item_func_isnull(Item_func_isnull::Item_func_isnull457,12486
  enum Functype functype(Item_func_isnull::functype459,12558
  void fix_length_and_dec(Item_func_isnull::fix_length_and_dec460,12615
  const char *func_name(Item_func_isnull::func_name465,12739
  void update_used_tables(Item_func_isnull::update_used_tables467,12841
  table_map not_null_tables(Item_func_isnull::not_null_tables484,13238
  optimize_type select_optimize(Item_func_isnull::select_optimize485,13288
  unsigned int size_of(Item_func_isnull::size_of486,13354
class Item_func_isnotnull 490,13411
  Item_func_isnotnull(Item_func_isnotnull::Item_func_isnotnull493,13470
  enum Functype functype(Item_func_isnotnull::functype495,13545
  void fix_length_and_dec(Item_func_isnotnull::fix_length_and_dec496,13605
  const char *func_name(Item_func_isnotnull::func_name500,13685
  optimize_type select_optimize(Item_func_isnotnull::select_optimize501,13741
  table_map not_null_tables(Item_func_isnotnull::not_null_tables502,13807
class Item_func_like 506,13862
  enum { alphabet_size Item_func_like::alphabet_size521,14421
  Item_func_like(Item_func_like::Item_func_like526,14478
  enum Functype functype(Item_func_like::functype530,14675
  cond_result eq_cmp_result(Item_func_like::eq_cmp_result532,14771
  const char *func_name(Item_func_like::func_name533,14829
  unsigned int size_of(Item_func_like::size_of536,14966
class Item_func_regex 543,15060
  Item_func_regex(Item_func_regex::Item_func_regex550,15199
  const char *func_name(Item_func_regex::func_name555,15400
  unsigned int size_of(Item_func_regex::size_of556,15452
class Item_func_regex 561,15515
  Item_func_regex(Item_func_regex::Item_func_regex564,15570
  longlong val_int(Item_func_regex::val_int565,15629
  const char *func_name(Item_func_regex::func_name566,15663
typedef class Item COND;572,15744
class Item_cond 574,15770
  Item_cond(Item_cond::Item_cond583,15961
  Item_cond(Item_cond::Item_cond584,16036
  ~Item_cond(Item_cond::~Item_cond586,16149
  bool add(Item_cond::add587,16192
  enum Type type(Item_cond::type590,16298
  List<Item>* argument_list(Item_cond::argument_list591,16345
  unsigned int size_of(Item_cond::size_of597,16593
  void top_level_item(Item_cond::top_level_item598,16643
class Item_cond_and 602,16693
  Item_cond_and(Item_cond_and::Item_cond_and605,16741
  Item_cond_and(Item_cond_and::Item_cond_and606,16775
  enum Functype functype(Item_cond_and::functype607,16831
  const char *func_name(Item_cond_and::func_name609,16912
class Item_cond_or 612,16966
  Item_cond_or(Item_cond_or::Item_cond_or615,17013
  Item_cond_or(Item_cond_or::Item_cond_or616,17046
  enum Functype functype(Item_cond_or::functype617,17101
  const char *func_name(Item_cond_or::func_name619,17181
  table_map not_null_tables(Item_cond_or::not_null_tables620,17230
inline Item *and_conds(and_conds626,17337
class Item_cond_xor 640,17643
  Item_cond_xor(Item_cond_xor::Item_cond_xor643,17691
  Item_cond_xor(Item_cond_xor::Item_cond_xor644,17725
  enum Functype functype(Item_cond_xor::functype645,17781
  enum Type type(Item_cond_xor::type647,17910
  const char *func_name(Item_cond_xor::func_name649,17979

sql/item_func.h,22222
class Item_func 31,995
  enum Functype Item_func::Functype39,1182
  enum Functype { UNKNOWN_FUNC,Item_func::Functype::UNKNOWN_FUNC39,1182
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,Item_func::Functype::EQ_FUNC39,1182
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,Item_func::Functype::EQUAL_FUNC39,1182
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,Item_func::Functype::NE_FUNC39,1182
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,LT_FUNC,Item_func::Functype::LT_FUNC39,1182
  enum Functype { UNKNOWN_FUNC,EQ_FUNC,EQUAL_FUNC,NE_FUNC,LT_FUNC,LE_FUNC,Item_func::Functype::LE_FUNC39,1182
		  GE_FUNC,Item_func::Functype::GE_FUNC40,1257
		  GE_FUNC,GT_FUNC,Item_func::Functype::GT_FUNC40,1257
		  GE_FUNC,GT_FUNC,FT_FUNC,Item_func::Functype::FT_FUNC40,1257
		  LIKE_FUNC,Item_func::Functype::LIKE_FUNC41,1286
		  LIKE_FUNC,NOTLIKE_FUNC,Item_func::Functype::NOTLIKE_FUNC41,1286
		  LIKE_FUNC,NOTLIKE_FUNC,ISNULL_FUNC,Item_func::Functype::ISNULL_FUNC41,1286
		  LIKE_FUNC,NOTLIKE_FUNC,ISNULL_FUNC,ISNOTNULL_FUNC,Item_func::Functype::ISNOTNULL_FUNC41,1286
		  COND_AND_FUNC,Item_func::Functype::COND_AND_FUNC42,1341
		  COND_AND_FUNC,COND_OR_FUNC,Item_func::Functype::COND_OR_FUNC42,1341
		  COND_AND_FUNC,COND_OR_FUNC,COND_XOR_FUNC,Item_func::Functype::COND_XOR_FUNC42,1341
		  COND_AND_FUNC,COND_OR_FUNC,COND_XOR_FUNC,BETWEEN,Item_func::Functype::BETWEEN42,1341
		  COND_AND_FUNC,COND_OR_FUNC,COND_XOR_FUNC,BETWEEN,IN_FUNC,Item_func::Functype::IN_FUNC42,1341
		  COND_AND_FUNC,COND_OR_FUNC,COND_XOR_FUNC,BETWEEN,IN_FUNC,INTERVAL_FUNC}Item_func::Functype::INTERVAL_FUNC42,1341
  enum optimize_type Item_func::optimize_type43,1418
  enum optimize_type { OPTIMIZE_NONE,Item_func::optimize_type::OPTIMIZE_NONE43,1418
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,Item_func::optimize_type::OPTIMIZE_KEY43,1418
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,OPTIMIZE_OP,Item_func::optimize_type::OPTIMIZE_OP43,1418
  enum optimize_type { OPTIMIZE_NONE,OPTIMIZE_KEY,OPTIMIZE_OP, OPTIMIZE_NULL Item_func::optimize_type::OPTIMIZE_NULL43,1418
  enum Type type(Item_func::type44,1498
  virtual enum Functype functype(Item_func::functype45,1545
  Item_func(Item_func::Item_func46,1613
  Item_func(Item_func::Item_func50,1673
  Item_func(Item_func::Item_func57,1788
  Item_func(Item_func::Item_func64,1942
  Item_func(Item_func::Item_func74,2204
  Item_func(Item_func::Item_func85,2506
  ~Item_func(Item_func::~Item_func96,2860
  virtual optimize_type select_optimize(Item_func::select_optimize103,3165
  virtual bool have_rev_func(Item_func::have_rev_func104,3239
  virtual Item *key_item(Item_func::key_item105,3290
  virtual const char *func_name(Item_func::func_name106,3343
  virtual bool const_item(Item_func::const_item107,3399
  inline Item **arguments(Item_func::arguments108,3462
  inline uint argument_count(Item_func::argument_count109,3513
  inline void remove_arguments(Item_func::remove_arguments110,3572
  inline bool get_arg0_date(Item_func::get_arg0_date115,3763
  inline bool get_arg0_time(Item_func::get_arg0_time119,3889
  bool is_null(Item_func::is_null123,3988
  unsigned int size_of(Item_func::size_of125,4074
class Item_real_func 130,4171
  Item_real_func(Item_real_func::Item_real_func133,4220
  Item_real_func(Item_real_func::Item_real_func134,4255
  Item_real_func(Item_real_func::Item_real_func135,4298
  Item_real_func(Item_real_func::Item_real_func136,4351
  longlong val_int(Item_real_func::val_int138,4437
  enum Item_result result_type Item_real_func::result_type139,4487
  void fix_length_and_dec(Item_real_func::fix_length_and_dec140,4551
  unsigned int size_of(Item_real_func::size_of141,4642
class Item_num_func 145,4699
  Item_num_func(Item_num_func::Item_num_func150,4786
  Item_num_func(Item_num_func::Item_num_func151,4853
  longlong val_int(Item_num_func::val_int153,4961
  enum Item_result result_type Item_num_func::result_type154,5011
  void fix_length_and_dec(Item_num_func::fix_length_and_dec155,5075
  bool is_null(Item_num_func::is_null156,5133
  unsigned int size_of(Item_num_func::size_of157,5187
class Item_num_op 161,5244
  Item_num_op(Item_num_op::Item_num_op166,5330
  void print(Item_num_op::print168,5436
  enum Item_result result_type Item_num_op::result_type169,5481
  void fix_length_and_dec(Item_num_op::fix_length_and_dec170,5545
  bool is_null(Item_num_op::is_null172,5648
  unsigned int size_of(Item_num_op::size_of173,5702
class Item_int_func 177,5759
  Item_int_func(Item_int_func::Item_int_func180,5807
  Item_int_func(Item_int_func::Item_int_func181,5857
  Item_int_func(Item_int_func::Item_int_func182,5915
  Item_int_func(Item_int_func::Item_int_func183,5983
  Item_int_func(Item_int_func::Item_int_func184,6061
  double val(Item_int_func::val185,6131
  enum Item_result result_type Item_int_func::result_type187,6208
  void fix_length_and_dec(Item_int_func::fix_length_and_dec188,6271
class Item_func_signed 192,6307
  Item_func_signed(Item_func_signed::Item_func_signed195,6362
  double val(Item_func_signed::val196,6411
  longlong val_int(Item_func_signed::val_int197,6453
  void fix_length_and_dec(Item_func_signed::fix_length_and_dec198,6505
class Item_func_unsigned 203,6593
  Item_func_unsigned(Item_func_unsigned::Item_func_unsigned206,6650
  double val(Item_func_unsigned::val207,6701
  longlong val_int(Item_func_unsigned::val_int208,6743
  void fix_length_and_dec(Item_func_unsigned::fix_length_and_dec209,6795
class Item_func_plus 214,6883
  Item_func_plus(Item_func_plus::Item_func_plus217,6934
  const char *func_name(Item_func_plus::func_name218,6989
class Item_func_minus 223,7079
  Item_func_minus(Item_func_minus::Item_func_minus226,7131
  const char *func_name(Item_func_minus::func_name227,7187
class Item_func_mul 234,7307
  Item_func_mul(Item_func_mul::Item_func_mul237,7357
  const char *func_name(Item_func_mul::func_name238,7411
class Item_func_div 244,7502
  Item_func_div(Item_func_div::Item_func_div247,7552
  const char *func_name(Item_func_div::func_name250,7644
class Item_func_mod 255,7726
  Item_func_mod(Item_func_mod::Item_func_mod258,7776
  const char *func_name(Item_func_mod::func_name261,7868
class Item_func_neg 266,7950
  Item_func_neg(Item_func_neg::Item_func_neg269,8002
  const char *func_name(Item_func_neg::func_name272,8086
class Item_func_abs 277,8168
  Item_func_abs(Item_func_abs::Item_func_abs280,8220
  const char *func_name(Item_func_abs::func_name281,8266
  enum Item_result result_type Item_func_abs::result_type284,8354
class Item_dec_func 291,8564
  Item_dec_func(Item_dec_func::Item_dec_func294,8618
  Item_dec_func(Item_dec_func::Item_dec_func295,8665
  void fix_length_and_dec(Item_dec_func::fix_length_and_dec296,8722
  inline double fix_result(Item_dec_func::fix_result301,8827
class Item_func_exp 314,9034
  Item_func_exp(Item_func_exp::Item_func_exp317,9086
  const char *func_name(Item_func_exp::func_name319,9148
class Item_func_ln 323,9203
  Item_func_ln(Item_func_ln::Item_func_ln326,9254
  const char *func_name(Item_func_ln::func_name328,9315
class Item_func_log 332,9369
  Item_func_log(Item_func_log::Item_func_log335,9421
  Item_func_log(Item_func_log::Item_func_log336,9467
  const char *func_name(Item_func_log::func_name338,9539
class Item_func_log2 342,9594
  Item_func_log2(Item_func_log2::Item_func_log2345,9647
  const char *func_name(Item_func_log2::func_name347,9710
class Item_func_log10 351,9766
  Item_func_log10(Item_func_log10::Item_func_log10354,9820
  const char *func_name(Item_func_log10::func_name356,9884
class Item_func_sqrt 360,9941
  Item_func_sqrt(Item_func_sqrt::Item_func_sqrt363,9994
  const char *func_name(Item_func_sqrt::func_name365,10057
class Item_func_pow 369,10113
  Item_func_pow(Item_func_pow::Item_func_pow372,10165
  const char *func_name(Item_func_pow::func_name374,10237
class Item_func_acos 378,10292
  Item_func_acos(Item_func_acos::Item_func_acos381,10346
  const char *func_name(Item_func_acos::func_name383,10409
class Item_func_asin 386,10464
  Item_func_asin(Item_func_asin::Item_func_asin389,10518
  const char *func_name(Item_func_asin::func_name391,10581
class Item_func_atan 394,10636
  Item_func_atan(Item_func_atan::Item_func_atan397,10690
  Item_func_atan(Item_func_atan::Item_func_atan398,10737
  const char *func_name(Item_func_atan::func_name400,10810
class Item_func_cos 403,10865
  Item_func_cos(Item_func_cos::Item_func_cos406,10918
  const char *func_name(Item_func_cos::func_name408,10980
class Item_func_sin 411,11034
  Item_func_sin(Item_func_sin::Item_func_sin414,11087
  const char *func_name(Item_func_sin::func_name416,11149
class Item_func_tan 419,11203
  Item_func_tan(Item_func_tan::Item_func_tan422,11256
  const char *func_name(Item_func_tan::func_name424,11318
class Item_func_integer 427,11372
  inline Item_func_integer(Item_func_integer::Item_func_integer430,11428
class Item_func_ceiling 435,11519
  Item_func_ceiling(Item_func_ceiling::Item_func_ceiling439,11624
  const char *func_name(Item_func_ceiling::func_name440,11678
class Item_func_floor 444,11758
  Item_func_floor(Item_func_floor::Item_func_floor447,11816
  const char *func_name(Item_func_floor::func_name448,11868
class Item_func_round 454,11985
  Item_func_round(Item_func_round::Item_func_round458,12057
  const char *func_name(Item_func_round::func_name460,12155
class Item_func_rand 466,12281
  Item_func_rand(Item_func_rand::Item_func_rand470,12363
  Item_func_rand(Item_func_rand::Item_func_rand471,12411
  const char *func_name(Item_func_rand::func_name473,12470
  bool const_item(Item_func_rand::const_item474,12521
  table_map used_tables(Item_func_rand::used_tables475,12561
class Item_func_sign 480,12654
  Item_func_sign(Item_func_sign::Item_func_sign483,12707
  const char *func_name(Item_func_sign::func_name484,12754
class Item_func_units 489,12832
  Item_func_units(Item_func_units::Item_func_units494,12920
  const char *func_name(Item_func_units::func_name497,13075
  void fix_length_and_dec(Item_func_units::fix_length_and_dec498,13124
  unsigned int size_of(Item_func_units::size_of499,13215
class Item_func_min_max 503,13272
  Item_func_min_max(Item_func_min_max::Item_func_min_max509,13384
  enum Item_result result_type Item_func_min_max::result_type515,13583
  unsigned int size_of(Item_func_min_max::size_of516,13644
  table_map not_null_tables(Item_func_min_max::not_null_tables517,13696
class Item_func_min 520,13750
  Item_func_min(Item_func_min::Item_func_min523,13806
  const char *func_name(Item_func_min::func_name524,13870
class Item_func_max 527,13926
  Item_func_max(Item_func_max::Item_func_max530,13982
  const char *func_name(Item_func_max::func_name531,14047
class Item_func_length 535,14107
  Item_func_length(Item_func_length::Item_func_length539,14178
  const char *func_name(Item_func_length::func_name541,14249
  void fix_length_and_dec(Item_func_length::fix_length_and_dec542,14302
  unsigned int size_of(Item_func_length::size_of543,14349
class Item_func_bit_length 546,14405
  Item_func_bit_length(Item_func_bit_length::Item_func_bit_length549,14467
  longlong val_int(Item_func_bit_length::val_int550,14523
  const char *func_name(Item_func_bit_length::func_name551,14586
class Item_func_char_length 554,14647
  Item_func_char_length(Item_func_char_length::Item_func_char_length558,14723
  const char *func_name(Item_func_char_length::func_name560,14799
  void fix_length_and_dec(Item_func_char_length::fix_length_and_dec561,14857
  unsigned int size_of(Item_func_char_length::size_of562,14904
class Item_func_locate 565,14960
  Item_func_locate(Item_func_locate::Item_func_locate569,15039
  Item_func_locate(Item_func_locate::Item_func_locate570,15098
  const char *func_name(Item_func_locate::func_name571,15167
  void fix_length_and_dec(Item_func_locate::fix_length_and_dec573,15242
  unsigned int size_of(Item_func_locate::size_of574,15303
class Item_func_field 578,15360
  Item_func_field(Item_func_field::Item_func_field583,15448
  ~Item_func_field(Item_func_field::~Item_func_field584,15524
  bool fix_fields(Item_func_field::fix_fields586,15584
  void update_used_tables(Item_func_field::update_used_tables591,15769
  const char *func_name(Item_func_field::func_name598,15963
  void fix_length_and_dec(Item_func_field::fix_length_and_dec599,16015
  unsigned int size_of(Item_func_field::size_of607,16282
class Item_func_ascii 611,16339
  Item_func_ascii(Item_func_ascii::Item_func_ascii615,16409
  const char *func_name(Item_func_ascii::func_name617,16479
  void fix_length_and_dec(Item_func_ascii::fix_length_and_dec618,16531
  unsigned int size_of(Item_func_ascii::size_of619,16577
class Item_func_ord 622,16633
  Item_func_ord(Item_func_ord::Item_func_ord626,16701
  const char *func_name(Item_func_ord::func_name628,16769
  unsigned int size_of(Item_func_ord::size_of629,16819
class Item_func_find_in_set 632,16875
  Item_func_find_in_set(Item_func_find_in_set::Item_func_find_in_set638,16999
  const char *func_name(Item_func_find_in_set::func_name640,17099
  unsigned int size_of(Item_func_find_in_set::size_of642,17186
class Item_func_bit:Item_func_bit647,17314
  Item_func_bit(Item_func_bit::Item_func_bit650,17366
  Item_func_bit(Item_func_bit::Item_func_bit651,17424
  void fix_length_and_dec(Item_func_bit::fix_length_and_dec652,17470
class Item_func_bit_or 655,17524
  Item_func_bit_or(Item_func_bit_or::Item_func_bit_or658,17579
  const char *func_name(Item_func_bit_or::func_name660,17662
class Item_func_bit_and 663,17714
  Item_func_bit_and(Item_func_bit_and::Item_func_bit_and666,17770
  const char *func_name(Item_func_bit_and::func_name668,17854
class Item_func_bit_count 671,17906
  Item_func_bit_count(Item_func_bit_count::Item_func_bit_count674,17964
  const char *func_name(Item_func_bit_count::func_name676,18038
  void fix_length_and_dec(Item_func_bit_count::fix_length_and_dec677,18094
class Item_func_shift_left 680,18144
  Item_func_shift_left(Item_func_shift_left::Item_func_shift_left683,18203
  const char *func_name(Item_func_shift_left::func_name685,18290
class Item_func_shift_right 688,18343
  Item_func_shift_right(Item_func_shift_right::Item_func_shift_right691,18403
  const char *func_name(Item_func_shift_right::func_name693,18491
class Item_func_bit_neg 696,18544
  Item_func_bit_neg(Item_func_bit_neg::Item_func_bit_neg699,18600
  const char *func_name(Item_func_bit_neg::func_name701,18672
class Item_func_set_last_insert_id 704,18724
  Item_func_set_last_insert_id(Item_func_set_last_insert_id::Item_func_set_last_insert_id707,18791
  const char *func_name(Item_func_set_last_insert_id::func_name709,18874
  void fix_length_and_dec(Item_func_set_last_insert_id::fix_length_and_dec710,18935
class Item_func_benchmark 713,19003
  Item_func_benchmark(Item_func_benchmark::Item_func_benchmark717,19082
  const char *func_name(Item_func_benchmark::func_name721,19217
  void fix_length_and_dec(Item_func_benchmark::fix_length_and_dec722,19273
  unsigned int size_of(Item_func_benchmark::size_of723,19333
class Item_udf_func 729,19410
  Item_udf_func(Item_udf_func::Item_udf_func735,19490
  Item_udf_func(Item_udf_func::Item_udf_func736,19555
  ~Item_udf_func(Item_udf_func::~Item_udf_func738,19646
  const char *func_name(Item_udf_func::func_name739,19668
  bool fix_fields(Item_udf_func::fix_fields740,19723
  Item_result result_type Item_udf_func::result_type747,19953
  table_map not_null_tables(Item_udf_func::not_null_tables748,20018
  unsigned int size_of(Item_udf_func::size_of749,20068
class Item_func_udf_float 753,20125
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float756,20184
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float757,20252
  ~Item_func_udf_float(Item_func_udf_float::~Item_func_udf_float759,20347
  longlong val_int(Item_func_udf_float::val_int760,20375
  void fix_length_and_dec(Item_func_udf_float::fix_length_and_dec763,20494
class Item_func_udf_int 767,20557
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int770,20613
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int771,20679
  ~Item_func_udf_int(Item_func_udf_int::~Item_func_udf_int773,20772
  double val(Item_func_udf_int::val775,20820
  enum Item_result result_type Item_func_udf_int::result_type777,20917
  void fix_length_and_dec(Item_func_udf_int::fix_length_and_dec778,20980
class Item_func_udf_str 782,21044
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str785,21100
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str786,21166
  ~Item_func_udf_str(Item_func_udf_str::~Item_func_udf_str788,21259
  double val(Item_func_udf_str::val790,21314
  longlong val_int(Item_func_udf_str::val_int795,21423
  enum Item_result result_type Item_func_udf_str::result_type800,21564
class Item_func_udf_float 806,21720
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float809,21780
  Item_func_udf_float(Item_func_udf_float::Item_func_udf_float810,21842
  ~Item_func_udf_float(Item_func_udf_float::~Item_func_udf_float811,21926
  double val(Item_func_udf_float::val812,21954
class Item_func_udf_int 816,21990
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int819,22046
  Item_func_udf_int(Item_func_udf_int::Item_func_udf_int820,22105
  ~Item_func_udf_int(Item_func_udf_int::~Item_func_udf_int821,22186
  longlong val_int(Item_func_udf_int::val_int822,22212
class Item_func_udf_str 826,22252
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str829,22304
  Item_func_udf_str(Item_func_udf_str::Item_func_udf_str830,22359
  ~Item_func_udf_str(Item_func_udf_str::~Item_func_udf_str831,22437
  String *val_str(Item_func_udf_str::val_str832,22463
  double val(Item_func_udf_str::val833,22519
  longlong val_int(Item_func_udf_str::val_int834,22564
  enum Item_result result_type Item_func_udf_str::result_type835,22613
  void fix_length_and_dec(Item_func_udf_str::fix_length_and_dec836,22679
class Item_func_get_lock 850,22911
  Item_func_get_lock(Item_func_get_lock::Item_func_get_lock854,22985
  const char *func_name(Item_func_get_lock::func_name856,23068
  void fix_length_and_dec(Item_func_get_lock::fix_length_and_dec857,23123
  unsigned int size_of(Item_func_get_lock::size_of858,23182
class Item_func_release_lock 861,23238
  Item_func_release_lock(Item_func_release_lock::Item_func_release_lock865,23316
  const char *func_name(Item_func_release_lock::func_name867,23393
  void fix_length_and_dec(Item_func_release_lock::fix_length_and_dec868,23452
  unsigned int size_of(Item_func_release_lock::size_of869,23511
class Item_master_pos_wait 874,23596
  Item_master_pos_wait(Item_master_pos_wait::Item_master_pos_wait878,23672
  Item_master_pos_wait(Item_master_pos_wait::Item_master_pos_wait879,23735
  const char *func_name(Item_master_pos_wait::func_name881,23830
  void fix_length_and_dec(Item_master_pos_wait::fix_length_and_dec882,23892
  unsigned int size_of(Item_master_pos_wait::size_of883,23952
class Item_func_set_user_var 891,24077
  Item_func_set_user_var(Item_func_set_user_var::Item_func_set_user_var900,24266
  enum Item_result result_type Item_func_set_user_var::result_type907,24533
  const char *func_name(Item_func_set_user_var::func_name911,24718
  unsigned int size_of(Item_func_set_user_var::size_of912,24777
class Item_func_get_user_var 916,24834
  Item_func_get_user_var(Item_func_get_user_var::Item_func_get_user_var922,24940
  const char *func_name(Item_func_get_user_var::func_name930,25174
  table_map used_tables(Item_func_get_user_var::used_tables932,25260
  unsigned int size_of(Item_func_get_user_var::size_of935,25392
class Item_func_inet_aton 939,25449
   Item_func_inet_aton(Item_func_inet_aton::Item_func_inet_aton942,25508
   const char *func_name(Item_func_inet_aton::func_name944,25584
   void fix_length_and_dec(Item_func_inet_aton::fix_length_and_dec945,25641
class Item_func_match 952,25773
  Item_func_match(Item_func_match::Item_func_match965,26000
  ~Item_func_match(Item_func_match::~Item_func_match969,26159
  enum Functype functype(Item_func_match::functype982,26421
  void update_used_tables(Item_func_match::update_used_tables983,26474
  table_map not_null_tables(Item_func_match::not_null_tables984,26505
  longlong val_int(Item_func_match::val_int987,26660
  unsigned int size_of(Item_func_match::size_of992,26776
class Item_func_match_nl 996,26833
  Item_func_match_nl(Item_func_match_nl::Item_func_match_nl999,26892
  const char *func_name(Item_func_match_nl::func_name1002,26981
class Item_func_match_bool 1006,27041
  Item_func_match_bool(Item_func_match_bool::Item_func_match_bool1009,27102
  const char *func_name(Item_func_match_bool::func_name1012,27195
enum Item_cast1017,27278
  ITEM_CAST_BINARY,Item_cast::ITEM_CAST_BINARY1019,27295
  ITEM_CAST_BINARY, ITEM_CAST_SIGNED_INT,Item_cast::ITEM_CAST_SIGNED_INT1019,27295
  ITEM_CAST_BINARY, ITEM_CAST_SIGNED_INT, ITEM_CAST_UNSIGNED_INT,Item_cast::ITEM_CAST_UNSIGNED_INT1019,27295
  ITEM_CAST_DATE,Item_cast::ITEM_CAST_DATE1020,27361
  ITEM_CAST_DATE, ITEM_CAST_TIME,Item_cast::ITEM_CAST_TIME1020,27361
  ITEM_CAST_DATE, ITEM_CAST_TIME, ITEM_CAST_DATETIME,Item_cast::ITEM_CAST_DATETIME1020,27361
  ITEM_CAST_DATE, ITEM_CAST_TIME, ITEM_CAST_DATETIME, ITEM_CAST_CHARItem_cast::ITEM_CAST_CHAR1020,27361
class Item_func_bit_xor 1026,27490
  Item_func_bit_xor(Item_func_bit_xor::Item_func_bit_xor1029,27547
  const char *func_name(Item_func_bit_xor::func_name1031,27631
class Item_func_is_free_lock 1034,27683
  Item_func_is_free_lock(Item_func_is_free_lock::Item_func_is_free_lock1038,27760
  const char *func_name(Item_func_is_free_lock::func_name1040,27837
  void fix_length_and_dec(Item_func_is_free_lock::fix_length_and_dec1041,27894
  unsigned int size_of(Item_func_is_free_lock::size_of1042,27965

sql/item_strfunc.h,10740
class Item_str_func 24,907
  Item_str_func(Item_str_func::Item_str_func27,955
  Item_str_func(Item_str_func::Item_str_func28,1014
  Item_str_func(Item_str_func::Item_str_func29,1080
  Item_str_func(Item_str_func::Item_str_func30,1157
  Item_str_func(Item_str_func::Item_str_func31,1244
  Item_str_func(Item_str_func::Item_str_func32,1340
  Item_str_func(Item_str_func::Item_str_func33,1447
  enum Item_result result_type Item_str_func::result_type36,1563
  unsigned int size_of(Item_str_func::size_of38,1661
class Item_func_md5 42,1718
  Item_func_md5(Item_func_md5::Item_func_md546,1790
  const char *func_name(Item_func_md5::func_name49,1894
  unsigned int size_of(Item_func_md5::size_of50,1944
class Item_func_sha 54,2001
  Item_func_sha(Item_func_sha::Item_func_sha57,2053
  const char *func_name(Item_func_sha::func_name60,2169
class Item_func_aes_encrypt 63,2224
  Item_func_aes_encrypt(Item_func_aes_encrypt::Item_func_aes_encrypt66,2284
  const char *func_name(Item_func_aes_encrypt::func_name69,2407
class Item_func_aes_decrypt 72,2469
  Item_func_aes_decrypt(Item_func_aes_decrypt::Item_func_aes_decrypt75,2530
  const char *func_name(Item_func_aes_decrypt::func_name78,2653
class Item_func_concat 82,2716
  Item_func_concat(Item_func_concat::Item_func_concat86,2791
  Item_func_concat(Item_func_concat::Item_func_concat87,2852
  const char *func_name(Item_func_concat::func_name90,2969
  unsigned int size_of(Item_func_concat::size_of91,3022
class Item_func_concat_ws 94,3078
  Item_func_concat_ws(Item_func_concat_ws::Item_func_concat_ws100,3176
  ~Item_func_concat_ws(Item_func_concat_ws::~Item_func_concat_ws102,3266
  bool fix_fields(Item_func_concat_ws::fix_fields106,3400
  const char *func_name(Item_func_concat_ws::func_name112,3595
class Item_func_reverse 115,3655
  Item_func_reverse(Item_func_reverse::Item_func_reverse118,3711
class Item_func_replace 124,3824
  Item_func_replace(Item_func_replace::Item_func_replace128,3911
  const char *func_name(Item_func_replace::func_name132,4065
  unsigned int size_of(Item_func_replace::size_of133,4119
class Item_func_insert 137,4176
  Item_func_insert(Item_func_insert::Item_func_insert141,4251
  const char *func_name(Item_func_insert::func_name145,4426
  unsigned int size_of(Item_func_insert::size_of146,4479
class Item_str_conv 150,4536
  Item_str_conv(Item_str_conv::Item_str_conv153,4588
  void fix_length_and_dec(Item_str_conv::fix_length_and_dec154,4640
class Item_func_lcase 158,4711
  Item_func_lcase(Item_func_lcase::Item_func_lcase161,4765
  const char *func_name(Item_func_lcase::func_name163,4848
class Item_func_ucase 166,4904
  Item_func_ucase(Item_func_ucase::Item_func_ucase169,4958
  const char *func_name(Item_func_ucase::func_name171,5041
class Item_func_left 175,5098
  Item_func_left(Item_func_left::Item_func_left178,5151
  const char *func_name(Item_func_left::func_name181,5266
class Item_func_right 185,5322
  Item_func_right(Item_func_right::Item_func_right189,5396
  const char *func_name(Item_func_right::func_name192,5512
  unsigned int size_of(Item_func_right::size_of193,5564
class Item_func_substr 197,5621
  Item_func_substr(Item_func_substr::Item_func_substr201,5696
  Item_func_substr(Item_func_substr::Item_func_substr202,5755
  const char *func_name(Item_func_substr::func_name205,5882
  unsigned int size_of(Item_func_substr::size_of206,5935
class Item_func_substr_index 210,5992
  Item_func_substr_index(Item_func_substr_index::Item_func_substr_index214,6073
  void fix_length_and_dec(Item_func_substr_index::fix_length_and_dec216,6177
  const char *func_name(Item_func_substr_index::func_name217,6242
  unsigned int size_of(Item_func_substr_index::size_of218,6301
class Item_func_ltrim 222,6358
  Item_func_ltrim(Item_func_ltrim::Item_func_ltrim226,6432
  void fix_length_and_dec(Item_func_ltrim::fix_length_and_dec228,6519
  const char *func_name(Item_func_ltrim::func_name229,6584
  unsigned int size_of(Item_func_ltrim::size_of230,6636
class Item_func_rtrim 234,6693
  Item_func_rtrim(Item_func_rtrim::Item_func_rtrim238,6767
  void fix_length_and_dec(Item_func_rtrim::fix_length_and_dec240,6854
  const char *func_name(Item_func_rtrim::func_name241,6919
  unsigned int size_of(Item_func_rtrim::size_of242,6971
class Item_func_trim 245,7027
  Item_func_trim(Item_func_trim::Item_func_trim249,7100
  void fix_length_and_dec(Item_func_trim::fix_length_and_dec251,7186
  const char *func_name(Item_func_trim::func_name252,7251
  unsigned int size_of(Item_func_trim::size_of253,7302
class Item_func_password 257,7359
  Item_func_password(Item_func_password::Item_func_password261,7438
  void fix_length_and_dec(Item_func_password::fix_length_and_dec263,7518
  const char *func_name(Item_func_password::func_name264,7567
  unsigned int size_of(Item_func_password::size_of265,7622
class Item_func_des_encrypt 268,7678
  Item_func_des_encrypt(Item_func_des_encrypt::Item_func_des_encrypt272,7758
  Item_func_des_encrypt(Item_func_des_encrypt::Item_func_des_encrypt273,7812
  void fix_length_and_dec(Item_func_des_encrypt::fix_length_and_dec275,7906
  const char *func_name(Item_func_des_encrypt::func_name277,7990
  unsigned int size_of(Item_func_des_encrypt::size_of278,8048
class Item_func_des_decrypt 281,8104
  Item_func_des_decrypt(Item_func_des_decrypt::Item_func_des_decrypt285,8184
  Item_func_des_decrypt(Item_func_des_decrypt::Item_func_des_decrypt286,8238
  void fix_length_and_dec(Item_func_des_decrypt::fix_length_and_dec288,8332
  const char *func_name(Item_func_des_decrypt::func_name289,8412
  unsigned int size_of(Item_func_des_decrypt::size_of290,8470
class Item_func_encrypt 293,8526
  Item_func_encrypt(Item_func_encrypt::Item_func_encrypt297,8602
  Item_func_encrypt(Item_func_encrypt::Item_func_encrypt298,8652
  void fix_length_and_dec(Item_func_encrypt::fix_length_and_dec300,8742
  unsigned int size_of(Item_func_encrypt::size_of301,8805
class Item_func_encode 306,8885
  Item_func_encode(Item_func_encode::Item_func_encode311,8975
  unsigned int size_of(Item_func_encode::size_of315,9114
class Item_func_decode 318,9170
  Item_func_decode(Item_func_decode::Item_func_decode321,9228
class Item_func_database 326,9331
  Item_func_database(Item_func_database::Item_func_database329,9388
  void fix_length_and_dec(Item_func_database::fix_length_and_dec331,9443
  const char *func_name(Item_func_database::func_name332,9503
class Item_func_user 335,9562
  Item_func_user(Item_func_user::Item_func_user338,9615
  void fix_length_and_dec(Item_func_user::fix_length_and_dec340,9666
  const char *func_name(Item_func_user::func_name341,9745
class Item_func_soundex 345,9801
  Item_func_soundex(Item_func_soundex::Item_func_soundex349,9877
  const char *func_name(Item_func_soundex::func_name352,9985
  unsigned int size_of(Item_func_soundex::size_of353,10039
class Item_func_elt 357,10096
  Item_func_elt(Item_func_elt::Item_func_elt362,10163
  ~Item_func_elt(Item_func_elt::~Item_func_elt363,10237
  bool fix_fields(Item_func_elt::fix_fields367,10343
  const char *func_name(Item_func_elt::func_name374,10586
  unsigned int size_of(Item_func_elt::size_of375,10636
class Item_func_make_set 379,10693
  Item_func_make_set(Item_func_make_set::Item_func_make_set385,10783
  ~Item_func_make_set(Item_func_make_set::~Item_func_make_set386,10862
  bool fix_fields(Item_func_make_set::fix_fields388,10935
  const char *func_name(Item_func_make_set::func_name395,11178
  unsigned int size_of(Item_func_make_set::size_of396,11233
class Item_func_format 400,11290
  void fix_length_and_dec(Item_func_format::fix_length_and_dec406,11431
  const char *func_name(Item_func_format::func_name410,11545
  unsigned int size_of(Item_func_format::size_of411,11598
class Item_func_char 415,11655
  Item_func_char(Item_func_char::Item_func_char418,11708
  void fix_length_and_dec(Item_func_char::fix_length_and_dec420,11796
  const char *func_name(Item_func_char::func_name421,11873
class Item_func_repeat 425,11929
  Item_func_repeat(Item_func_repeat::Item_func_repeat429,12004
  const char *func_name(Item_func_repeat::func_name432,12133
  unsigned int size_of(Item_func_repeat::size_of433,12186
class Item_func_rpad 437,12243
  Item_func_rpad(Item_func_rpad::Item_func_rpad441,12326
  const char *func_name(Item_func_rpad::func_name445,12473
  unsigned int size_of(Item_func_rpad::size_of446,12524
class Item_func_lpad 450,12581
  Item_func_lpad(Item_func_lpad::Item_func_lpad454,12664
  const char *func_name(Item_func_lpad::func_name458,12811
  unsigned int size_of(Item_func_lpad::size_of459,12862
class Item_func_conv 463,12919
  Item_func_conv(Item_func_conv::Item_func_conv466,12972
  const char *func_name(Item_func_conv::func_name467,13039
  void fix_length_and_dec(Item_func_conv::fix_length_and_dec469,13119
class Item_func_hex 473,13183
  Item_func_hex(Item_func_hex::Item_func_hex477,13255
  const char *func_name(Item_func_hex::func_name478,13301
  void fix_length_and_dec(Item_func_hex::fix_length_and_dec480,13380
  unsigned int size_of(Item_func_hex::size_of481,13458
class Item_func_binary 485,13515
  Item_func_binary(Item_func_binary::Item_func_binary488,13570
  const char *func_name(Item_func_binary::func_name489,13619
  String *val_str(Item_func_binary::val_str490,13672
  void fix_length_and_dec(Item_func_binary::fix_length_and_dec496,13799
  void print(Item_func_binary::print497,13873
class Item_load_file 501,13923
  Item_load_file(Item_load_file::Item_load_file505,13996
  const char *func_name(Item_load_file::func_name507,14072
  void fix_length_and_dec(Item_load_file::fix_length_and_dec508,14128
  unsigned int size_of(Item_load_file::size_of510,14212
class Item_func_export_set:Item_func_export_set514,14269
  Item_func_export_set(Item_func_export_set::Item_func_export_set517,14329
  Item_func_export_set(Item_func_export_set::Item_func_export_set518,14402
  Item_func_export_set(Item_func_export_set::Item_func_export_set519,14485
  const char *func_name(Item_func_export_set::func_name522,14640
 class Item_func_inet_ntoa 525,14701
  Item_func_inet_ntoa(Item_func_inet_ntoa::Item_func_inet_ntoa528,14761
  const char *func_name(Item_func_inet_ntoa::func_name532,14854
  void fix_length_and_dec(Item_func_inet_ntoa::fix_length_and_dec533,14910
class Item_func_quote 536,14978
  Item_func_quote(Item_func_quote::Item_func_quote539,15032
  const char *func_name(Item_func_quote::func_name540,15080
  void fix_length_and_dec(Item_func_quote::fix_length_and_dec542,15161

sql/item_sum.h,10798
class Item_sum 26,916
  enum Sumfunctype Item_sum::Sumfunctype29,967
  enum Sumfunctype {COUNT_FUNC,Item_sum::Sumfunctype::COUNT_FUNC29,967
  enum Sumfunctype {COUNT_FUNC,COUNT_DISTINCT_FUNC,Item_sum::Sumfunctype::COUNT_DISTINCT_FUNC29,967
  enum Sumfunctype {COUNT_FUNC,COUNT_DISTINCT_FUNC,SUM_FUNC,Item_sum::Sumfunctype::SUM_FUNC29,967
  enum Sumfunctype {COUNT_FUNC,COUNT_DISTINCT_FUNC,SUM_FUNC,AVG_FUNC,Item_sum::Sumfunctype::AVG_FUNC29,967
  enum Sumfunctype {COUNT_FUNC,COUNT_DISTINCT_FUNC,SUM_FUNC,AVG_FUNC,MIN_FUNC,Item_sum::Sumfunctype::MIN_FUNC29,967
		    MAX_FUNC,Item_sum::Sumfunctype::MAX_FUNC30,1046
		    MAX_FUNC, UNIQUE_USERS_FUNC,Item_sum::Sumfunctype::UNIQUE_USERS_FUNC30,1046
		    MAX_FUNC, UNIQUE_USERS_FUNC,STD_FUNC,Item_sum::Sumfunctype::STD_FUNC30,1046
		    MAX_FUNC, UNIQUE_USERS_FUNC,STD_FUNC,SUM_BIT_FUNC,Item_sum::Sumfunctype::SUM_BIT_FUNC30,1046
		    UDF_SUM_FUNC Item_sum::Sumfunctype::UDF_SUM_FUNC31,1103
  Item_sum(Item_sum::Item_sum37,1233
  Item_sum(Item_sum::Item_sum38,1297
  Item_sum(Item_sum::Item_sum45,1415
  ~Item_sum(Item_sum::~Item_sum53,1583
  enum Type type(Item_sum::type54,1617
  virtual bool keep_field_type(Item_sum::keep_field_type71,2274
  virtual void fix_length_and_dec(Item_sum::fix_length_and_dec72,2331
  virtual const char *func_name(Item_sum::func_name73,2399
  virtual Item *result_item(Item_sum::result_item74,2455
  table_map used_tables(Item_sum::used_tables76,2532
  bool const_item(Item_sum::const_item77,2606
  bool is_null(Item_sum::is_null78,2646
  void update_used_tables(Item_sum::update_used_tables79,2686
  void no_rows_in_result(Item_sum::no_rows_in_result83,2816
  virtual bool setup(Item_sum::setup84,2856
  unsigned int size_of(Item_sum::size_of85,2899
class Item_sum_num 89,2956
  Item_sum_num(Item_sum_num::Item_sum_num92,3002
  Item_sum_num(Item_sum_num::Item_sum_num93,3034
  Item_sum_num(Item_sum_num::Item_sum_num94,3088
  Item_sum_num(Item_sum_num::Item_sum_num95,3139
  longlong val_int(Item_sum_num::val_int97,3240
  unsigned int size_of(Item_sum_num::size_of100,3365
class Item_sum_int 104,3422
  Item_sum_int(Item_sum_int::Item_sum_int107,3472
  Item_sum_int(Item_sum_int::Item_sum_int108,3530
  double val(Item_sum_int::val109,3586
  enum Item_result result_type Item_sum_int::result_type111,3663
  unsigned int size_of(Item_sum_int::size_of112,3726
  void fix_length_and_dec(Item_sum_int::fix_length_and_dec113,3778
class Item_sum_sum 118,3869
  void fix_length_and_dec(Item_sum_sum::fix_length_and_dec121,3925
  Item_sum_sum(Item_sum_sum::Item_sum_sum124,3993
  enum Sumfunctype sum_func Item_sum_sum::sum_func125,4060
  void no_rows_in_result(Item_sum_sum::no_rows_in_result131,4207
  const char *func_name(Item_sum_sum::func_name132,4237
  unsigned int size_of(Item_sum_sum::size_of133,4287
class Item_sum_count 137,4344
  Item_sum_count(Item_sum_count::Item_sum_count143,4447
  table_map used_tables(Item_sum_count::used_tables146,4555
  bool const_item(Item_sum_count::const_item147,4616
  enum Sumfunctype sum_func Item_sum_count::sum_func148,4672
  void no_rows_in_result(Item_sum_count::no_rows_in_result150,4748
  void make_const(Item_sum_count::make_const152,4802
  const char *func_name(Item_sum_count::func_name156,4948
  unsigned int size_of(Item_sum_count::size_of157,5000
class Item_sum_count_distinct 163,5081
  Item_sum_count_distinct(Item_sum_count_distinct::Item_sum_count_distinct195,6150
  table_map used_tables(Item_sum_count_distinct::used_tables201,6364
  enum Sumfunctype sum_func Item_sum_count_distinct::sum_func202,6425
  void reset_field(Item_sum_count_distinct::reset_field206,6546
  void update_field(Item_sum_count_distinct::update_field207,6596
  const char *func_name(Item_sum_count_distinct::func_name208,6648
  void no_rows_in_result(Item_sum_count_distinct::no_rows_in_result210,6733
  unsigned int size_of(Item_sum_count_distinct::size_of211,6763
class Item_avg_field 219,6893
  enum Type type(Item_avg_field::type224,7004
  longlong val_int(Item_avg_field::val_int226,7072
  bool is_null(Item_avg_field::is_null227,7122
  void fix_length_and_dec(Item_avg_field::fix_length_and_dec230,7246
  unsigned int size_of(Item_avg_field::size_of231,7277
class Item_sum_avg 235,7334
  void fix_length_and_dec(Item_sum_avg::fix_length_and_dec237,7376
  Item_sum_avg(Item_sum_avg::Item_sum_avg243,7480
  enum Sumfunctype sum_func Item_sum_avg::sum_func244,7547
  Item *result_item(Item_sum_avg::result_item250,7694
  void no_rows_in_result(Item_sum_avg::no_rows_in_result252,7767
  const char *func_name(Item_sum_avg::func_name253,7797
  unsigned int size_of(Item_sum_avg::size_of254,7847
class Item_std_field 259,7924
  enum Type type(Item_std_field::type264,8035
  longlong val_int(Item_std_field::val_int266,8103
  bool is_null(Item_std_field::is_null268,8181
  void fix_length_and_dec(Item_std_field::fix_length_and_dec270,8277
  unsigned int size_of(Item_std_field::size_of271,8308
class Item_sum_std 274,8364
  void fix_length_and_dec(Item_sum_std::fix_length_and_dec279,8457
  Item_sum_std(Item_sum_std::Item_sum_std282,8527
  enum Sumfunctype sum_func Item_sum_std::sum_func283,8594
  Item *result_item(Item_sum_std::result_item289,8743
  const char *func_name(Item_sum_std::func_name291,8816
  unsigned int size_of(Item_sum_std::size_of292,8866
class Item_sum_hybrid 298,8991
  Item_sum_hybrid(Item_sum_hybrid::Item_sum_hybrid309,9188
  table_map used_tables(Item_sum_hybrid::used_tables313,9358
  bool const_item(Item_sum_hybrid::const_item314,9419
  void reset(Item_sum_hybrid::reset316,9476
  void make_const(Item_sum_hybrid::make_const328,9666
  bool keep_field_type(Item_sum_hybrid::keep_field_type329,9710
  enum Item_result result_type Item_sum_hybrid::result_type330,9759
  unsigned int size_of(Item_sum_hybrid::size_of335,9952
class Item_sum_min 339,10009
  Item_sum_min(Item_sum_min::Item_sum_min342,10062
  enum Sumfunctype sum_func Item_sum_min::sum_func343,10125
  const char *func_name(Item_sum_min::func_name346,10196
  unsigned int size_of(Item_sum_min::size_of347,10246
class Item_sum_max 351,10303
  Item_sum_max(Item_sum_max::Item_sum_max354,10356
  enum Sumfunctype sum_func Item_sum_max::sum_func355,10420
  const char *func_name(Item_sum_max::func_name358,10491
  unsigned int size_of(Item_sum_max::size_of359,10541
class Item_sum_bit 363,10598
  Item_sum_bit(Item_sum_bit::Item_sum_bit369,10689
  enum Sumfunctype sum_func Item_sum_bit::sum_func371,10809
  unsigned int size_of(Item_sum_bit::size_of376,10952
  void fix_length_and_dec(Item_sum_bit::fix_length_and_dec377,11004
class Item_sum_or 382,11112
  Item_sum_or(Item_sum_or::Item_sum_or385,11161
  const char *func_name(Item_sum_or::func_name387,11238
  unsigned int size_of(Item_sum_or::size_of388,11291
class Item_sum_and 392,11348
  Item_sum_and(Item_sum_and::Item_sum_and395,11398
  const char *func_name(Item_sum_and::func_name397,11485
  unsigned int size_of(Item_sum_and::size_of398,11539
class Item_udf_sum 406,11648
  Item_udf_sum(Item_udf_sum::Item_udf_sum412,11726
  Item_udf_sum(Item_udf_sum::Item_udf_sum413,11804
  ~Item_udf_sum(Item_udf_sum::~Item_udf_sum416,11914
  const char *func_name(Item_udf_sum::func_name417,11935
  bool fix_fields(Item_udf_sum::fix_fields418,11990
  enum Sumfunctype sum_func Item_udf_sum::sum_func422,12126
  virtual bool have_field_update(Item_udf_sum::have_field_update423,12188
  void reset_field(Item_udf_sum::reset_field427,12278
  void update_field(Item_udf_sum::update_field428,12303
  unsigned int size_of(Item_udf_sum::size_of429,12329
class Item_sum_udf_float 433,12386
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float436,12443
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float437,12509
  ~Item_sum_udf_float(Item_sum_udf_float::~Item_sum_udf_float439,12602
  longlong val_int(Item_sum_udf_float::val_int440,12629
  void fix_length_and_dec(Item_sum_udf_float::fix_length_and_dec443,12746
class Item_sum_udf_int 447,12809
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int450,12863
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int451,12927
  ~Item_sum_udf_int(Item_sum_udf_int::~Item_sum_udf_int453,13018
  double val(Item_sum_udf_int::val455,13065
  enum Item_result result_type Item_sum_udf_int::result_type457,13160
  void fix_length_and_dec(Item_sum_udf_int::fix_length_and_dec458,13223
class Item_sum_udf_str 462,13287
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str465,13341
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str466,13405
  ~Item_sum_udf_str(Item_sum_udf_str::~Item_sum_udf_str468,13496
  double val(Item_sum_udf_str::val470,13550
  longlong val_int(Item_sum_udf_str::val_int475,13659
  enum Item_result result_type Item_sum_udf_str::result_type480,13800
class Item_sum_udf_float 486,13956
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float489,14013
  Item_sum_udf_float(Item_sum_udf_float::Item_sum_udf_float490,14072
  ~Item_sum_udf_float(Item_sum_udf_float::~Item_sum_udf_float491,14149
  enum Sumfunctype sum_func Item_sum_udf_float::sum_func492,14176
  double val(Item_sum_udf_float::val493,14238
  void reset(Item_sum_udf_float::reset494,14269
  bool add(Item_sum_udf_float::add495,14287
  void update_field(Item_sum_udf_float::update_field496,14316
class Item_sum_udf_int 500,14346
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int503,14400
  Item_sum_udf_int(Item_sum_udf_int::Item_sum_udf_int504,14457
  ~Item_sum_udf_int(Item_sum_udf_int::~Item_sum_udf_int505,14532
  enum Sumfunctype sum_func Item_sum_udf_int::sum_func506,14557
  longlong val_int(Item_sum_udf_int::val_int507,14619
  double val(Item_sum_udf_int::val508,14654
  void reset(Item_sum_udf_int::reset509,14683
  bool add(Item_sum_udf_int::add510,14701
  void update_field(Item_sum_udf_int::update_field511,14730
class Item_sum_udf_str 515,14760
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str518,14814
  Item_sum_udf_str(Item_sum_udf_str::Item_sum_udf_str519,14871
  ~Item_sum_udf_str(Item_sum_udf_str::~Item_sum_udf_str520,14947
  String *val_str(Item_sum_udf_str::val_str521,14972
  double val(Item_sum_udf_str::val522,15028
  longlong val_int(Item_sum_udf_str::val_int523,15073
  enum Item_result result_type Item_sum_udf_str::result_type524,15122
  void fix_length_and_dec(Item_sum_udf_str::fix_length_and_dec525,15188
  enum Sumfunctype sum_func Item_sum_udf_str::sum_func526,15248
  void reset(Item_sum_udf_str::reset527,15310
  bool add(Item_sum_udf_str::add528,15328
  void update_field(Item_sum_udf_str::update_field529,15357

sql/item_timefunc.h,11617
class Item_func_period_add 24,897
  Item_func_period_add(Item_func_period_add::Item_func_period_add27,956
  const char *func_name(Item_func_period_add::func_name29,1041
  void fix_length_and_dec(Item_func_period_add::fix_length_and_dec30,1098
class Item_func_period_diff 34,1149
  Item_func_period_diff(Item_func_period_diff::Item_func_period_diff37,1209
  const char *func_name(Item_func_period_diff::func_name39,1295
  void fix_length_and_dec(Item_func_period_diff::fix_length_and_dec40,1353
class Item_func_to_days 44,1416
  Item_func_to_days(Item_func_to_days::Item_func_to_days47,1472
  const char *func_name(Item_func_to_days::func_name49,1544
  void fix_length_and_dec(Item_func_to_days::fix_length_and_dec50,1598
class Item_func_dayofmonth 54,1675
  Item_func_dayofmonth(Item_func_dayofmonth::Item_func_dayofmonth57,1734
  const char *func_name(Item_func_dayofmonth::func_name59,1809
  void fix_length_and_dec(Item_func_dayofmonth::fix_length_and_dec60,1866
class Item_func_month 64,1943
  Item_func_month(Item_func_month::Item_func_month67,1993
  double val(Item_func_month::val69,2059
  String *val_str(Item_func_month::val_str70,2122
  const char *func_name(Item_func_month::func_name71,2206
  enum Item_result result_type Item_func_month::result_type72,2258
  void fix_length_and_dec(Item_func_month::fix_length_and_dec73,2321
class Item_func_monthname 77,2398
  Item_func_monthname(Item_func_monthname::Item_func_monthname80,2458
  const char *func_name(Item_func_monthname::func_name81,2512
  enum Item_result result_type Item_func_monthname::result_type83,2600
  void fix_length_and_dec(Item_func_monthname::fix_length_and_dec84,2666
class Item_func_dayofyear 88,2744
  Item_func_dayofyear(Item_func_dayofyear::Item_func_dayofyear91,2802
  const char *func_name(Item_func_dayofyear::func_name93,2876
  void fix_length_and_dec(Item_func_dayofyear::fix_length_and_dec94,2932
class Item_func_hour 98,3009
  Item_func_hour(Item_func_hour::Item_func_hour101,3062
  const char *func_name(Item_func_hour::func_name103,3131
  void fix_length_and_dec(Item_func_hour::fix_length_and_dec104,3182
class Item_func_minute 108,3259
  Item_func_minute(Item_func_minute::Item_func_minute111,3314
  const char *func_name(Item_func_minute::func_name113,3385
  void fix_length_and_dec(Item_func_minute::fix_length_and_dec114,3438
class Item_func_quarter 118,3515
  Item_func_quarter(Item_func_quarter::Item_func_quarter121,3571
  const char *func_name(Item_func_quarter::func_name123,3643
  void fix_length_and_dec(Item_func_quarter::fix_length_and_dec124,3697
class Item_func_second 128,3774
  Item_func_second(Item_func_second::Item_func_second131,3829
  const char *func_name(Item_func_second::func_name133,3900
  void fix_length_and_dec(Item_func_second::fix_length_and_dec134,3953
class Item_func_week 138,4030
  Item_func_week(Item_func_week::Item_func_week141,4083
  const char *func_name(Item_func_week::func_name143,4162
  void fix_length_and_dec(Item_func_week::fix_length_and_dec144,4213
class Item_func_yearweek 147,4289
  Item_func_yearweek(Item_func_yearweek::Item_func_yearweek150,4346
  const char *func_name(Item_func_yearweek::func_name152,4429
  void fix_length_and_dec(Item_func_yearweek::fix_length_and_dec153,4484
class Item_func_year 157,4561
  Item_func_year(Item_func_year::Item_func_year160,4614
  const char *func_name(Item_func_year::func_name162,4683
  void fix_length_and_dec(Item_func_year::fix_length_and_dec163,4734
class Item_func_weekday 167,4811
  Item_func_weekday(Item_func_weekday::Item_func_weekday171,4881
  double val(Item_func_weekday::val174,4988
  String *val_str(Item_func_weekday::val_str175,5034
  const char *func_name(Item_func_weekday::func_name176,5118
  enum Item_result result_type Item_func_weekday::result_type177,5172
  void fix_length_and_dec(Item_func_weekday::fix_length_and_dec178,5235
  unsigned int size_of(Item_func_weekday::size_of179,5307
class Item_func_dayname 182,5363
  Item_func_dayname(Item_func_dayname::Item_func_dayname185,5424
  const char *func_name(Item_func_dayname::func_name186,5480
  enum Item_result result_type Item_func_dayname::result_type188,5566
  void fix_length_and_dec(Item_func_dayname::fix_length_and_dec189,5632
class Item_func_unix_timestamp 193,5709
  Item_func_unix_timestamp(Item_func_unix_timestamp::Item_func_unix_timestamp197,5788
  Item_func_unix_timestamp(Item_func_unix_timestamp::Item_func_unix_timestamp198,5837
  const char *func_name(Item_func_unix_timestamp::func_name200,5916
  void fix_length_and_dec(Item_func_unix_timestamp::fix_length_and_dec201,5972
  unsigned int size_of(Item_func_unix_timestamp::size_of205,6039
class Item_func_time_to_sec 209,6096
  Item_func_time_to_sec(Item_func_time_to_sec::Item_func_time_to_sec212,6156
  const char *func_name(Item_func_time_to_sec::func_name214,6238
  void fix_length_and_dec(Item_func_time_to_sec::fix_length_and_dec215,6296
class Item_date 224,6446
  Item_date(Item_date::Item_date227,6490
  Item_date(Item_date::Item_date228,6520
  enum Item_result result_type Item_date::result_type229,6558
  double val(Item_date::val231,6656
  const char *func_name(Item_date::func_name232,6702
  void fix_length_and_dec(Item_date::fix_length_and_dec233,6753
  void make_field(Item_date::make_field235,6866
  Field *tmp_table_field(Item_date::tmp_table_field239,6963
  unsigned int size_of(Item_date::size_of243,7090
class Item_date_func 247,7147
  Item_date_func(Item_date_func::Item_date_func250,7200
  Item_date_func(Item_date_func::Item_date_func251,7239
  Item_date_func(Item_date_func::Item_date_func252,7286
  void make_field(Item_date_func::make_field253,7343
  Field *tmp_table_field(Item_date_func::tmp_table_field257,7444
  unsigned int size_of(Item_date_func::size_of262,7582
class Item_func_curtime 266,7639
  Item_func_curtime(Item_func_curtime::Item_func_curtime272,7745
  Item_func_curtime(Item_func_curtime::Item_func_curtime273,7783
  enum Item_result result_type Item_func_curtime::result_type274,7829
  double val(Item_func_curtime::val275,7895
  longlong val_int(Item_func_curtime::val_int276,7937
  String *val_str(Item_func_curtime::val_str277,7976
  const char *func_name(Item_func_curtime::func_name279,8065
  void make_field(Item_func_curtime::make_field281,8148
  Field *tmp_table_field(Item_func_curtime::tmp_table_field285,8245
  unsigned int size_of(Item_func_curtime::size_of289,8372
class Item_func_curdate 293,8429
  Item_func_curdate(Item_func_curdate::Item_func_curdate298,8513
  longlong val_int(Item_func_curdate::val_int299,8551
  const char *func_name(Item_func_curdate::func_name300,8593
  unsigned int size_of(Item_func_curdate::size_of303,8746
class Item_func_now 307,8803
  Item_func_now(Item_func_now::Item_func_now314,8925
  Item_func_now(Item_func_now::Item_func_now315,8964
  enum Item_result result_type Item_func_now::result_type316,9011
  double val(Item_func_now::val317,9077
  longlong val_int(Item_func_now::val_int318,9124
  String *val_str(Item_func_now::val_str320,9217
  const char *func_name(Item_func_now::func_name322,9306
  unsigned int size_of(Item_func_now::size_of325,9429
class Item_func_from_days 329,9486
  Item_func_from_days(Item_func_from_days::Item_func_from_days332,9540
  const char *func_name(Item_func_from_days::func_name334,9610
class Item_func_date_format 338,9671
  Item_func_date_format(Item_func_date_format::Item_func_date_format344,9794
  const char *func_name(Item_func_date_format::func_name347,9947
  unsigned int size_of(Item_func_date_format::size_of350,10078
class Item_func_from_unixtime 354,10135
  Item_func_from_unixtime(Item_func_from_unixtime::Item_func_from_unixtime357,10199
  double val(Item_func_from_unixtime::val358,10256
  const char *func_name(Item_func_from_unixtime::func_name361,10381
  void fix_length_and_dec(Item_func_from_unixtime::fix_length_and_dec362,10441
class Item_func_sec_to_time 368,10617
  Item_func_sec_to_time(Item_func_sec_to_time::Item_func_sec_to_time371,10677
  double val(Item_func_sec_to_time::val372,10737
  void fix_length_and_dec(Item_func_sec_to_time::fix_length_and_dec375,10857
  const char *func_name(Item_func_sec_to_time::func_name376,10918
  void make_field(Item_func_sec_to_time::make_field377,10976
  Field *tmp_table_field(Item_func_sec_to_time::tmp_table_field381,11073
enum interval_type 388,11203
enum interval_type { INTERVAL_YEAR,interval_type::INTERVAL_YEAR388,11203
enum interval_type { INTERVAL_YEAR, INTERVAL_MONTH,interval_type::INTERVAL_MONTH388,11203
enum interval_type { INTERVAL_YEAR, INTERVAL_MONTH, INTERVAL_DAY,interval_type::INTERVAL_DAY388,11203
		     INTERVAL_HOUR,interval_type::INTERVAL_HOUR389,11269
		     INTERVAL_HOUR, INTERVAL_MINUTE,interval_type::INTERVAL_MINUTE389,11269
		     INTERVAL_HOUR, INTERVAL_MINUTE, INTERVAL_SECOND,interval_type::INTERVAL_SECOND389,11269
		     INTERVAL_YEAR_MONTH,interval_type::INTERVAL_YEAR_MONTH390,11325
		     INTERVAL_YEAR_MONTH, INTERVAL_DAY_HOUR,interval_type::INTERVAL_DAY_HOUR390,11325
		     INTERVAL_DAY_MINUTE,interval_type::INTERVAL_DAY_MINUTE391,11372
		     INTERVAL_DAY_MINUTE, INTERVAL_DAY_SECOND,interval_type::INTERVAL_DAY_SECOND391,11372
		     INTERVAL_HOUR_MINUTE,interval_type::INTERVAL_HOUR_MINUTE392,11421
		     INTERVAL_HOUR_MINUTE, INTERVAL_HOUR_SECOND,interval_type::INTERVAL_HOUR_SECOND392,11421
		     INTERVAL_MINUTE_SECOND}interval_type::INTERVAL_MINUTE_SECOND393,11472
class Item_date_add_interval 395,11505
  Item_date_add_interval(Item_date_add_interval::Item_date_add_interval402,11648
  const char *func_name(Item_date_add_interval::func_name405,11830
  void fix_length_and_dec(Item_date_add_interval::fix_length_and_dec406,11894
  double val(Item_date_add_interval::val407,11971
  unsigned int size_of(Item_date_add_interval::size_of410,12083
class Item_extract 414,12140
  Item_extract(Item_extract::Item_extract420,12259
  const char *func_name(Item_extract::func_name423,12374
  unsigned int size_of(Item_extract::size_of426,12509
class Item_typecast 430,12566
  Item_typecast(Item_typecast::Item_typecast433,12618
  const char *func_name(Item_typecast::func_name434,12664
  String *val_str(Item_typecast::val_str435,12715
  void fix_length_and_dec(Item_typecast::fix_length_and_dec437,12815
class Item_char_typecast 442,12911
  Item_char_typecast(Item_char_typecast::Item_char_typecast445,12968
  void fix_length_and_dec(Item_char_typecast::fix_length_and_dec446,13019
class Item_date_typecast 450,13098
  Item_date_typecast(Item_date_typecast::Item_date_typecast453,13155
  const char *func_name(Item_date_typecast::func_name454,13206
  void make_field(Item_date_typecast::make_field455,13257
  Field *tmp_table_field(Item_date_typecast::tmp_table_field459,13354
class Item_time_typecast 466,13486
  Item_time_typecast(Item_time_typecast::Item_time_typecast469,13543
  const char *func_name(Item_time_typecast::func_name470,13594
  void make_field(Item_time_typecast::make_field471,13645
  Field *tmp_table_field(Item_time_typecast::tmp_table_field475,13742
class Item_datetime_typecast 482,13872
  Item_datetime_typecast(Item_datetime_typecast::Item_datetime_typecast485,13933
  const char *func_name(Item_datetime_typecast::func_name486,13988
  void make_field(Item_datetime_typecast::make_field487,14043
  Field *tmp_table_field(Item_datetime_typecast::tmp_table_field491,14144

sql/item_uniq.h,892
class Item_func_unique_users 25,914
  Item_func_unique_users(Item_func_unique_users::Item_func_unique_users28,976
  double val(Item_func_unique_users::val30,1081
  void fix_length_and_dec(Item_func_unique_users::fix_length_and_dec31,1112
  unsigned int size_of(Item_func_unique_users::size_of32,1170
class Item_sum_unique_users 35,1226
  Item_sum_unique_users(Item_sum_unique_users::Item_sum_unique_users38,1285
  double val(Item_sum_unique_users::val40,1389
  enum Sumfunctype sum_func Item_sum_unique_users::sum_func41,1422
  void reset(Item_sum_unique_users::reset42,1487
  bool add(Item_sum_unique_users::add43,1505
  void reset_field(Item_sum_unique_users::reset_field44,1532
  void update_field(Item_sum_unique_users::update_field45,1556
  bool fix_fields(Item_sum_unique_users::fix_fields46,1581
  unsigned int size_of(Item_sum_unique_users::size_of47,1650

sql/lex.h,190
#define SYM(25,954
#define CREATE_FUNC(26,971
#define SYM(28,1002
#define CREATE_FUNC(29,1019
static SYMBOL symbols[symbols38,1231
static SYMBOL sql_functions[sql_functions388,14167

sql/lex_symbol.h,137
#define _lex_symbol_h21,869
typedef struct st_symbol 23,892
} SYMBOL;28,987
typedef struct st_lex_symbol30,998
} LEX_SYMBOL;35,1079

sql/log_event.h,9652
#define _log_event_h19,816
#undef write 22,853
#define LOG_READ_EOF 29,1055
#define LOG_READ_BOGUS 30,1082
#define LOG_READ_IO 31,1109
#define LOG_READ_MEM 32,1136
#define LOG_READ_TRUNC 33,1163
#define LOG_READ_TOO_LARGE 34,1190
#define LOG_EVENT_OFFSET 36,1221
#define BINLOG_VERSION 37,1248
#define ST_SERVER_VER_LEN 44,1471
#define DUMPFILE_FLAG	46,1501
#define OPT_ENCLOSED_FLAG	47,1528
#define REPLACE_FLAG	48,1558
#define IGNORE_FLAG	49,1584
#define FIELD_TERM_EMPTY	51,1610
#define ENCLOSED_EMPTY	52,1639
#define LINE_TERM_EMPTY	53,1667
#define LINE_START_EMPTY	54,1696
#define ESCAPED_EMPTY	55,1725
struct old_sql_ex57,1754
#define NUM_LOAD_DELIM_STRS 68,1905
struct sql_ex_info70,1936
  void force_new_format(83,2248
  int data_size(84,2301
  bool new_format(92,2544
#define LOG_EVENT_HEADER_LEN 111,3157
#define OLD_HEADER_LEN 112,3189
#define QUERY_HEADER_LEN 113,3221
#define LOAD_HEADER_LEN 114,3266
#define START_HEADER_LEN 115,3318
#define ROTATE_HEADER_LEN 116,3375
#define CREATE_FILE_HEADER_LEN 117,3406
#define APPEND_BLOCK_HEADER_LEN 118,3439
#define EXEC_LOAD_HEADER_LEN 119,3473
#define DELETE_FILE_HEADER_LEN 120,3506
#define EVENT_TYPE_OFFSET 124,3568
#define SERVER_ID_OFFSET 125,3599
#define EVENT_LEN_OFFSET 126,3630
#define LOG_POS_OFFSET 127,3661
#define FLAGS_OFFSET 128,3693
#define ST_BINLOG_VER_OFFSET 132,3757
#define ST_SERVER_VER_OFFSET 133,3789
#define ST_CREATED_OFFSET 134,3821
#define SL_MASTER_PORT_OFFSET 138,3926
#define SL_MASTER_POS_OFFSET 139,3960
#define SL_MASTER_HOST_OFFSET 140,3994
#define Q_THREAD_ID_OFFSET	144,4061
#define Q_EXEC_TIME_OFFSET	145,4090
#define Q_DB_LEN_OFFSET	146,4119
#define Q_ERR_CODE_OFFSET	147,4146
#define Q_DATA_OFFSET	148,4174
#define I_TYPE_OFFSET 152,4247
#define I_VAL_OFFSET 153,4278
#define RAND_SEED1_OFFSET 157,4340
#define RAND_SEED2_OFFSET 158,4368
#define L_THREAD_ID_OFFSET 162,4427
#define L_EXEC_TIME_OFFSET 163,4458
#define L_SKIP_LINES_OFFSET 164,4489
#define L_TBL_LEN_OFFSET 165,4520
#define L_DB_LEN_OFFSET 166,4552
#define L_NUM_FIELDS_OFFSET 167,4584
#define L_SQL_EX_OFFSET 168,4616
#define L_DATA_OFFSET 169,4648
#define R_POS_OFFSET 173,4726
#define R_IDENT_OFFSET 174,4755
#define CF_FILE_ID_OFFSET 176,4785
#define CF_DATA_OFFSET 177,4814
#define AB_FILE_ID_OFFSET 179,4865
#define AB_DATA_OFFSET 180,4894
#define EL_FILE_ID_OFFSET 182,4946
#define DF_FILE_ID_OFFSET 184,4976
#define QUERY_EVENT_OVERHEAD	186,5006
#define QUERY_DATA_OFFSET	187,5075
#define ROTATE_EVENT_OVERHEAD	188,5141
#define LOAD_EVENT_OVERHEAD	189,5212
#define CREATE_FILE_EVENT_OVERHEAD 190,5279
#define DELETE_FILE_EVENT_OVERHEAD 192,5380
#define EXEC_LOAD_EVENT_OVERHEAD 193,5461
#define APPEND_BLOCK_EVENT_OVERHEAD 194,5538
#define BINLOG_MAGIC 197,5623
#define LOG_EVENT_TIME_F 199,5671
#define LOG_EVENT_FORCED_ROTATE_F 200,5710
enum Log_event_type202,5750
  UNKNOWN_EVENT 204,5772
  UNKNOWN_EVENT = 0, START_EVENT 204,5772
  UNKNOWN_EVENT = 0, START_EVENT = 1, QUERY_EVENT 204,5772
  UNKNOWN_EVENT = 0, START_EVENT = 1, QUERY_EVENT =2, STOP_EVENT=204,5772
  ROTATE_EVENT 205,5840
  ROTATE_EVENT = 4, INTVAR_EVENT=205,5840
  ROTATE_EVENT = 4, INTVAR_EVENT=5, LOAD_EVENT=205,5840
  ROTATE_EVENT = 4, INTVAR_EVENT=5, LOAD_EVENT=6, SLAVE_EVENT=205,5840
  CREATE_FILE_EVENT=206,5906
  CREATE_FILE_EVENT=8, APPEND_BLOCK_EVENT=206,5906
  CREATE_FILE_EVENT=8, APPEND_BLOCK_EVENT=9, EXEC_LOAD_EVENT=206,5906
  DELETE_FILE_EVENT=207,5971
  DELETE_FILE_EVENT=11, NEW_LOAD_EVENT=207,5971
  DELETE_FILE_EVENT=11, NEW_LOAD_EVENT=12, RAND_EVENT=207,5971
enum Int_event_type210,6032
  INVALID_INT_EVENT 212,6054
  INVALID_INT_EVENT = 0, LAST_INSERT_ID_EVENT 212,6054
  INVALID_INT_EVENT = 0, LAST_INSERT_ID_EVENT = 1, INSERT_ID_EVENT 212,6054
class Log_event224,6228
  virtual const char* get_db(Log_event::get_db251,7035
  static void *operator new(Log_event::operator new263,7408
  static void operator delete(Log_event::operator delete267,7519
  virtual int write_data(Log_event::write_data274,7705
  virtual int write_data_header(Log_event::write_data_header276,7809
  virtual int write_data_body(Log_event::write_data_body278,7897
  inline bool get_cache_stmt(Log_event::get_cache_stmt282,8060
  virtual ~Log_event(Log_event::~Log_event284,8161
  void register_temp_buf(Log_event::register_temp_buf285,8204
  void free_temp_buf(Log_event::free_temp_buf286,8260
  virtual int get_data_size(Log_event::get_data_size294,8374
  virtual int get_data_body_offset(Log_event::get_data_body_offset295,8417
  int get_event_len(Log_event::get_event_len296,8468
class Query_log_event:Query_log_event307,8762
  const char* get_db(Query_log_event::get_db334,9535
  ~Query_log_event(Query_log_event::~Query_log_event342,9804
  Log_event_type get_type_code(Query_log_event::get_type_code349,9903
  bool is_valid(Query_log_event::is_valid352,10060
  int get_data_size(Query_log_event::get_data_size353,10101
class Slave_log_event:Slave_log_event364,10242
  bool is_valid(Slave_log_event::is_valid388,10843
  Log_event_type get_type_code(Slave_log_event::get_type_code389,10890
class Load_log_event:Load_log_event393,10986
  void set_fname_outside_temp_buf(Load_log_event::set_fname_outside_temp_buf417,11517
  int  check_fname_outside_temp_buf(Load_log_event::check_fname_outside_temp_buf424,11719
  const char* get_db(Load_log_event::get_db439,12115
  int exec_event(Load_log_event::exec_event440,12153
  ~Load_log_event(Load_log_event::~Load_log_event452,12568
  Log_event_type get_type_code(Load_log_event::get_type_code454,12593
  bool is_valid(Load_log_event::is_valid460,12777
  int get_data_size(Load_log_event::get_data_size461,12823
  int get_data_body_offset(Load_log_event::get_data_body_offset470,13063
class Start_log_event:Start_log_event475,13180
  Start_log_event(Start_log_event::Start_log_event503,14521
  ~Start_log_event(Start_log_event::~Start_log_event515,14906
  Log_event_type get_type_code(Start_log_event::get_type_code516,14930
  bool is_valid(Start_log_event::is_valid518,15020
  int get_data_size(Start_log_event::get_data_size519,15052
class Intvar_log_event:Intvar_log_event526,15116
  Intvar_log_event(Intvar_log_event::Intvar_log_event533,15222
  ~Intvar_log_event(Intvar_log_event::~Intvar_log_event543,15569
  Log_event_type get_type_code(Intvar_log_event::get_type_code544,15594
  int get_data_size(Intvar_log_event::get_data_size546,15686
  bool is_valid(Intvar_log_event::is_valid548,15781
class Rand_log_event:Rand_log_event556,16006
  Rand_log_event(Rand_log_event::Rand_log_event563,16116
  ~Rand_log_event(Rand_log_event::~Rand_log_event573,16471
  Log_event_type get_type_code(Rand_log_event::get_type_code574,16494
  int get_data_size(Rand_log_event::get_data_size575,16549
  bool is_valid(Rand_log_event::is_valid577,16639
class Stop_log_event:Stop_log_event581,16676
  Stop_log_event(Stop_log_event::Stop_log_event585,16748
  Stop_log_event(Stop_log_event::Stop_log_event592,16916
  ~Stop_log_event(Stop_log_event::~Stop_log_event595,17004
  Log_event_type get_type_code(Stop_log_event::get_type_code596,17027
  bool is_valid(Stop_log_event::is_valid597,17082
class Rotate_log_event:Rotate_log_event601,17119
  Rotate_log_event(Rotate_log_event::Rotate_log_event609,17273
  ~Rotate_log_event(Rotate_log_event::~Rotate_log_event623,17809
  Log_event_type get_type_code(Rotate_log_event::get_type_code628,17901
  int get_data_size(Rotate_log_event::get_data_size629,17958
  bool is_valid(Rotate_log_event::is_valid630,18022
class Create_file_log_event:Create_file_log_event636,18175
  ~Create_file_log_event(Create_file_log_event::~Create_file_log_event667,19087
  Log_event_type get_type_code(Create_file_log_event::get_type_code672,19179
  int get_data_size(Create_file_log_event::get_data_size676,19296
  int get_data_body_offset(Create_file_log_event::get_data_body_offset682,19448
  bool is_valid(Create_file_log_event::is_valid687,19582
class Append_block_log_event:Append_block_log_event698,19857
  ~Append_block_log_event(Append_block_log_event::~Append_block_log_event726,20904
  Log_event_type get_type_code(Append_block_log_event::get_type_code727,20935
  int get_data_size(Append_block_log_event::get_data_size728,20998
  bool is_valid(Append_block_log_event::is_valid729,21069
  const char* get_db(Append_block_log_event::get_db731,21144
class Delete_file_log_event:Delete_file_log_event735,21187
  ~Delete_file_log_event(Delete_file_log_event::~Delete_file_log_event750,21642
  Log_event_type get_type_code(Delete_file_log_event::get_type_code751,21672
  int get_data_size(Delete_file_log_event::get_data_size752,21734
  bool is_valid(Delete_file_log_event::is_valid753,21791
  const char* get_db(Delete_file_log_event::get_db755,21868
class Execute_load_log_event:Execute_load_log_event758,21910
  ~Execute_load_log_event(Execute_load_log_event::~Execute_load_log_event773,22367
  Log_event_type get_type_code(Execute_load_log_event::get_type_code774,22398
  int get_data_size(Execute_load_log_event::get_data_size775,22458
  bool is_valid(Execute_load_log_event::is_valid776,22514
  const char* get_db(Execute_load_log_event::get_db778,22591
class Unknown_log_event:Unknown_log_event782,22653
  Unknown_log_event(Unknown_log_event::Unknown_log_event785,22705
  ~Unknown_log_event(Unknown_log_event::~Unknown_log_event788,22796
  Log_event_type get_type_code(Unknown_log_event::get_type_code790,22886
  bool is_valid(Unknown_log_event::is_valid791,22944

sql/mini_client.h,30
#define _MINI_CLIENT_H18,808

sql/mysql_priv.h,6274
#undef write 29,1048
typedef ulonglong table_map;33,1135
typedef ulong table_map;35,1205
typedef ulong key_map;38,1289
typedef ulong key_part_map;39,1342
#define x_free(56,1940
#define safeFree(57,2024
#define PREV_BITS(58,2094
#define all_bits_set(59,2152
#define ACL_CACHE_SIZE	65,2381
#define HASH_PASSWORD_LENGTH	66,2409
#define MAX_PASSWORD_LENGTH	67,2441
#define HOST_CACHE_SIZE	68,2472
#define MAX_ACCEPT_RETRY	69,2501
#define MAX_FIELDS_BEFORE_HASH	70,2560
#define USER_VARS_HASH_SIZE 71,2594
#define STACK_MIN_SIZE	72,2629
#define STACK_BUFF_ALLOC	73,2694
#define MYSQLD_NET_RETRY_COUNT 75,2781
#define TEMP_POOL_SIZE 77,2858
#define QUERY_ALLOC_BLOCK_SIZE	79,2895
#define QUERY_ALLOC_PREALLOC_SIZE 80,2932
#define TRANS_ALLOC_BLOCK_SIZE	81,2974
#define TRANS_ALLOC_PREALLOC_SIZE	82,3011
#define RANGE_ALLOC_BLOCK_SIZE	83,3050
#define ACL_ALLOC_BLOCK_SIZE	84,3087
#define UDF_ALLOC_BLOCK_SIZE	85,3122
#define TABLE_ALLOC_BLOCK_SIZE	86,3157
#define MIN_FILE_LENGTH_TO_USE_ROW_CACHE 92,3329
#define MIN_ROWS_TO_USE_TABLE_CACHE	93,3386
#define MIN_ROWS_TO_USE_BULK_INSERT	94,3427
#define TIME_FOR_COMPARE 101,3688
#define MATCHING_ROWS_IN_OTHER_TABLE 108,3912
#define KEY_DEFAULT_PACK_LENGTH 111,4028
#define PROCESS_LIST_WIDTH 114,4124
#define TIMESTAMP_MAX_YEAR 117,4185
#define YY_PART_YEAR	118,4217
#define TIMESTAMP_MIN_YEAR 119,4244
#define TIMESTAMP_MAX_VALUE 120,4297
#define TIMESTAMP_MIN_VALUE 121,4336
#define PRECISION_FOR_DOUBLE 122,4366
#define PRECISION_FOR_FLOAT 123,4398
#define CONNECT_TIMEOUT	126,4493
#define DEFAULT_CONCURRENCY	127,4553
#define DELAYED_LIMIT	128,4584
#define DELAYED_QUEUE_SIZE	129,4642
#define DELAYED_WAIT_TIMEOUT	130,4674
#define FLUSH_TIME	131,4739
#define MAX_CONNECT_ERRORS	132,4787
#define IF_WIN(135,4888
#undef	FLUSH_TIME136,4912
#define FLUSH_TIME	137,4930
#define INTERRUPT_PRIOR 139,4985
#define CONNECT_PRIOR	140,5012
#define WAIT_PRIOR	141,5037
#define QUERY_PRIOR	142,5058
#define IF_WIN(144,5086
#define INTERRUPT_PRIOR 145,5110
#define CONNECT_PRIOR	146,5137
#define WAIT_PRIOR	147,5161
#define QUERY_PRIOR	148,5182
#define TEST_PRINT_CACHED_TABLES 152,5254
#define TEST_NO_KEY_GROUP	153,5289
#define TEST_MIT_THREAD	154,5318
#define TEST_BLOCKING	155,5345
#define TEST_KEEP_TMP_TABLES	156,5370
#define TEST_NO_THREADS	157,5402
#define TEST_READCHECK	158,5462
#define TEST_NO_EXTRA	159,5518
#define TEST_CORE_ON_SIGNAL	160,5545
#define TEST_NO_STACKTRACE	161,5603
#define TEST_SIGINT	162,5634
#define SELECT_DISTINCT	165,5764
#define SELECT_STRAIGHT_JOIN	166,5791
#define SELECT_DESCRIBE	167,5822
#define SELECT_SMALL_RESULT	168,5849
#define SELECT_BIG_RESULT	169,5879
#define OPTION_FOUND_ROWS	170,5908
#define OPTION_TO_QUERY_CACHE 171,5937
#define SELECT_NO_JOIN_CACHE	172,5972
#define OPTION_BIG_TABLES	174,6020
#define OPTION_BIG_SELECTS	175,6072
#define OPTION_LOG_OFF	176,6126
#define OPTION_UPDATE_LOG	177,6155
#define TMP_TABLE_ALL_COLUMNS	178,6209
#define OPTION_WARNINGS	179,6244
#define OPTION_AUTO_IS_NULL	180,6275
#define OPTION_FOUND_COMMENT	181,6309
#define OPTION_SAFE_UPDATES	182,6345
#define OPTION_BUFFER_RESULT	183,6396
#define OPTION_BIN_LOG 184,6447
#define OPTION_NOT_AUTOCOMMIT	185,6502
#define OPTION_BEGIN	186,6549
#define OPTION_TABLE_LOCK	187,6595
#define OPTION_QUICK	188,6636
#define OPTION_QUOTE_SHOW_CREATE 189,6678
#define OPTION_INTERNAL_SUBTRANSACTIONS 190,6726
#define OPTION_STATUS_NO_TRANS_UPDATE 193,6852
#define QUERY_NO_INDEX_USED	196,6976
#define QUERY_NO_GOOD_INDEX_USED	197,7037
#define OPTION_NO_FOREIGN_KEY_CHECKS	200,7198
#define OPTION_RELAXED_UNIQUE_CHECKS	203,7367
#define SELECT_NO_UNLOCK	204,7435
#define MODE_REAL_AS_FLOAT 208,7629
#define MODE_PIPES_AS_CONCAT 209,7664
#define MODE_ANSI_QUOTES 210,7699
#define MODE_IGNORE_SPACE	211,7734
#define MODE_SERIALIZABLE	212,7763
#define MODE_ONLY_FULL_GROUP_BY	213,7793
#define MODE_NO_UNSIGNED_SUBTRACTION	214,7829
#define MODE_NO_DIR_IN_CREATE	215,7869
#define RAID_BLOCK_SIZE 217,7905
#define DBUG_SYNC_POINT(227,8266
#define DBUG_SYNC_POINT(231,8429
#define BINLOG_DUMP_NON_BLOCK 236,8530
#define SHOW_LOG_STATUS_FREE 239,8600
#define SHOW_LOG_STATUS_INUSE 240,8636
#define TL_OPTION_UPDATING	243,8713
#define TL_OPTION_FORCE_INDEX	244,8742
#define portable_sizeof_char_ptr 248,8804
#define tmp_file_prefix 250,8840
#define tmp_file_prefix_length 251,8901
#define WEEK_MONDAY_FIRST 254,8974
#define WEEK_YEAR 255,9005
#define WEEK_FIRST_WEEKDAY 256,9036
typedef struct st_sql_list 263,9141
  inline void empty(st_sql_list::empty268,9218
  inline void link_in_list(st_sql_list::link_in_list274,9295
  inline void save_and_clear(st_sql_list::save_and_clear281,9431
  inline void push_front(st_sql_list::push_front286,9525
} SQL_LIST;292,9695
inline THD *_current_thd(_current_thd298,9813
#define current_thd 302,9899
#define query_cache_store_query(317,10221
#define query_cache_destroy(318,10289
#define query_cache_result_size_limit(319,10341
#define query_cache_resize(320,10415
#define query_cache_invalidate3(321,10467
#define query_cache_invalidate1(322,10540
#define query_cache_send_result_to_client(323,10601
#define query_cache_invalidate_by_MyISAM_filename_ref 325,10699
#define query_cache_store_query(328,10806
#define query_cache_destroy(329,10844
#define query_cache_result_size_limit(330,10874
#define query_cache_resize(331,10915
#define query_cache_invalidate3(332,10945
#define query_cache_invalidate1(333,10986
#define query_cache_send_result_to_client(334,11021
#define query_cache_invalidate_by_MyISAM_filename_ref 335,11074
#define query_cache_abort(337,11134
#define query_cache_end_of_result(338,11163
#define query_cache_invalidate_by_MyISAM_filename_ref 339,11200
#define check_stack_overrun(375,12793
struct st_des_keyblock 500,18548
struct st_des_keyschedule504,18610
#define MANAGER_BERKELEY_LOG_CLEANUP 618,23598
inline bool add_item_to_list(868,34535
inline bool add_value_to_list(873,34638
inline bool add_order_to_list(878,34737
inline bool add_group_to_list(883,34857
inline void mark_as_null_row(888,34977
inline void table_case_convert(895,35130
inline const char *table_case_name(table_case_name901,35248

sql/opt_ft.h,181
#define _opt_ft_h21,853
class FT_SELECT:FT_SELECT27,947
  FT_SELECT(FT_SELECT::FT_SELECT31,1013
  int init(FT_SELECT::init34,1138
  int get_next(FT_SELECT::get_next35,1185

sql/opt_range.h,835
#define _opt_range_h21,856
#define NO_MIN_RANGE	27,953
#define NO_MAX_RANGE	28,976
#define NEAR_MIN	29,999
#define NEAR_MAX	30,1018
#define UNIQUE_RANGE	31,1037
#define EQ_RANGE	32,1061
#define NULL_RANGE	33,1081
typedef struct st_key_part 35,1104
} KEY_PART;39,1199
class QUICK_RANGE 42,1213
  QUICK_RANGE(QUICK_RANGE::QUICK_RANGE50,1437
class QUICK_SELECT 66,1874
  void reset(QUICK_SELECT::reset85,2287
  int init(QUICK_SELECT::init86,2331
  virtual bool reverse_sorted(QUICK_SELECT::reverse_sorted88,2412
class QUICK_SELECT_DESC:QUICK_SELECT_DESC94,2526
  bool reverse_sorted(QUICK_SELECT_DESC::reverse_sorted99,2658
  void reset(QUICK_SELECT_DESC::reset106,2882
class SQL_SELECT 112,3004
  bool check_quick(SQL_SELECT::check_quick127,3494
  inline bool skipp_record(SQL_SELECT::skipp_record130,3657

sql/procedure.h,2189
#define PROC_NO_SORT 24,895
#define PROC_GROUP 25,941
class Item_proc 29,1069
  Item_proc(Item_proc::Item_proc32,1108
  enum Type type(Item_proc::type36,1192
  void set(Item_proc::set41,1413
  void make_field(Item_proc::make_field42,1474
  unsigned int size_of(Item_proc::size_of46,1568
class Item_proc_real 49,1624
  Item_proc_real(Item_proc_real::Item_proc_real53,1689
  enum Item_result result_type Item_proc_real::result_type57,1816
  enum_field_types field_type(Item_proc_real::field_type58,1880
  void set(Item_proc_real::set59,1948
  void set(Item_proc_real::set60,1984
  void set(Item_proc_real::set61,2031
  double val(Item_proc_real::val63,2118
  longlong val_int(Item_proc_real::val_int64,2151
  String *val_str(Item_proc_real::val_str65,2201
  unsigned int size_of(Item_proc_real::size_of66,2268
class Item_proc_int 69,2324
  Item_proc_int(Item_proc_int::Item_proc_int73,2390
  enum Item_result result_type Item_proc_int::result_type75,2470
  enum_field_types field_type(Item_proc_int::field_type76,2533
  void set(Item_proc_int::set77,2599
  void set(Item_proc_int::set78,2646
  void set(Item_proc_int::set79,2684
  double val(Item_proc_int::val81,2782
  longlong val_int(Item_proc_int::val_int82,2824
  String *val_str(Item_proc_int::val_str83,2863
  unsigned int size_of(Item_proc_int::size_of84,2921
class Item_proc_string 88,2978
  Item_proc_string(Item_proc_string::Item_proc_string91,3029
  enum Item_result result_type Item_proc_string::result_type93,3136
  enum_field_types field_type(Item_proc_string::field_type94,3202
  void set(Item_proc_string::set95,3270
  void set(Item_proc_string::set96,3315
  void set(Item_proc_string::set97,3362
  double val(Item_proc_string::val98,3435
  longlong val_int(Item_proc_string::val_int99,3484
  String *val_str(Item_proc_string::val_str100,3550
  unsigned int size_of(Item_proc_string::size_of104,3645
class Procedure 109,3740
  Procedure(Procedure::Procedure116,3874
  virtual ~Procedure(Procedure::~Procedure118,3984
  virtual void update_refs(Procedure::update_refs123,4203
  virtual bool end_of_records(Procedure::end_of_records124,4239

sql/repl_failsafe.h,471
#define REPL_FAILSAFE_H2,24
typedef enum {RPL_AUTH_MASTER=RPL_AUTH_MASTER8,108
typedef enum {RPL_AUTH_MASTER=0,RPL_ACTIVE_SLAVE,8,108
typedef enum {RPL_AUTH_MASTER=0,RPL_ACTIVE_SLAVE,RPL_IDLE_SLAVE,8,108
	      RPL_LOST_SOLDIER,9,173
	      RPL_LOST_SOLDIER,RPL_TROOP_SOLDIER,9,173
	      RPL_RECOVERY_CAPTAIN,10,216
	      RPL_RECOVERY_CAPTAIN,RPL_NULL 10,216
	      RPL_ANY 11,269
	      RPL_ANY /* wild card used by change_rpl_status */ } RPL_STATUS;11,269

sql/set_var.h,7130
typedef struct system_variables SV;30,1171
enum enum_var_type33,1262
  OPT_DEFAULT,enum_var_type::OPT_DEFAULT35,1283
  OPT_DEFAULT, OPT_SESSION,enum_var_type::OPT_SESSION35,1283
  OPT_DEFAULT, OPT_SESSION, OPT_GLOBALenum_var_type::OPT_GLOBAL35,1283
typedef bool (*sys_check_func)sys_check_func38,1326
typedef bool (*sys_update_func)sys_update_func39,1377
typedef void (*sys_after_update_func)sys_after_update_func40,1428
typedef void (*sys_set_default_func)sys_set_default_func41,1488
class sys_var43,1549
  sys_var(sys_var::sys_var50,1758
  sys_var(sys_var::sys_var52,1827
  virtual ~sys_var(sys_var::~sys_var55,1930
  virtual bool check(sys_var::check56,1954
  virtual void set_default(sys_var::set_default59,2126
  virtual SHOW_TYPE type(sys_var::type60,2186
  virtual byte *value_ptr(sys_var::value_ptr61,2236
  virtual bool check_type(sys_var::check_type62,2306
  virtual bool check_update_type(sys_var::check_update_type64,2412
  virtual bool check_default(sys_var::check_default66,2514
class sys_var_long_ptr 72,2645
  sys_var_long_ptr(sys_var_long_ptr::sys_var_long_ptr76,2710
  sys_var_long_ptr(sys_var_long_ptr::sys_var_long_ptr78,2812
  SHOW_TYPE type(sys_var_long_ptr::type83,3042
  byte *value_ptr(sys_var_long_ptr::value_ptr84,3083
class sys_var_ulonglong_ptr 88,3162
  sys_var_ulonglong_ptr(sys_var_ulonglong_ptr::sys_var_ulonglong_ptr92,3236
  sys_var_ulonglong_ptr(sys_var_ulonglong_ptr::sys_var_ulonglong_ptr94,3347
  SHOW_TYPE type(sys_var_ulonglong_ptr::type99,3590
  byte *value_ptr(sys_var_ulonglong_ptr::value_ptr100,3635
class sys_var_bool_ptr 104,3714
  sys_var_bool_ptr(sys_var_bool_ptr::sys_var_bool_ptr108,3781
  bool check(sys_var_bool_ptr::check111,3887
  SHOW_TYPE type(sys_var_bool_ptr::type117,4069
  byte *value_ptr(sys_var_bool_ptr::value_ptr118,4113
  bool check_update_type(sys_var_bool_ptr::check_update_type119,4187
class sys_var_str 123,4249
  sys_var_str(sys_var_str::sys_var_str130,4444
  bool check(sys_var_str::check137,4737
  bool update(sys_var_str::update141,4835
  void set_default(sys_var_str::set_default145,4918
  SHOW_TYPE type(sys_var_str::type149,5011
  byte *value_ptr(sys_var_str::value_ptr150,5052
  bool check_update_type(sys_var_str::check_update_type151,5126
  bool check_default(sys_var_str::check_default155,5238
class sys_var_const_str 159,5298
  sys_var_const_str(sys_var_const_str::sys_var_const_str163,5393
  bool check(sys_var_const_str::check166,5512
  bool update(sys_var_const_str::update170,5571
  SHOW_TYPE type(sys_var_const_str::type174,5631
  byte *value_ptr(sys_var_const_str::value_ptr175,5672
  bool check_update_type(sys_var_const_str::check_update_type176,5746
  bool check_default(sys_var_const_str::check_default180,5811
class sys_var_enum 184,5871
  sys_var_enum(sys_var_enum::sys_var_enum189,5955
  bool check(sys_var_enum::check193,6135
  SHOW_TYPE type(sys_var_enum::type198,6264
  bool check_update_type(sys_var_enum::check_update_type200,6354
class sys_var_thd 204,6416
  sys_var_thd(sys_var_thd::sys_var_thd207,6460
  sys_var_thd(sys_var_thd::sys_var_thd210,6524
  bool check_type(sys_var_thd::check_type213,6621
  bool check_default(sys_var_thd::check_default214,6673
class sys_var_thd_ulong 221,6776
  sys_var_thd_ulong(sys_var_thd_ulong::sys_var_thd_ulong225,6851
  sys_var_thd_ulong(sys_var_thd_ulong::sys_var_thd_ulong228,6968
  SHOW_TYPE type(sys_var_thd_ulong::type234,7212
class sys_var_thd_ha_rows 239,7307
  sys_var_thd_ha_rows(sys_var_thd_ha_rows::sys_var_thd_ha_rows243,7386
  sys_var_thd_ha_rows(sys_var_thd_ha_rows::sys_var_thd_ha_rows246,7507
  SHOW_TYPE type(sys_var_thd_ha_rows::type252,7758
class sys_var_thd_ulonglong 257,7856
  sys_var_thd_ulonglong(sys_var_thd_ulonglong::sys_var_thd_ulonglong262,7959
  sys_var_thd_ulonglong(sys_var_thd_ulonglong::sys_var_thd_ulonglong265,8084
  SHOW_TYPE type(sys_var_thd_ulonglong::type272,8391
  bool check_default(sys_var_thd_ulonglong::check_default274,8485
  bool check_type(sys_var_thd_ulonglong::check_type278,8583
class sys_var_thd_bool 285,8682
  sys_var_thd_bool(sys_var_thd_bool::sys_var_thd_bool289,8758
  sys_var_thd_bool(sys_var_thd_bool::sys_var_thd_bool292,8876
  SHOW_TYPE type(sys_var_thd_bool::type298,9121
  bool check(sys_var_thd_bool::check300,9214
  bool check_update_type(sys_var_thd_bool::check_update_type304,9307
class sys_var_thd_enum 308,9369
  sys_var_thd_enum(sys_var_thd_enum::sys_var_thd_enum313,9466
  sys_var_thd_enum(sys_var_thd_enum::sys_var_thd_enum317,9626
  bool check(sys_var_thd_enum::check322,9824
  SHOW_TYPE type(sys_var_thd_enum::type328,10003
  bool check_update_type(sys_var_thd_enum::check_update_type330,10093
class sys_var_thd_bit 334,10155
  sys_var_thd_bit(sys_var_thd_bit::sys_var_thd_bit340,10272
  bool check(sys_var_thd_bit::check345,10461
  bool check_update_type(sys_var_thd_bit::check_update_type350,10593
  bool check_type(sys_var_thd_bit::check_type351,10650
  SHOW_TYPE type(sys_var_thd_bit::type352,10719
class sys_var_timestamp 359,10869
  sys_var_timestamp(sys_var_timestamp::sys_var_timestamp362,10919
  bool check_type(sys_var_timestamp::check_type365,11072
  bool check_default(sys_var_timestamp::check_default366,11144
  SHOW_TYPE type(sys_var_timestamp::type367,11199
class sys_var_last_insert_id 372,11294
  sys_var_last_insert_id(sys_var_last_insert_id::sys_var_last_insert_id375,11349
  bool check_type(sys_var_last_insert_id::check_type377,11457
  SHOW_TYPE type(sys_var_last_insert_id::type378,11526
class sys_var_insert_id 383,11625
  sys_var_insert_id(sys_var_insert_id::sys_var_insert_id386,11675
  bool check_type(sys_var_insert_id::check_type388,11778
  SHOW_TYPE type(sys_var_insert_id::type389,11847
class sys_var_slave_skip_counter 394,11946
  sys_var_slave_skip_counter(sys_var_slave_skip_counter::sys_var_slave_skip_counter397,12005
  bool check_type(sys_var_slave_skip_counter::check_type400,12155
class sys_var_rand_seed1 408,12333
  sys_var_rand_seed1(sys_var_rand_seed1::sys_var_rand_seed1411,12384
  bool check_type(sys_var_rand_seed1::check_type413,12488
class sys_var_rand_seed2 416,12561
  sys_var_rand_seed2(sys_var_rand_seed2::sys_var_rand_seed2419,12612
  bool check_type(sys_var_rand_seed2::check_type421,12716
class sys_var_thd_conv_charset 425,12790
  sys_var_thd_conv_charset(sys_var_thd_conv_charset::sys_var_thd_conv_charset428,12851
  SHOW_TYPE type(sys_var_thd_conv_charset::type433,13009
  bool check_update_type(sys_var_thd_conv_charset::check_update_type435,13099
  bool check_default(sys_var_thd_conv_charset::check_default439,13211
class set_var_base 448,13519
  set_var_base(set_var_base::set_var_base451,13566
  virtual ~set_var_base(set_var_base::~set_var_base452,13586
class set_var 460,13796
  set_var(set_var::set_var472,13969
class set_var_user:set_var_user495,14581
  set_var_user(set_var_user::set_var_user499,14672
class set_var_password:set_var_password508,14822
  set_var_password(set_var_password::set_var_password513,14912

sql/slave.h,788
#define SLAVE_H2,16
#define SLAVE_NET_TIMEOUT 6,73
#define MAX_SLAVE_ERRMSG 7,105
#define MAX_SLAVE_ERROR 8,137
enum enum_binlog_formats 72,2994
  BINLOG_FORMAT_CURRENT=73,3021
  BINLOG_FORMAT_323_LESS_57,74,3100
  BINLOG_FORMAT_323_GEQ_57 75,3130
typedef struct st_relay_log_info97,3745
} RELAY_LOG_INFO;219,7790
typedef struct st_master_info252,8633
  st_master_info(281,9478
  ~st_master_info(294,9952
} MASTER_INFO;303,10173
typedef struct st_table_rule_ent308,10257
} TABLE_RULE_ENT;313,10338
#define TABLE_RULE_HASH_SIZE 315,10357
#define TABLE_RULE_ARR_SIZE 316,10391
#define MAX_SLAVE_ERRMSG 317,10424
#define RPL_LOG_NAME 319,10460
#define IO_RPL_LOG_NAME 321,10542
#define SLAVE_IO 325,10692
#define SLAVE_SQL 326,10712
#define SLAVE_FORCE_ALL 332,10851

sql/sql_acl.h,1089
#define SELECT_ACL	18,786
#define INSERT_ACL	19,815
#define UPDATE_ACL	20,844
#define DELETE_ACL	21,873
#define CREATE_ACL	22,902
#define DROP_ACL	23,931
#define RELOAD_ACL	24,958
#define SHUTDOWN_ACL	25,987
#define PROCESS_ACL	26,1018
#define FILE_ACL	27,1048
#define GRANT_ACL	28,1075
#define REFERENCES_ACL	29,1104
#define INDEX_ACL	30,1138
#define ALTER_ACL	31,1167
#define SHOW_DB_ACL	32,1196
#define SUPER_ACL	33,1227
#define CREATE_TMP_ACL	34,1256
#define LOCK_TABLES_ACL	35,1290
#define EXECUTE_ACL	36,1325
#define REPL_SLAVE_ACL	37,1356
#define REPL_CLIENT_ACL	38,1390
#define DB_ACLS 41,1427
#define TABLE_ACLS 45,1613
#define COL_ACLS 49,1767
#define GLOBAL_ACLS 52,1843
#define EXTRA_ACL	59,2170
#define NO_ACCESS	60,2199
#define DB_REL1 68,2434
#define DB_REL2 69,2503
#define DB_CHUNK1 72,2617
#define DB_CHUNK2 73,2688
#define fix_rights_for_db(75,2742
#define get_rights_for_db(76,2834
#define fix_rights_for_table(77,2930
#define get_rights_for_table(78,2996
#define fix_rights_for_column(79,3062
#define get_rights_for_column(80,3127

sql/sql_analyse.h,2090
#define DEC_IN_AVG 24,886
typedef struct st_number_info26,908
} NUM_INFO;34,1142
typedef struct st_extreme_value_number_info36,1155
} EV_NUM_INFO;41,1272
typedef struct st_tree_info43,1288
} TREE_INFO;48,1363
class field_info 67,2223
  field_info(field_info::field_info78,2438
  virtual ~field_info(field_info::~field_info82,2608
  virtual uint decimals(field_info::decimals90,2962
class field_str 103,3300
  field_str(field_str::field_str113,3535
  String *get_min_arg(field_str::get_min_arg123,3922
  String *get_max_arg(field_str::get_max_arg125,4009
  String *avg(field_str::avg127,4096
  tree_walk_action collect_enum(field_str::collect_enum138,4403
  String *std(field_str::std140,4485
class field_real:field_real148,4684
  field_real(field_real::field_real155,4810
  String *get_min_arg(field_real::get_min_arg162,5085
  String *get_max_arg(field_real::get_max_arg163,5165
  String *avg(field_real::avg164,5245
  String *std(field_real::std172,5442
  uint	 decimals(field_real::decimals185,5777
  tree_walk_action collect_enum(field_real::collect_enum188,5910
class field_longlong:field_longlong195,6080
  field_longlong(field_longlong::field_longlong201,6185
  String *get_min_arg(field_longlong::get_min_arg208,6444
  String *get_max_arg(field_longlong::get_max_arg209,6508
  String *avg(field_longlong::avg210,6572
  String *std(field_longlong::std218,6766
  tree_walk_action collect_enum(field_longlong::collect_enum233,7193
class field_ulonglong:field_ulonglong240,7370
  field_ulonglong(field_ulonglong::field_ulonglong246,7478
  String *get_min_arg(field_ulonglong::get_min_arg252,7738
  String *get_max_arg(field_ulonglong::get_max_arg253,7802
  String *avg(field_ulonglong::avg254,7866
  String *std(field_ulonglong::std263,8082
  tree_walk_action collect_enum(field_ulonglong::collect_enum279,8557
class analyse:analyse288,8765
  analyse(analyse::analyse300,9017
  ~analyse(analyse::~analyse303,9127
  virtual void add(analyse::add311,9241
  virtual void end_group(analyse::end_group314,9361

sql/sql_cache.h,3059
#define _SQL_CACHE_H18,806
#define QUERY_CACHE_MIN_ALLOCATION_UNIT	28,1067
#define QUERY_CACHE_DEF_QUERY_HASH_SIZE	31,1143
#define QUERY_CACHE_DEF_TABLE_HASH_SIZE	32,1189
#define QUERY_CACHE_MIN_RESULT_DATA_SIZE	35,1287
#define QUERY_CACHE_MIN_ESTIMATED_QUERIES_NUMBER 41,1435
#define QUERY_CACHE_MEM_BIN_FIRST_STEP_PWR2	46,1568
#define QUERY_CACHE_MEM_BIN_STEP_PWR2	47,1614
#define QUERY_CACHE_MEM_BIN_PARTS_INC	48,1655
#define QUERY_CACHE_MEM_BIN_PARTS_MUL	49,1696
#define QUERY_CACHE_MEM_BIN_SPC_LIM_PWR2	50,1739
#define QUERY_CACHE_MEM_BIN_TRY 54,1888
#define QUERY_CACHE_CLIENT_LONG_FLAG_MASK	57,1963
#define QUERY_CACHE_CHARSET_CONVERT_MASK	58,2010
#define QUERY_CACHE_PACK_ITERATION	61,2082
#define QUERY_CACHE_PACK_LIMIT	62,2120
#define TABLE_COUNTER_TYPE 64,2166
struct Query_cache_block_table74,2357
struct Query_cache_block83,2553
  enum block_type Query_cache_block::block_type85,2580
  enum block_type {FREE,Query_cache_block::block_type::FREE85,2580
  enum block_type {FREE, QUERY,Query_cache_block::block_type::QUERY85,2580
  enum block_type {FREE, QUERY, RESULT,Query_cache_block::block_type::RESULT85,2580
  enum block_type {FREE, QUERY, RESULT, RES_CONT,Query_cache_block::block_type::RES_CONT85,2580
  enum block_type {FREE, QUERY, RESULT, RES_CONT, RES_BEG,Query_cache_block::block_type::RES_BEG85,2580
		   RES_INCOMPLETE,Query_cache_block::block_type::RES_INCOMPLETE86,2639
		   RES_INCOMPLETE, TABLE,Query_cache_block::block_type::TABLE86,2639
		   RES_INCOMPLETE, TABLE, INCOMPLETE}Query_cache_block::block_type::INCOMPLETE86,2639
  inline my_bool is_free(Query_cache_block::is_free100,3146
struct Query_cache_query111,3482
  inline ulonglong found_rows(Query_cache_query::found_rows121,3665
  inline void found_rows(Query_cache_query::found_rows122,3730
  inline Query_cache_block *result(Query_cache_query::result123,3802
  inline void result(Query_cache_query::result124,3858
  inline NET *writer(Query_cache_query::writer125,3912
  inline void writer(Query_cache_query::writer126,3956
  inline ulong length(Query_cache_query::length127,4000
  inline ulong add(Query_cache_query::add128,4045
  inline void length(Query_cache_query::length129,4116
  inline gptr query(Query_cache_query::query130,4172
struct Query_cache_table144,4488
  inline char *db(Query_cache_table::db148,4529
  inline char *table(Query_cache_table::table149,4584
  inline void table(Query_cache_table::table150,4630
  inline gptr data(Query_cache_table::data151,4685
struct Query_cache_result158,4795
  inline gptr data(Query_cache_result::data162,4852
  inline Query_cache_block *parent(Query_cache_result::parent168,5028
  inline void parent Query_cache_result::parent169,5086
struct Query_cache_memory_bin184,5503
  inline void init(Query_cache_memory_bin::init192,5623
struct Query_cache_memory_bin_step202,5752
  inline void init(Query_cache_memory_bin_step::init207,5834
class Query_cache215,5987
  inline void result_size_limit(Query_cache::result_size_limit348,11249

sql/sql_class.h,7921
enum enum_enable_or_disable 30,1017
enum enum_enable_or_disable { LEAVE_AS_IS,enum_enable_or_disable::LEAVE_AS_IS30,1017
enum enum_enable_or_disable { LEAVE_AS_IS, ENABLE,enum_enable_or_disable::ENABLE30,1017
enum enum_enable_or_disable { LEAVE_AS_IS, ENABLE, DISABLE enum_enable_or_disable::DISABLE30,1017
enum enum_ha_read_modes 31,1079
enum enum_ha_read_modes { RFIRST,enum_ha_read_modes::RFIRST31,1079
enum enum_ha_read_modes { RFIRST, RNEXT,enum_ha_read_modes::RNEXT31,1079
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV,enum_ha_read_modes::RPREV31,1079
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST,enum_ha_read_modes::RLAST31,1079
enum enum_ha_read_modes { RFIRST, RNEXT, RPREV, RLAST, RKEY enum_ha_read_modes::RKEY31,1079
enum enum_duplicates 32,1142
enum enum_duplicates { DUP_ERROR,enum_duplicates::DUP_ERROR32,1142
enum enum_duplicates { DUP_ERROR, DUP_REPLACE,enum_duplicates::DUP_REPLACE32,1142
enum enum_duplicates { DUP_ERROR, DUP_REPLACE, DUP_IGNORE enum_duplicates::DUP_IGNORE32,1142
enum enum_log_type 33,1203
enum enum_log_type { LOG_CLOSED,enum_log_type::LOG_CLOSED33,1203
enum enum_log_type { LOG_CLOSED, LOG_TO_BE_OPENED,enum_log_type::LOG_TO_BE_OPENED33,1203
enum enum_log_type { LOG_CLOSED, LOG_TO_BE_OPENED, LOG_NORMAL,enum_log_type::LOG_NORMAL33,1203
enum enum_log_type { LOG_CLOSED, LOG_TO_BE_OPENED, LOG_NORMAL, LOG_NEW,enum_log_type::LOG_NEW33,1203
enum enum_log_type { LOG_CLOSED, LOG_TO_BE_OPENED, LOG_NORMAL, LOG_NEW, LOG_BIN}enum_log_type::LOG_BIN33,1203
enum enum_delay_key_write 34,1285
enum enum_delay_key_write { DELAY_KEY_WRITE_NONE,enum_delay_key_write::DELAY_KEY_WRITE_NONE34,1285
enum enum_delay_key_write { DELAY_KEY_WRITE_NONE, DELAY_KEY_WRITE_ON,enum_delay_key_write::DELAY_KEY_WRITE_ON34,1285
			    DELAY_KEY_WRITE_ALL enum_delay_key_write::DELAY_KEY_WRITE_ALL35,1355
#define LOG_INFO_EOF 38,1408
#define LOG_INFO_IO 39,1432
#define LOG_INFO_INVALID 40,1456
#define LOG_INFO_SEEK 41,1484
#define LOG_INFO_MEM 42,1509
#define LOG_INFO_FATAL 43,1533
#define LOG_INFO_IN_USE 44,1559
#define LOG_CLOSE_INDEX	47,1620
#define LOG_CLOSE_TO_BE_OPENED	48,1647
#define LOG_CLOSE_STOP_EVENT	49,1680
typedef struct st_log_info53,1739
  st_log_info(st_log_info::st_log_info60,1963
  ~st_log_info(st_log_info::~st_log_info61,2038
} LOG_INFO;62,2088
class MYSQL_LOG66,2119
  void reset_bytes_written(MYSQL_LOG::reset_bytes_written108,3528
  void harvest_bytes_written(MYSQL_LOG::harvest_bytes_written112,3588
  void signal_update(MYSQL_LOG::signal_update125,3971
  void set_need_start_event(MYSQL_LOG::set_need_start_event127,4091
  inline bool is_open(MYSQL_LOG::is_open166,5603
  inline char* get_index_fname(MYSQL_LOG::get_index_fname167,5662
  inline char* get_log_fname(MYSQL_LOG::get_log_fname168,5722
  inline pthread_mutex_t* get_log_lock(MYSQL_LOG::get_log_lock169,5779
  inline IO_CACHE* get_log_file(MYSQL_LOG::get_log_file170,5842
  inline void lock_index(MYSQL_LOG::lock_index172,5899
  inline void unlock_index(MYSQL_LOG::unlock_index173,5962
  inline IO_CACHE *get_index_file(MYSQL_LOG::get_index_file174,6029
  inline uint32 get_open_count(MYSQL_LOG::get_open_count175,6088
class CONVERT183,6247
  CONVERT(CONVERT::CONVERT190,6405
  inline void convert(CONVERT::convert193,6607
  inline uint number(CONVERT::number198,6749
typedef struct st_copy_info 201,6793
} COPY_INFO;208,6975
class key_part_spec 211,6990
  key_part_spec(key_part_spec::key_part_spec215,7079
class Alter_drop 219,7163
  enum drop_type Alter_drop::drop_type221,7208
  enum drop_type {KEY,Alter_drop::drop_type::KEY221,7208
  enum drop_type {KEY, COLUMN Alter_drop::drop_type::COLUMN221,7208
  Alter_drop(Alter_drop::Alter_drop224,7284
class Alter_column 229,7387
  Alter_column(Alter_column::Alter_column233,7467
class Key 238,7560
  enum Keytype Key::Keytype240,7598
  enum Keytype { PRIMARY,Key::Keytype::PRIMARY240,7598
  enum Keytype { PRIMARY, UNIQUE,Key::Keytype::UNIQUE240,7598
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE,Key::Keytype::MULTIPLE240,7598
  enum Keytype { PRIMARY, UNIQUE, MULTIPLE, FULLTEXT Key::Keytype::FULLTEXT240,7598
  Key(Key::Key246,7756
  ~Key(Key::~Key249,7917
  const char *name(Key::name250,7929
typedef struct st_mysql_lock254,7972
} MYSQL_LOCK;259,8076
class LEX_COLUMN 262,8092
  LEX_COLUMN LEX_COLUMN::LEX_COLUMN267,8170
class i_string:i_string274,8417
  i_string(i_string::i_string278,8469
  i_string(i_string::i_string279,8493
class i_string_pair:i_string_pair283,8594
  i_string_pair(i_string_pair::i_string_pair288,8664
  i_string_pair(i_string_pair::i_string_pair289,8700
#define THD_SENTRY_MAGIC 295,8805
#define THD_SENTRY_GONE 296,8841
#define THD_CHECK_SENTRY(298,8878
struct system_variables300,8959
class THD 351,10207
  struct st_transactions THD::st_transactions427,13031
    void cleanup(THD::st_transactions::cleanup440,13557
  inline void set_active_vio(THD::set_active_vio506,15719
  inline void clear_active_vio(THD::clear_active_vio512,15866
  inline const char* enter_cond(THD::enter_cond521,16076
  inline void exit_cond(THD::exit_cond530,16336
  inline time_t query_start(THD::query_start538,16569
  inline void	set_time(THD::set_time539,16642
  inline void	end_time(THD::end_time540,16767
  inline void	set_time(THD::set_time541,16818
  inline void	lock_time(THD::lock_time542,16895
  inline void	insert_id(THD::insert_id543,16951
  inline ulonglong insert_id(THD::insert_id545,17032
  inline ulonglong found_rows(THD::found_rows554,17219
  inline bool active_transaction(THD::active_transaction558,17365
  inline gptr alloc(THD::alloc567,17557
  inline gptr calloc(THD::calloc568,17635
  inline char *strdup(THD::strdup575,17786
  inline char *strmake(THD::strmake577,17866
  inline char *memdup(THD::memdup579,17964
  inline char *memdup_w_gap(THD::memdup_w_gap581,18060
  inline gptr trans_alloc(THD::trans_alloc588,18238
  inline void clear_error(THD::clear_error596,18545
#define SYSTEM_THREAD_DELAYED_INSERT 607,18726
#define SYSTEM_THREAD_SLAVE_IO 608,18765
#define SYSTEM_THREAD_SLAVE_SQL 609,18798
class sql_exchange 615,18966
  ~sql_exchange(sql_exchange::~sql_exchange624,19201
class select_result 637,19378
  virtual ~select_result(select_result::~select_result642,19468
  virtual int prepare(select_result::prepare643,19499
  virtual bool initialize_tables select_result::initialize_tables646,19658
  virtual void send_error(select_result::send_error647,19720
  virtual void abort(select_result::abort652,19854
class select_send 656,19885
  select_send(select_send::select_send658,19935
class select_export 665,20063
  select_export(select_export::select_export675,20314
  bool send_fields(select_export::send_fields679,20455
class select_dump 687,20632
  select_dump(select_dump::select_dump694,20784
  bool send_fields(select_dump::send_fields698,20921
class select_insert 706,21098
  select_insert(select_insert::select_insert713,21236
  bool send_fields(select_insert::send_fields721,21511
class select_create:select_create729,21685
  select_create(select_create::select_create739,21914
class select_union 755,22408
  bool send_fields(select_union::send_fields765,22638
typedef struct st_sort_field 774,22811
} SORT_FIELD;780,23069
typedef struct st_sort_buffer 783,23085
} SORT_BUFFER;789,23259
class Table_ident 793,23319
  inline Table_ident(Table_ident::Table_ident797,23403
  inline Table_ident(Table_ident::Table_ident805,23621
  inline void change_db(Table_ident::change_db806,23694
class user_var_entry811,23831
class Unique 827,24149
  inline bool unique_add(Unique::unique_add842,24482
class multi_delete 855,24832
  bool send_fields(multi_delete::send_fields869,25214
class multi_update 878,25472
  bool send_fields(multi_update::send_fields897,26136

sql/sql_crypt.h,147
class SQL_CRYPT 22,861
  SQL_CRYPT(SQL_CRYPT::SQL_CRYPT30,1061
  ~SQL_CRYPT(SQL_CRYPT::~SQL_CRYPT34,1116
  void init(SQL_CRYPT::init35,1134

sql/sql_lex.h,9670
#define LEX_YYSTYPE 33,1065
#define LEX_YYSTYPE 37,1144
enum enum_sql_command 40,1182
  SQLCOM_SELECT,enum_sql_command::SQLCOM_SELECT41,1206
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE,enum_sql_command::SQLCOM_CREATE_TABLE41,1206
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE, SQLCOM_CREATE_INDEX,enum_sql_command::SQLCOM_CREATE_INDEX41,1206
  SQLCOM_SELECT, SQLCOM_CREATE_TABLE, SQLCOM_CREATE_INDEX, SQLCOM_ALTER_TABLE,enum_sql_command::SQLCOM_ALTER_TABLE41,1206
  SQLCOM_UPDATE,enum_sql_command::SQLCOM_UPDATE42,1285
  SQLCOM_UPDATE, SQLCOM_INSERT,enum_sql_command::SQLCOM_INSERT42,1285
  SQLCOM_UPDATE, SQLCOM_INSERT, SQLCOM_INSERT_SELECT,enum_sql_command::SQLCOM_INSERT_SELECT42,1285
  SQLCOM_DELETE,enum_sql_command::SQLCOM_DELETE43,1339
  SQLCOM_DELETE, SQLCOM_TRUNCATE,enum_sql_command::SQLCOM_TRUNCATE43,1339
  SQLCOM_DELETE, SQLCOM_TRUNCATE, SQLCOM_DROP_TABLE,enum_sql_command::SQLCOM_DROP_TABLE43,1339
  SQLCOM_DELETE, SQLCOM_TRUNCATE, SQLCOM_DROP_TABLE, SQLCOM_DROP_INDEX,enum_sql_command::SQLCOM_DROP_INDEX43,1339
  SQLCOM_SHOW_DATABASES,enum_sql_command::SQLCOM_SHOW_DATABASES45,1412
  SQLCOM_SHOW_DATABASES, SQLCOM_SHOW_TABLES,enum_sql_command::SQLCOM_SHOW_TABLES45,1412
  SQLCOM_SHOW_DATABASES, SQLCOM_SHOW_TABLES, SQLCOM_SHOW_FIELDS,enum_sql_command::SQLCOM_SHOW_FIELDS45,1412
  SQLCOM_SHOW_KEYS,enum_sql_command::SQLCOM_SHOW_KEYS46,1477
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES,enum_sql_command::SQLCOM_SHOW_VARIABLES46,1477
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES, SQLCOM_SHOW_LOGS,enum_sql_command::SQLCOM_SHOW_LOGS46,1477
  SQLCOM_SHOW_KEYS, SQLCOM_SHOW_VARIABLES, SQLCOM_SHOW_LOGS, SQLCOM_SHOW_STATUS,enum_sql_command::SQLCOM_SHOW_STATUS46,1477
  SQLCOM_SHOW_INNODB_STATUS,enum_sql_command::SQLCOM_SHOW_INNODB_STATUS47,1558
  SQLCOM_SHOW_PROCESSLIST,enum_sql_command::SQLCOM_SHOW_PROCESSLIST48,1587
  SQLCOM_SHOW_PROCESSLIST, SQLCOM_SHOW_MASTER_STAT,enum_sql_command::SQLCOM_SHOW_MASTER_STAT48,1587
  SQLCOM_SHOW_PROCESSLIST, SQLCOM_SHOW_MASTER_STAT, SQLCOM_SHOW_SLAVE_STAT,enum_sql_command::SQLCOM_SHOW_SLAVE_STAT48,1587
  SQLCOM_SHOW_GRANTS,enum_sql_command::SQLCOM_SHOW_GRANTS49,1663
  SQLCOM_SHOW_GRANTS, SQLCOM_SHOW_CREATE,enum_sql_command::SQLCOM_SHOW_CREATE49,1663
  SQLCOM_LOAD,enum_sql_command::SQLCOM_LOAD51,1706
  SQLCOM_LOAD,SQLCOM_SET_OPTION,enum_sql_command::SQLCOM_SET_OPTION51,1706
  SQLCOM_LOAD,SQLCOM_SET_OPTION,SQLCOM_LOCK_TABLES,enum_sql_command::SQLCOM_LOCK_TABLES51,1706
  SQLCOM_LOAD,SQLCOM_SET_OPTION,SQLCOM_LOCK_TABLES,SQLCOM_UNLOCK_TABLES,enum_sql_command::SQLCOM_UNLOCK_TABLES51,1706
  SQLCOM_GRANT,enum_sql_command::SQLCOM_GRANT52,1779
  SQLCOM_GRANT, SQLCOM_CHANGE_DB,enum_sql_command::SQLCOM_CHANGE_DB52,1779
  SQLCOM_GRANT, SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB,enum_sql_command::SQLCOM_CREATE_DB52,1779
  SQLCOM_GRANT, SQLCOM_CHANGE_DB, SQLCOM_CREATE_DB, SQLCOM_DROP_DB,enum_sql_command::SQLCOM_DROP_DB52,1779
  SQLCOM_REPAIR,enum_sql_command::SQLCOM_REPAIR53,1847
  SQLCOM_REPAIR, SQLCOM_REPLACE,enum_sql_command::SQLCOM_REPLACE53,1847
  SQLCOM_REPAIR, SQLCOM_REPLACE, SQLCOM_REPLACE_SELECT,enum_sql_command::SQLCOM_REPLACE_SELECT53,1847
  SQLCOM_CREATE_FUNCTION,enum_sql_command::SQLCOM_CREATE_FUNCTION54,1904
  SQLCOM_CREATE_FUNCTION, SQLCOM_DROP_FUNCTION,enum_sql_command::SQLCOM_DROP_FUNCTION54,1904
  SQLCOM_REVOKE,enum_sql_command::SQLCOM_REVOKE55,1952
  SQLCOM_REVOKE,SQLCOM_OPTIMIZE,enum_sql_command::SQLCOM_OPTIMIZE55,1952
  SQLCOM_REVOKE,SQLCOM_OPTIMIZE, SQLCOM_CHECK,enum_sql_command::SQLCOM_CHECK55,1952
  SQLCOM_FLUSH,enum_sql_command::SQLCOM_FLUSH56,1999
  SQLCOM_FLUSH, SQLCOM_KILL,enum_sql_command::SQLCOM_KILL56,1999
  SQLCOM_FLUSH, SQLCOM_KILL, SQLCOM_ANALYZE,enum_sql_command::SQLCOM_ANALYZE56,1999
  SQLCOM_ROLLBACK,enum_sql_command::SQLCOM_ROLLBACK57,2044
  SQLCOM_ROLLBACK, SQLCOM_ROLLBACK_TO_SAVEPOINT,enum_sql_command::SQLCOM_ROLLBACK_TO_SAVEPOINT57,2044
  SQLCOM_COMMIT,enum_sql_command::SQLCOM_COMMIT58,2093
  SQLCOM_COMMIT, SQLCOM_SAVEPOINT,enum_sql_command::SQLCOM_SAVEPOINT58,2093
  SQLCOM_SLAVE_START,enum_sql_command::SQLCOM_SLAVE_START59,2128
  SQLCOM_SLAVE_START, SQLCOM_SLAVE_STOP,enum_sql_command::SQLCOM_SLAVE_STOP59,2128
  SQLCOM_BEGIN,enum_sql_command::SQLCOM_BEGIN60,2169
  SQLCOM_BEGIN, SQLCOM_LOAD_MASTER_TABLE,enum_sql_command::SQLCOM_LOAD_MASTER_TABLE60,2169
  SQLCOM_BEGIN, SQLCOM_LOAD_MASTER_TABLE, SQLCOM_CHANGE_MASTER,enum_sql_command::SQLCOM_CHANGE_MASTER60,2169
  SQLCOM_RENAME_TABLE,enum_sql_command::SQLCOM_RENAME_TABLE61,2233
  SQLCOM_RENAME_TABLE, SQLCOM_BACKUP_TABLE,enum_sql_command::SQLCOM_BACKUP_TABLE61,2233
  SQLCOM_RENAME_TABLE, SQLCOM_BACKUP_TABLE, SQLCOM_RESTORE_TABLE,enum_sql_command::SQLCOM_RESTORE_TABLE61,2233
  SQLCOM_RESET,enum_sql_command::SQLCOM_RESET62,2299
  SQLCOM_RESET, SQLCOM_PURGE,enum_sql_command::SQLCOM_PURGE62,2299
  SQLCOM_RESET, SQLCOM_PURGE, SQLCOM_SHOW_BINLOGS,enum_sql_command::SQLCOM_SHOW_BINLOGS62,2299
  SQLCOM_SHOW_OPEN_TABLES,enum_sql_command::SQLCOM_SHOW_OPEN_TABLES63,2350
  SQLCOM_SHOW_OPEN_TABLES, SQLCOM_LOAD_MASTER_DATA,enum_sql_command::SQLCOM_LOAD_MASTER_DATA63,2350
  SQLCOM_HA_OPEN,enum_sql_command::SQLCOM_HA_OPEN64,2402
  SQLCOM_HA_OPEN, SQLCOM_HA_CLOSE,enum_sql_command::SQLCOM_HA_CLOSE64,2402
  SQLCOM_HA_OPEN, SQLCOM_HA_CLOSE, SQLCOM_HA_READ,enum_sql_command::SQLCOM_HA_READ64,2402
  SQLCOM_SHOW_SLAVE_HOSTS,enum_sql_command::SQLCOM_SHOW_SLAVE_HOSTS65,2453
  SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI,enum_sql_command::SQLCOM_DELETE_MULTI65,2453
  SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI, SQLCOM_MULTI_UPDATE,enum_sql_command::SQLCOM_MULTI_UPDATE65,2453
  SQLCOM_SHOW_BINLOG_EVENTS,enum_sql_command::SQLCOM_SHOW_BINLOG_EVENTS66,2522
  SQLCOM_SHOW_BINLOG_EVENTS, SQLCOM_SHOW_NEW_MASTER,enum_sql_command::SQLCOM_SHOW_NEW_MASTER66,2522
  SQLCOM_SHOW_BINLOG_EVENTS, SQLCOM_SHOW_NEW_MASTER, SQLCOM_DO,enum_sql_command::SQLCOM_DO66,2522
  SQLCOM_EMPTY_QUERY,enum_sql_command::SQLCOM_EMPTY_QUERY67,2586
  SQLCOM_ENDenum_sql_command::SQLCOM_END68,2608
enum lex_states71,2625
  STATE_START,lex_states::STATE_START73,2643
  STATE_START, STATE_CHAR,lex_states::STATE_CHAR73,2643
  STATE_START, STATE_CHAR, STATE_IDENT,lex_states::STATE_IDENT73,2643
  STATE_START, STATE_CHAR, STATE_IDENT, STATE_IDENT_SEP,lex_states::STATE_IDENT_SEP73,2643
  STATE_START, STATE_CHAR, STATE_IDENT, STATE_IDENT_SEP, STATE_IDENT_START,lex_states::STATE_IDENT_START73,2643
  STATE_FOUND_IDENT,lex_states::STATE_FOUND_IDENT74,2719
  STATE_FOUND_IDENT, STATE_SIGNED_NUMBER,lex_states::STATE_SIGNED_NUMBER74,2719
  STATE_FOUND_IDENT, STATE_SIGNED_NUMBER, STATE_REAL,lex_states::STATE_REAL74,2719
  STATE_FOUND_IDENT, STATE_SIGNED_NUMBER, STATE_REAL, STATE_HEX_NUMBER,lex_states::STATE_HEX_NUMBER74,2719
  STATE_CMP_OP,lex_states::STATE_CMP_OP75,2791
  STATE_CMP_OP, STATE_LONG_CMP_OP,lex_states::STATE_LONG_CMP_OP75,2791
  STATE_CMP_OP, STATE_LONG_CMP_OP, STATE_STRING,lex_states::STATE_STRING75,2791
  STATE_CMP_OP, STATE_LONG_CMP_OP, STATE_STRING, STATE_COMMENT,lex_states::STATE_COMMENT75,2791
  STATE_CMP_OP, STATE_LONG_CMP_OP, STATE_STRING, STATE_COMMENT, STATE_END,lex_states::STATE_END75,2791
  STATE_OPERATOR_OR_IDENT,lex_states::STATE_OPERATOR_OR_IDENT76,2866
  STATE_OPERATOR_OR_IDENT, STATE_NUMBER_IDENT,lex_states::STATE_NUMBER_IDENT76,2866
  STATE_OPERATOR_OR_IDENT, STATE_NUMBER_IDENT, STATE_INT_OR_REAL,lex_states::STATE_INT_OR_REAL76,2866
  STATE_REAL_OR_POINT,lex_states::STATE_REAL_OR_POINT77,2932
  STATE_REAL_OR_POINT, STATE_BOOL,lex_states::STATE_BOOL77,2932
  STATE_REAL_OR_POINT, STATE_BOOL, STATE_EOL,lex_states::STATE_EOL77,2932
  STATE_REAL_OR_POINT, STATE_BOOL, STATE_EOL, STATE_ESCAPE,lex_states::STATE_ESCAPE77,2932
  STATE_REAL_OR_POINT, STATE_BOOL, STATE_EOL, STATE_ESCAPE, STATE_LONG_COMMENT,lex_states::STATE_LONG_COMMENT77,2932
  STATE_END_LONG_COMMENT,lex_states::STATE_END_LONG_COMMENT78,3012
  STATE_END_LONG_COMMENT, STATE_COLON,lex_states::STATE_COLON78,3012
  STATE_END_LONG_COMMENT, STATE_COLON, STATE_SET_VAR,lex_states::STATE_SET_VAR78,3012
  STATE_END_LONG_COMMENT, STATE_COLON, STATE_SET_VAR, STATE_USER_END,lex_states::STATE_USER_END78,3012
  STATE_HOSTNAME,lex_states::STATE_HOSTNAME79,3082
  STATE_HOSTNAME, STATE_SKIP,lex_states::STATE_SKIP79,3082
  STATE_HOSTNAME, STATE_SKIP, STATE_USER_VARIABLE_DELIMITER,lex_states::STATE_USER_VARIABLE_DELIMITER79,3082
  STATE_HOSTNAME, STATE_SKIP, STATE_USER_VARIABLE_DELIMITER, STATE_SYSTEM_VAR,lex_states::STATE_SYSTEM_VAR79,3082
  STATE_IDENT_OR_KEYWORDlex_states::STATE_IDENT_OR_KEYWORD80,3161
typedef List<Item> List_item;83,3190
typedef struct st_lex_master_info85,3221
} LEX_MASTER_INFO;93,3416
enum sub_select_type96,3437
  UNSPECIFIED_TYPE,sub_select_type::UNSPECIFIED_TYPE98,3460
  UNSPECIFIED_TYPE, UNION_TYPE,sub_select_type::UNION_TYPE98,3460
  UNSPECIFIED_TYPE, UNION_TYPE, INTERSECT_TYPE,sub_select_type::INTERSECT_TYPE98,3460
  UNSPECIFIED_TYPE, UNION_TYPE, INTERSECT_TYPE, EXCEPT_TYPE,sub_select_type::EXCEPT_TYPE98,3460
  UNSPECIFIED_TYPE, UNION_TYPE, INTERSECT_TYPE, EXCEPT_TYPE, OLAP_TYPE,sub_select_type::OLAP_TYPE98,3460
  UNSPECIFIED_TYPE, UNION_TYPE, INTERSECT_TYPE, EXCEPT_TYPE, OLAP_TYPE, NOT_A_SELECTsub_select_type::NOT_A_SELECT98,3460
enum olap_type 101,3549
  UNSPECIFIED_OLAP_TYPE,olap_type::UNSPECIFIED_OLAP_TYPE103,3567
  UNSPECIFIED_OLAP_TYPE, CUBE_TYPE,olap_type::CUBE_TYPE103,3567
  UNSPECIFIED_OLAP_TYPE, CUBE_TYPE, ROLLUP_TYPEolap_type::ROLLUP_TYPE103,3567
typedef struct st_select_lex108,3667
} SELECT_LEX;126,4295
typedef struct st_lex131,4380
} LEX;185,6336
#define current_lex 197,6533

sql/sql_list.h,4194
class Sql_alloc24,870
  static void *operator new(Sql_alloc::operator new27,896
  static void operator delete(Sql_alloc::operator delete28,979
  inline Sql_alloc(Sql_alloc::Sql_alloc31,1085
  inline ~Sql_alloc(Sql_alloc::~Sql_alloc32,1119
  inline Sql_alloc(Sql_alloc::Sql_alloc34,1150
  inline ~Sql_alloc(Sql_alloc::~Sql_alloc35,1174
class list_node 51,1561
  list_node(list_node::list_node56,1638
  list_node(list_node::list_node59,1728
class base_list 71,1909
  inline void empty(base_list::empty79,2010
  inline base_list(base_list::base_list80,2081
  inline base_list(base_list::base_list81,2115
  inline bool push_back(base_list::push_back87,2244
  inline bool push_front(base_list::push_front97,2429
  void remove(base_list::remove110,2659
  inline void *pop(base_list::pop118,2809
  inline void *head(base_list::head127,2995
  inline void **head_ref(base_list::head_ref128,3041
  inline bool is_empty(base_list::is_empty129,3121
  inline list_node *last_ref(base_list::last_ref130,3181
  void after(base_list::after134,3284
class base_list_iterator145,3495
  base_list_iterator(base_list_iterator::base_list_iterator150,3583
  inline void *next(base_list_iterator::next153,3691
  inline void *next_fast(base_list_iterator::next_fast160,3806
  inline void rewind(base_list_iterator::rewind167,3921
  inline void *replace(base_list_iterator::replace171,3978
  void *replace(base_list_iterator::replace177,4123
  inline void remove(base_list_iterator::remove191,4552
  void after(base_list_iterator::after197,4676
  inline void **ref(base_list_iterator::ref203,4831
  inline bool is_last(base_list_iterator::is_last207,4919
template <class T> class List 214,5002
  inline List(List::List217,5060
  inline List(List::List218,5092
  inline bool push_back(List::push_back219,5145
  inline bool push_front(List::push_front220,5211
  inline T* head(List::head221,5279
  inline T** head_ref(List::head_ref222,5332
  inline T* pop(List::pop223,5395
  void delete_elements(List::delete_elements224,5447
template <class T> class List_iterator 237,5666
  List_iterator(List_iterator::List_iterator240,5742
  inline T* operator++(List_iterator::operator++241,5797
  inline T *replace(List_iterator::replace242,5869
  inline T *replace(List_iterator::replace243,5945
  inline void after(List_iterator::after244,6025
  inline T** ref(List_iterator::ref245,6087
template <class T> class List_iterator_fast 249,6163
  inline T *replace(List_iterator_fast::replace252,6247
  inline T *replace(List_iterator_fast::replace253,6294
  inline void remove(List_iterator_fast::remove254,6345
  inline void after(List_iterator_fast::after255,6377
  inline T** ref(List_iterator_fast::ref256,6409
  List_iterator_fast(List_iterator_fast::List_iterator_fast259,6465
  inline T* operator++(List_iterator_fast::operator++260,6525
  inline void rewind(List_iterator_fast::rewind261,6602
struct ilink270,6776
  static void *operator new(ilink::operator new273,6820
  static void operator delete(ilink::operator delete277,6932
  inline ilink(ilink::ilink282,7059
  inline void unlink(ilink::unlink286,7104
  virtual ~ilink(ilink::~ilink293,7278
class base_ilist299,7377
  base_ilist(base_ilist::base_ilist303,7434
  inline bool is_empty(base_ilist::is_empty304,7486
  inline void append(base_ilist::append305,7539
  inline void push_back(base_ilist::push_back310,7650
  inline struct ilink *get(base_ilist::get317,7780
  inline struct ilink *head(base_ilist::head325,7969
class base_ilist_iterator333,8088
  base_ilist_iterator(base_ilist_iterator::base_ilist_iterator338,8174
  void *next(base_ilist_iterator::next340,8274
class I_List 352,8490
  I_List(I_List::I_List355,8533
  inline bool is_empty(I_List::is_empty356,8561
  inline void append(I_List::append357,8629
  inline void push_back(I_List::push_back358,8683
  inline T* get(I_List::get359,8743
  inline T* head(I_List::head360,8797
template <class T> class I_List_iterator 367,8914
  I_List_iterator(I_List_iterator::I_List_iterator370,8993
  inline T* operator++(I_List_iterator::operator++371,9053

sql/sql_map.h,190
class mapped_files 28,1035
class mapped_file47,1491
  mapped_file(mapped_file::mapped_file51,1541
  ~mapped_file(mapped_file::~mapped_file55,1680
  byte *map(mapped_file::map59,1745

sql/sql_repl.h,149
typedef struct st_slave_info3,20
} SLAVE_INFO;12,241
#define KICK_SLAVE(22,513
typedef struct st_load_file_info43,1481
} LOAD_FILE_INFO;53,1706

sql/sql_select.h,2092
typedef struct keyuse_t 27,954
} KEYUSE;32,1084
typedef struct st_table_ref36,1113
} TABLE_REF;47,1645
typedef struct st_cache_field 55,1753
} CACHE_FIELD;60,1865
typedef struct st_join_cache 63,1882
} JOIN_CACHE;68,2050
enum join_type 75,2137
enum join_type { JT_UNKNOWN,join_type::JT_UNKNOWN75,2137
enum join_type { JT_UNKNOWN,JT_SYSTEM,join_type::JT_SYSTEM75,2137
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,join_type::JT_CONST75,2137
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,join_type::JT_EQ_REF75,2137
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,JT_REF,join_type::JT_REF75,2137
enum join_type { JT_UNKNOWN,JT_SYSTEM,JT_CONST,JT_EQ_REF,JT_REF,JT_MAYBE_REF,join_type::JT_MAYBE_REF75,2137
		 JT_ALL,join_type::JT_ALL76,2215
		 JT_ALL, JT_RANGE,join_type::JT_RANGE76,2215
		 JT_ALL, JT_RANGE, JT_NEXT,join_type::JT_NEXT76,2215
		 JT_ALL, JT_RANGE, JT_NEXT, JT_FT}join_type::JT_FT76,2215
typedef struct st_join_table 80,2267
} JOIN_TAB;106,3155
typedef struct st_position 109,3169
} POSITION;113,3281
class TMP_TABLE_PARAM 118,3355
  TMP_TABLE_PARAM(TMP_TABLE_PARAM::TMP_TABLE_PARAM135,3867
  ~TMP_TABLE_PARAM(TMP_TABLE_PARAM::~TMP_TABLE_PARAM139,3996
  inline void cleanup(TMP_TABLE_PARAM::cleanup143,4040
class JOIN 154,4193
typedef struct st_select_check 180,4948
} SELECT_CHECK;182,5007
class store_key 207,5952
  store_key(store_key::store_key215,6124
  virtual ~store_key(store_key::~store_key229,6595
class store_key_field:store_key_field235,6717
  store_key_field(store_key_field::store_key_field240,6819
  bool copy(store_key_field::copy251,7194
  const char *name(store_key_field::name256,7274
class store_key_item 260,7329
  store_key_item(store_key_item::store_key_item265,7404
  bool copy(store_key_item::copy271,7665
  const char *name(store_key_item::name275,7744
class store_key_const_item 279,7795
  store_key_const_item(store_key_const_item::store_key_const_item283,7870
  bool copy(store_key_const_item::copy291,8161
  const char *name(store_key_const_item::name301,8302

sql/sql_sort.h,165
#define MERGEBUFF	19,789
#define MERGEBUFF2	20,810
typedef struct st_buffpek 22,834
} BUFFPEK;28,1149
typedef struct st_sort_param 31,1162
} SORTPARAM;44,1560

sql/sql_string.h,1346
#define NOT_FIXED_DEC	24,917
class String34,1250
  String(String::String40,1338
  String(String::String42,1402
  String(String::String44,1496
  String(String::String46,1604
  String(String::String48,1708
  String(String::String50,1803
  static void *operator new(String::operator new54,1930
  static void operator delete(String::operator delete55,2014
  ~String(String::~String57,2122
  inline uint32 length(String::length59,2147
  inline uint32 alloced_length(String::alloced_length60,2200
  inline char& operator [] String::operator []61,2265
  inline void length(String::length62,2328
  inline bool is_empty(String::is_empty63,2382
  inline const char *ptr(String::ptr64,2437
  inline char *c_ptr(String::c_ptr65,2486
  inline char *c_ptr_quick(String::c_ptr_quick71,2622
  void set(String::set78,2745
  inline void set(String::set87,2998
  inline void set(String::set92,3136
  inline void set_quick(String::set_quick97,3283
  inline void free(String::free108,3556
  inline bool alloc(String::alloc119,3731
  inline void shrink(String::shrink127,3963
  bool is_alloced(String::is_alloced144,4294
  inline String& operator = String::operator =145,4334
  inline bool append(String::append166,5150
  inline void caseup(String::caseup182,5436
  inline void casedn(String::casedn183,5489

sql/sql_udf.h,572
enum Item_udftype 24,888
enum Item_udftype {UDFTYPE_FUNCTION=UDFTYPE_FUNCTION24,888
enum Item_udftype {UDFTYPE_FUNCTION=1,UDFTYPE_AGGREGATE}UDFTYPE_AGGREGATE24,888
typedef struct st_udf_func26,947
} udf_func;40,1196
class udf_handler 45,1257
  udf_handler(udf_handler::udf_handler60,1517
  const char *name(udf_handler::name64,1629
  Item_result result_type udf_handler::result_type65,1690
  double val(udf_handler::val70,1910
  longlong val_int(udf_handler::val_int89,2352
  void reset(udf_handler::reset108,2810
  void add(udf_handler::add121,3172

sql/stacktrace.h,193
#undef HAVE_STACKTRACE23,908
#define HAVE_STACKTRACE24,931
#define init_stacktrace(29,1008
#define init_stacktrace(37,1408
#define print_stacktrace(38,1437
#define safe_print_str(39,1470

sql/structs.h,5558
typedef struct st_date_format 23,855
} DATE_FORMAT;25,967
typedef struct st_keyfile_info 28,984
} KEYFILE_INFO;47,1857
typedef struct st_key_part_info 50,1875
} KEY_PART_INFO 61,2304
typedef struct st_key 64,2324
} KEY;77,2764
typedef struct st_reginfo 82,2796
} REGINFO;87,3022
typedef struct st_read_record 95,3132
} READ_RECORD;110,3684
enum timestamp_type 112,3700
enum timestamp_type { TIMESTAMP_NONE,timestamp_type::TIMESTAMP_NONE112,3700
enum timestamp_type { TIMESTAMP_NONE, TIMESTAMP_DATE,timestamp_type::TIMESTAMP_DATE112,3700
enum timestamp_type { TIMESTAMP_NONE, TIMESTAMP_DATE, TIMESTAMP_FULL,timestamp_type::TIMESTAMP_FULL112,3700
		      TIMESTAMP_TIME timestamp_type::TIMESTAMP_TIME113,3770
typedef struct st_time 115,3797
} TIME;119,3916
} INTERVAL;125,4022
enum SHOW_TYPE128,4036
  SHOW_UNDEF,SHOW_TYPE::SHOW_UNDEF130,4053
  SHOW_LONG,SHOW_TYPE::SHOW_LONG131,4067
  SHOW_LONG, SHOW_LONGLONG,SHOW_TYPE::SHOW_LONGLONG131,4067
  SHOW_LONG, SHOW_LONGLONG, SHOW_INT,SHOW_TYPE::SHOW_INT131,4067
  SHOW_LONG, SHOW_LONGLONG, SHOW_INT, SHOW_CHAR,SHOW_TYPE::SHOW_CHAR131,4067
  SHOW_LONG, SHOW_LONGLONG, SHOW_INT, SHOW_CHAR, SHOW_CHAR_PTR,SHOW_TYPE::SHOW_CHAR_PTR131,4067
  SHOW_LONG, SHOW_LONGLONG, SHOW_INT, SHOW_CHAR, SHOW_CHAR_PTR, SHOW_BOOL,SHOW_TYPE::SHOW_BOOL131,4067
  SHOW_MY_BOOL,SHOW_TYPE::SHOW_MY_BOOL132,4142
  SHOW_MY_BOOL, SHOW_OPENTABLES,SHOW_TYPE::SHOW_OPENTABLES132,4142
  SHOW_MY_BOOL, SHOW_OPENTABLES, SHOW_STARTTIME,SHOW_TYPE::SHOW_STARTTIME132,4142
  SHOW_MY_BOOL, SHOW_OPENTABLES, SHOW_STARTTIME, SHOW_QUESTION,SHOW_TYPE::SHOW_QUESTION132,4142
  SHOW_LONG_CONST,SHOW_TYPE::SHOW_LONG_CONST133,4206
  SHOW_LONG_CONST, SHOW_INT_CONST,SHOW_TYPE::SHOW_INT_CONST133,4206
  SHOW_LONG_CONST, SHOW_INT_CONST, SHOW_HAVE,SHOW_TYPE::SHOW_HAVE133,4206
  SHOW_LONG_CONST, SHOW_INT_CONST, SHOW_HAVE, SHOW_SYS,SHOW_TYPE::SHOW_SYS133,4206
  SHOW_LONG_CONST, SHOW_INT_CONST, SHOW_HAVE, SHOW_SYS, SHOW_HA_ROWS,SHOW_TYPE::SHOW_HA_ROWS133,4206
  SHOW_SSL_CTX_SESS_ACCEPT,SHOW_TYPE::SHOW_SSL_CTX_SESS_ACCEPT135,4296
  SHOW_SSL_CTX_SESS_ACCEPT, 	SHOW_SSL_CTX_SESS_ACCEPT_GOOD,SHOW_TYPE::SHOW_SSL_CTX_SESS_ACCEPT_GOOD135,4296
  SHOW_SSL_GET_VERSION,SHOW_TYPE::SHOW_SSL_GET_VERSION136,4356
  SHOW_SSL_GET_VERSION, 	SHOW_SSL_CTX_GET_SESSION_CACHE_MODE,SHOW_TYPE::SHOW_SSL_CTX_GET_SESSION_CACHE_MODE136,4356
  SHOW_SSL_CTX_SESS_CB_HITS,SHOW_TYPE::SHOW_SSL_CTX_SESS_CB_HITS137,4418
  SHOW_SSL_CTX_SESS_CB_HITS, 	SHOW_SSL_CTX_SESS_ACCEPT_RENEGOTIATE,SHOW_TYPE::SHOW_SSL_CTX_SESS_ACCEPT_RENEGOTIATE137,4418
  SHOW_SSL_CTX_SESS_NUMBER,SHOW_TYPE::SHOW_SSL_CTX_SESS_NUMBER138,4486
  SHOW_SSL_CTX_SESS_NUMBER, 	SHOW_SSL_SESSION_REUSED,SHOW_TYPE::SHOW_SSL_SESSION_REUSED138,4486
  SHOW_SSL_CTX_SESS_GET_CACHE_SIZE,SHOW_TYPE::SHOW_SSL_CTX_SESS_GET_CACHE_SIZE139,4540
  SHOW_SSL_CTX_SESS_GET_CACHE_SIZE, SHOW_SSL_GET_CIPHER,SHOW_TYPE::SHOW_SSL_GET_CIPHER139,4540
  SHOW_SSL_GET_DEFAULT_TIMEOUT,SHOW_TYPE::SHOW_SSL_GET_DEFAULT_TIMEOUT140,4597
  SHOW_SSL_GET_DEFAULT_TIMEOUT,	SHOW_SSL_GET_VERIFY_MODE,SHOW_TYPE::SHOW_SSL_GET_VERIFY_MODE140,4597
  SHOW_SSL_CTX_GET_VERIFY_MODE,SHOW_TYPE::SHOW_SSL_CTX_GET_VERIFY_MODE141,4655
  SHOW_SSL_CTX_GET_VERIFY_MODE, SHOW_SSL_GET_VERIFY_DEPTH,SHOW_TYPE::SHOW_SSL_GET_VERIFY_DEPTH141,4655
  SHOW_SSL_CTX_GET_VERIFY_DEPTH,SHOW_TYPE::SHOW_SSL_CTX_GET_VERIFY_DEPTH142,4714
  SHOW_SSL_CTX_GET_VERIFY_DEPTH, SHOW_SSL_CTX_SESS_CONNECT,SHOW_TYPE::SHOW_SSL_CTX_SESS_CONNECT142,4714
  SHOW_SSL_CTX_SESS_CONNECT_RENEGOTIATE,SHOW_TYPE::SHOW_SSL_CTX_SESS_CONNECT_RENEGOTIATE143,4774
  SHOW_SSL_CTX_SESS_CONNECT_RENEGOTIATE, SHOW_SSL_CTX_SESS_CONNECT_GOOD,SHOW_TYPE::SHOW_SSL_CTX_SESS_CONNECT_GOOD143,4774
  SHOW_SSL_CTX_SESS_HITS,SHOW_TYPE::SHOW_SSL_CTX_SESS_HITS144,4847
  SHOW_SSL_CTX_SESS_HITS, SHOW_SSL_CTX_SESS_MISSES,SHOW_TYPE::SHOW_SSL_CTX_SESS_MISSES144,4847
  SHOW_SSL_CTX_SESS_TIMEOUTS,SHOW_TYPE::SHOW_SSL_CTX_SESS_TIMEOUTS145,4899
  SHOW_SSL_CTX_SESS_TIMEOUTS, SHOW_SSL_CTX_SESS_CACHE_FULL,SHOW_TYPE::SHOW_SSL_CTX_SESS_CACHE_FULL145,4899
  SHOW_SSL_GET_CIPHER_LIST,SHOW_TYPE::SHOW_SSL_GET_CIPHER_LIST146,4959
  SHOW_RPL_STATUS,SHOW_TYPE::SHOW_RPL_STATUS148,5013
  SHOW_RPL_STATUS, SHOW_SLAVE_RUNNINGSHOW_TYPE::SHOW_SLAVE_RUNNING148,5013
enum SHOW_COMP_OPTION 151,5055
enum SHOW_COMP_OPTION { SHOW_OPTION_YES,SHOW_COMP_OPTION::SHOW_OPTION_YES151,5055
enum SHOW_COMP_OPTION { SHOW_OPTION_YES, SHOW_OPTION_NO,SHOW_COMP_OPTION::SHOW_OPTION_NO151,5055
enum SHOW_COMP_OPTION { SHOW_OPTION_YES, SHOW_OPTION_NO, SHOW_OPTION_DISABLED}SHOW_COMP_OPTION::SHOW_OPTION_DISABLED151,5055
typedef int *(*update_var)update_var152,5135
typedef struct show_var_st 154,5193
} SHOW_VAR;158,5275
typedef struct lex_string 160,5288
} LEX_STRING;163,5344
typedef struct	st_lex_user 165,5359
} LEX_USER;167,5423
typedef struct user_resources 170,5437
} USER_RESOURCES;172,5515
typedef struct  user_conn 174,5534
} USER_CONN;179,5703
#define REG_MAKE_DUPP	181,5744
#define REG_NEW_RECORD	182,5807
#define REG_UPDATE	183,5871
#define REG_DELETE	184,5914
#define REG_PROG	185,5962
#define REG_CLEAR_AFTER_WRITE	186,6016
#define REG_MAY_BE_UPDATED	187,6049
#define REG_AUTO_UPDATE	188,6079
#define REG_OVERWRITE	189,6147
#define REG_SKIP_DUP	190,6174
#define STATUS_NO_RECORD	193,6229
#define STATUS_GARBAGE	194,6286
#define STATUS_NOT_FOUND	195,6312
#define STATUS_NO_PARENT	196,6379
#define STATUS_NOT_READ	197,6439
#define STATUS_UPDATED	198,6490
#define STATUS_NULL_ROW	199,6552
#define STATUS_DELETED	200,6609

sql/table.h,715
typedef struct st_order 25,914
} ORDER;34,1288
typedef struct st_grant_info36,1298
} GRANT_INFO;42,1416
enum tmp_table_type 44,1431
enum tmp_table_type {NO_TMP_TABLE=tmp_table_type::NO_TMP_TABLE44,1431
enum tmp_table_type {NO_TMP_TABLE=0, TMP_TABLE=tmp_table_type::TMP_TABLE44,1431
enum tmp_table_type {NO_TMP_TABLE=0, TMP_TABLE=1, TRANSACTIONAL_TMP_TABLE=tmp_table_type::TRANSACTIONAL_TMP_TABLE44,1431
struct st_table 51,1584
#define JOIN_TYPE_LEFT	141,4920
#define JOIN_TYPE_RIGHT	142,4945
typedef struct st_table_list144,4972
} TABLE_LIST;161,5661
typedef struct st_changed_table_list164,5677
} CHANGED_TABLE_LIST;169,5796
typedef struct st_open_table_list172,5820
} OPEN_TABLE_LIST;177,5934

sql/unireg.h,2362
#define NO_ALARM_LOOP	23,874
#define LANGUAGE	28,1011
#define ERRMSG_FILE	29,1039
#define TEMP_PREFIX	30,1072
#define LOG_PREFIX	31,1097
#define PROGDIR	32,1121
#define DATADIR	34,1161
#define SHAREDIR	37,1210
#define ER(40,1244
#define ER_SAFE(41,1276
#define ERRMAPP 44,1378
#define LIBLEN 45,1427
#define MAX_DBKEY_LENGTH 46,1484
#define MAX_FIELD_NAME 48,1584
#define MAX_SYS_VAR_LENGTH 49,1643
#define MAX_KEY 50,1673
#define MAX_REF_PARTS 51,1715
#define MAX_KEY_LENGTH 52,1770
#define MAX_REFLENGTH 54,1844
#define MAX_REFLENGTH 56,1909
#define MAX_HOSTNAME 58,1975
#define MAX_FIELD_WIDTH 60,2029
#define MAX_TABLES	61,2085
#define RAND_TABLE_BIT	62,2153
#define MAX_FIELDS	63,2221
#define MAX_SORT_MEMORY 65,2277
#define MIN_SORT_MEMORY 66,2329
#define EXTRA_RECORDS	67,2379
#define SCROLL_EXTRA	68,2434
#define FIELD_NAME_USED 69,2484
#define FORM_NAME_USED	70,2556
#define FIELD_NR_MASK	71,2626
#define FERR	72,2681
#define CREATE_MODE	73,2730
#define NAMES_SEP_CHAR	74,2786
#define READ_RECORD_BUFFER	76,2844
#define DISK_BUFFER_SIZE	77,2916
#define POSTFIX_ERROR	78,2986
#define ME_INFO 80,3018
#define ME_ERROR 81,3071
#define MYF_RW 82,3121
#define SPECIAL_USE_LOCKS	84,3187
#define SPECIAL_NO_NEW_FUNC	85,3242
#define SPECIAL_SKIP_SHOW_DB 86,3298
#define SPECIAL_WAIT_IF_LOCKED	87,3374
#define SPECIAL_SAME_DB_NAME 88,3438
#define SPECIAL_ENGLISH 89,3501
#define SPECIAL_NO_RESOLVE 90,3565
#define SPECIAL_NO_PRIOR	91,3628
#define SPECIAL_BIG_SELECTS	92,3689
#define SPECIAL_NO_HOST_CACHE	93,3750
#define SPECIAL_LONG_LOG_FORMAT 94,3809
#define SPECIAL_SAFE_MODE	95,3846
#define store_record(98,3900
#define restore_record(99,3994
#define cmp_record(100,4090
#define empty_record(101,4176
#define READ_ALL	108,4381
#define CHANGE_FRM	109,4436
#define READ_KEYINFO	110,4493
#define EXTRA_RECORD	111,4549
#define DONT_OPEN_TABLES	112,4612
#define DONT_OPEN_MASTER_REG	113,4677
#define EXTRA_LONG_RECORD	114,4747
#define COMPUTE_TYPES	115,4810
#define SEARCH_PRG	116,4871
#define READ_USED_NAMES	117,4932
#define DONT_GIVE_ERROR	118,4992
#define READ_SCREENS	119,5058
#define DELAYED_OPEN	120,5123
#define SC_INFO_LENGTH 122,5174
#define TE_INFO_LENGTH 123,5227
#define MTYP_NOEMPTY_BIT 124,5252
#define MIN_TURBOBM_PATTERN_LEN 131,5446
#define BIN_LOG_HEADER_SIZE 139,5622

strings/t_ctype.h,5101
#define _t_ctype_h33,1352
typedef unsigned char tchar;35,1372
#define TOT_LEVELS 37,1402
#define LAST_LEVEL 38,1423
#define IGNORE 40,1467
enum l1_symbols 44,1516
    L1_08 45,1534
    L1_08 = TOT_LEVELS,45,1534
    L1_18,46,1558
    L1_28,47,1569
    L1_38,48,1580
    L1_48,49,1591
    L1_58,50,1602
    L1_68,51,1613
    L1_78,52,1624
    L1_88,53,1635
    L1_98,54,1646
    L1_A8,55,1657
    L1_B8,56,1668
    L1_C8,57,1679
    L1_D8,58,1690
    L1_E8,59,1701
    L1_F8,60,1712
    L1_G8,61,1723
    L1_H8,62,1734
    L1_I8,63,1745
    L1_J8,64,1756
    L1_K8,65,1767
    L1_L8,66,1778
    L1_M8,67,1789
    L1_N8,68,1800
    L1_O8,69,1811
    L1_P8,70,1822
    L1_Q8,71,1833
    L1_R8,72,1844
    L1_S8,73,1855
    L1_T8,74,1866
    L1_U8,75,1877
    L1_V8,76,1888
    L1_W8,77,1899
    L1_X8,78,1910
    L1_Y8,79,1921
    L1_Z8,80,1932
    L1_KO_KAI,81,1943
    L1_KHO_KHAI,82,1958
    L1_KHO_KHUAT,83,1975
    L1_KHO_KHWAI,84,1993
    L1_KHO_KHON,85,2011
    L1_KHO_RAKHANG,86,2028
    L1_NGO_NGU,87,2048
    L1_CHO_CHAN,88,2064
    L1_CHO_CHING,89,2081
    L1_CHO_CHANG,90,2099
    L1_SO_SO,91,2117
    L1_CHO_CHOE,92,2131
    L1_YO_YING,93,2148
    L1_DO_CHADA,94,2164
    L1_TO_PATAK,95,2181
    L1_THO_THAN,96,2198
    L1_THO_NANGMONTHO,97,2215
    L1_THO_PHUTHAO,98,2238
    L1_NO_NEN,99,2258
    L1_DO_DEK,100,2273
    L1_TO_TAO,101,2288
    L1_THO_THUNG,102,2303
    L1_THO_THAHAN,103,2321
    L1_THO_THONG,104,2340
    L1_NO_NU,105,2358
    L1_BO_BAIMAI,106,2372
    L1_PO_PLA,107,2390
    L1_PHO_PHUNG,108,2405
    L1_FO_FA,109,2423
    L1_PHO_PHAN,110,2437
    L1_FO_FAN,111,2454
    L1_PHO_SAMPHAO,112,2469
    L1_MO_MA,113,2489
    L1_YO_YAK,114,2503
    L1_RO_RUA,115,2518
    L1_RU,116,2533
    L1_LO_LING,117,2544
    L1_LU,118,2560
    L1_WO_WAEN,119,2571
    L1_SO_SALA,120,2587
    L1_SO_RUSI,121,2603
    L1_SO_SUA,122,2619
    L1_HO_HIP,123,2634
    L1_LO_CHULA,124,2649
    L1_O_ANG,125,2666
    L1_HO_NOKHUK,126,2680
    L1_NKHIT,127,2698
    L1_SARA_A,128,2712
    L1_MAI_HAN_AKAT,129,2727
    L1_SARA_AA,130,2748
    L1_SARA_AM,131,2764
    L1_SARA_I,132,2780
    L1_SARA_II,133,2795
    L1_SARA_UE,134,2811
    L1_SARA_UEE,135,2827
    L1_SARA_U,136,2844
    L1_SARA_UU,137,2859
    L1_SARA_E,138,2875
    L1_SARA_AE,139,2890
    L1_SARA_O,140,2906
    L1_SARA_AI_MAIMUAN,141,2921
    L1_SARA_AI_MAIMALAI142,2945
enum l2_symbols 146,3003
    L2_BLANK 147,3021
    L2_BLANK = TOT_LEVELS,147,3021
    L2_THAII,148,3048
    L2_YAMAK,149,3062
    L2_PINTHU,150,3076
    L2_GARAN,151,3091
    L2_TYKHU,152,3105
    L2_TONE1,153,3119
    L2_TONE2,154,3133
    L2_TONE3,155,3147
    L2_TONE4156,3161
enum l3_symbols 160,3208
	L3_BLANK 161,3226
	L3_BLANK = TOT_LEVELS,161,3226
    L3_SPACE,162,3250
    L3_NB_SACE,163,3264
    L3_LOW_LINE,164,3280
    L3_HYPHEN,165,3297
    L3_COMMA,166,3312
    L3_SEMICOLON,167,3326
    L3_COLON,168,3344
    L3_EXCLAMATION,169,3358
    L3_QUESTION,170,3378
    L3_SOLIDUS,171,3395
    L3_FULL_STOP,172,3411
    L3_PAIYAN_NOI,173,3429
    L3_MAI_YAMOK,174,3448
    L3_GRAVE,175,3466
    L3_CIRCUMFLEX,176,3480
    L3_TILDE,177,3499
    L3_APOSTROPHE,178,3513
    L3_QUOTATION,179,3532
    L3_L_PARANTHESIS,180,3550
    L3_L_BRACKET,181,3572
    L3_L_BRACE,182,3590
    L3_R_BRACE,183,3606
    L3_R_BRACKET,184,3622
    L3_R_PARENTHESIS,185,3640
    L3_AT,186,3662
    L3_BAHT,187,3673
    L3_DOLLAR,188,3686
    L3_FONGMAN,189,3701
    L3_ANGKHANKHU,190,3717
    L3_KHOMUT,191,3736
    L3_ASTERISK,192,3751
    L3_BK_SOLIDUS,193,3768
    L3_AMPERSAND,194,3787
    L3_NUMBER,195,3805
    L3_PERCENT,196,3820
    L3_PLUS,197,3836
    L3_LESS_THAN,198,3849
    L3_EQUAL,199,3867
    L3_GREATER_THAN,200,3881
    L3_V_LINE201,3902
enum l4_symbols 205,3950
    L4_BLANK 206,3968
    L4_BLANK = TOT_LEVELS,206,3968
    L4_MIN,207,3995
    L4_CAP,208,4007
    L4_EXT209,4019
enum level_symbols 212,4034
    L_UPRUPR 213,4055
    L_UPRUPR = TOT_LEVELS,213,4055
    L_UPPER,214,4082
    L_MIDDLE,215,4095
    L_LOWER216,4109
#define	_is(219,4125
#define _level	220,4169
#define _consnt	221,4188
#define _ldvowel	222,4209
#define _fllwvowel	223,4230
#define _uprvowel	224,4253
#define _lwrvowel	225,4276
#define _tone	226,4299
#define _diacrt1	227,4319
#define _diacrt2	228,4342
#define _combine	229,4365
#define _stone	230,4388
#define _tdig	231,4410
#define _rearvowel	232,4432
#define _diacrt	233,4489
#define levelof(234,4529
#define isthai(235,4569
#define istalpha(236,4603
#define isconsnt(238,4718
#define isldvowel(239,4760
#define isfllwvowel(240,4803
#define ismidvowel(241,4850
#define isuprvowel(242,4907
#define islwrvowel(243,4952
#define isuprlwrvowel(244,4997
#define isrearvowel(245,5058
#define isvowel(246,5105
#define istone(247,5164
#define isunldable(248,5207
#define iscombinable(249,5281
#define istdigit(250,5327
#define isstone(251,5370
#define isdiacrt1(252,5414
#define isdiacrt2(253,5456
#define isdiacrt(254,5498

vio/vio_priv.h,115
#define DONT_MAP_VIO19,804
enum vio_ssl_acceptorfd_state49,1854
  state_connect 51,1886
  state_accept 52,1913

sql/sql_yacc.h,21256
# define BISON_SQL_YACC_H27,1173
# define YYTOKENTYPE31,1235
   enum yytokentype 34,1359
     END_OF_INPUT 35,1381
     CLOSE_SYM 36,1406
     HANDLER_SYM 37,1428
     LAST_SYM 38,1452
     NEXT_SYM 39,1473
     PREV_SYM 40,1494
     EQ 41,1515
     EQUAL_SYM 42,1530
     GE 43,1552
     GT_SYM 44,1567
     LE 45,1586
     LT 46,1601
     NE 47,1616
     IS 48,1631
     SHIFT_LEFT 49,1646
     SHIFT_RIGHT 50,1669
     SET_VAR 51,1693
     ABORT_SYM 52,1713
     ADD 53,1735
     AFTER_SYM 54,1751
     ALTER 55,1773
     ANALYZE_SYM 56,1791
     AVG_SYM 57,1815
     BEGIN_SYM 58,1835
     BINLOG_SYM 59,1857
     CHANGE 60,1880
     CLIENT_SYM 61,1899
     COMMENT_SYM 62,1922
     COMMIT_SYM 63,1946
     COUNT_SYM 64,1969
     CREATE 65,1991
     CROSS 66,2010
     CUBE_SYM 67,2028
     DELETE_SYM 68,2049
     DO_SYM 69,2072
     DROP 70,2091
     EVENTS_SYM 71,2108
     EXECUTE_SYM 72,2131
     FLUSH_SYM 73,2155
     INSERT 74,2177
     IO_THREAD 75,2196
     KILL_SYM 76,2218
     LOAD 77,2239
     LOCKS_SYM 78,2256
     LOCK_SYM 79,2278
     MASTER_SYM 80,2299
     MAX_SYM 81,2322
     MIN_SYM 82,2342
     NONE_SYM 83,2362
     OPTIMIZE 84,2383
     PURGE 85,2404
     REPAIR 86,2422
     REPLICATION 87,2441
     RESET_SYM 88,2465
     ROLLBACK_SYM 89,2487
     ROLLUP_SYM 90,2512
     SAVEPOINT_SYM 91,2535
     SELECT_SYM 92,2561
     SHOW 93,2584
     SLAVE 94,2601
     SQL_THREAD 95,2619
     START_SYM 96,2642
     STD_SYM 97,2664
     STOP_SYM 98,2684
     SUM_SYM 99,2705
     SUPER_SYM 100,2725
     TRUNCATE_SYM 101,2747
     UNLOCK_SYM 102,2772
     UPDATE_SYM 103,2795
     ACTION 104,2818
     AGGREGATE_SYM 105,2837
     ALL 106,2863
     AND 107,2879
     AS 108,2895
     ASC 109,2910
     AUTO_INC 110,2926
     AVG_ROW_LENGTH 111,2947
     BACKUP_SYM 112,2974
     BERKELEY_DB_SYM 113,2997
     BINARY 114,3025
     BIT_SYM 115,3044
     BOOL_SYM 116,3064
     BOOLEAN_SYM 117,3085
     BOTH 118,3109
     BY 119,3126
     CACHE_SYM 120,3141
     CASCADE 121,3163
     CAST_SYM 122,3183
     CHARSET 123,3204
     CHECKSUM_SYM 124,3224
     CHECK_SYM 125,3249
     COMMITTED_SYM 126,3271
     COLUMNS 127,3297
     COLUMN_SYM 128,3317
     CONCURRENT 129,3340
     CONSTRAINT 130,3363
     CONVERT_SYM 131,3386
     DATABASES 132,3410
     DATA_SYM 133,3432
     DEFAULT 134,3453
     DELAYED_SYM 135,3473
     DELAY_KEY_WRITE_SYM 136,3497
     DESC 137,3529
     DESCRIBE 138,3546
     DES_KEY_FILE 139,3567
     DISABLE_SYM 140,3592
     DISTINCT 141,3616
     DYNAMIC_SYM 142,3637
     ENABLE_SYM 143,3661
     ENCLOSED 144,3684
     ESCAPED 145,3705
     DIRECTORY_SYM 146,3725
     ESCAPE_SYM 147,3751
     EXISTS 148,3774
     EXTENDED_SYM 149,3793
     FILE_SYM 150,3818
     FIRST_SYM 151,3839
     FIXED_SYM 152,3861
     FLOAT_NUM 153,3883
     FORCE_SYM 154,3905
     FOREIGN 155,3927
     FROM 156,3947
     FULL 157,3964
     FULLTEXT_SYM 158,3981
     GLOBAL_SYM 159,4006
     GRANT 160,4029
     GRANTS 161,4047
     GREATEST_SYM 162,4066
     GROUP 163,4091
     HAVING 164,4109
     HEAP_SYM 165,4128
     HEX_NUM 166,4149
     HIGH_PRIORITY 167,4169
     HOSTS_SYM 168,4195
     IDENT 169,4217
     IGNORE_SYM 170,4235
     INDEX 171,4258
     INDEXES 172,4276
     INFILE 173,4296
     INNER_SYM 174,4315
     INNOBASE_SYM 175,4337
     INTO 176,4362
     IN_SYM 177,4379
     ISOLATION 178,4398
     ISAM_SYM 179,4420
     JOIN_SYM 180,4441
     KEYS 181,4462
     KEY_SYM 182,4479
     LEADING 183,4499
     LEAST_SYM 184,4519
     LEVEL_SYM 185,4541
     LEX_HOSTNAME 186,4563
     LIKE 187,4588
     LINES 188,4605
     LOCAL_SYM 189,4623
     LOG_SYM 190,4645
     LOGS_SYM 191,4665
     LONG_NUM 192,4686
     LONG_SYM 193,4707
     LOW_PRIORITY 194,4728
     MASTER_HOST_SYM 195,4753
     MASTER_USER_SYM 196,4781
     MASTER_LOG_FILE_SYM 197,4809
     MASTER_LOG_POS_SYM 198,4841
     MASTER_PASSWORD_SYM 199,4872
     MASTER_PORT_SYM 200,4904
     MASTER_CONNECT_RETRY_SYM 201,4932
     MASTER_SERVER_ID_SYM 202,4969
     RELAY_LOG_FILE_SYM 203,5002
     RELAY_LOG_POS_SYM 204,5033
     MATCH 205,5063
     MAX_ROWS 206,5081
     MAX_CONNECTIONS_PER_HOUR 207,5102
     MAX_QUERIES_PER_HOUR 208,5139
     MAX_UPDATES_PER_HOUR 209,5172
     MEDIUM_SYM 210,5205
     MERGE_SYM 211,5228
     MEMORY_SYM 212,5250
     MIN_ROWS 213,5273
     MYISAM_SYM 214,5294
     NATIONAL_SYM 215,5317
     NATURAL 216,5342
     NEW_SYM 217,5362
     NCHAR_SYM 218,5382
     NOT 219,5404
     NO_SYM 220,5420
     NULL_SYM 221,5439
     NUM 222,5460
     OFFSET_SYM 223,5476
     ON 224,5499
     OPEN_SYM 225,5514
     OPTION 226,5535
     OPTIONALLY 227,5554
     OR 228,5577
     OR_OR_CONCAT 229,5592
     ORDER_SYM 230,5617
     OUTER 231,5639
     OUTFILE 232,5657
     DUMPFILE 233,5677
     PACK_KEYS_SYM 234,5698
     PARTIAL 235,5724
     PRIMARY_SYM 236,5744
     PRIVILEGES 237,5768
     PROCESS 238,5791
     PROCESSLIST_SYM 239,5811
     QUERY_SYM 240,5839
     RAID_0_SYM 241,5861
     RAID_STRIPED_SYM 242,5884
     RAID_TYPE 243,5913
     RAID_CHUNKS 244,5935
     RAID_CHUNKSIZE 245,5959
     READ_SYM 246,5986
     REAL_NUM 247,6007
     REFERENCES 248,6028
     REGEXP 249,6051
     RELOAD 250,6070
     RENAME 251,6089
     REPEATABLE_SYM 252,6108
     REQUIRE_SYM 253,6135
     RESOURCES 254,6159
     RESTORE_SYM 255,6181
     RESTRICT 256,6205
     REVOKE 257,6226
     ROWS_SYM 258,6245
     ROW_FORMAT_SYM 259,6266
     ROW_SYM 260,6293
     SET 261,6313
     SERIALIZABLE_SYM 262,6329
     SESSION_SYM 263,6358
     SHUTDOWN 264,6382
     SSL_SYM 265,6403
     STARTING 266,6423
     STATUS_SYM 267,6444
     STRAIGHT_JOIN 268,6467
     SUBJECT_SYM 269,6493
     TABLES 270,6517
     TABLE_SYM 271,6536
     TEMPORARY 272,6558
     TERMINATED 273,6580
     TEXT_STRING 274,6603
     TO_SYM 275,6627
     TRAILING 276,6646
     TRANSACTION_SYM 277,6667
     TYPE_SYM 278,6695
     FUNC_ARG0 279,6716
     FUNC_ARG1 280,6738
     FUNC_ARG2 281,6760
     FUNC_ARG3 282,6782
     UDF_RETURNS_SYM 283,6804
     UDF_SONAME_SYM 284,6832
     UDF_SYM 285,6859
     UNCOMMITTED_SYM 286,6879
     UNION_SYM 287,6907
     UNIQUE_SYM 288,6929
     USAGE 289,6952
     USE_FRM 290,6970
     USE_SYM 291,6990
     USING 292,7010
     VALUES 293,7028
     VARIABLES 294,7047
     WHERE 295,7069
     WITH 296,7087
     WRITE_SYM 297,7104
     X509_SYM 298,7126
     XOR 299,7147
     COMPRESSED_SYM 300,7163
     BIGINT 301,7190
     BLOB_SYM 302,7209
     CHAR_SYM 303,7230
     CHANGED 304,7251
     COALESCE 305,7271
     DATETIME 306,7292
     DATE_SYM 307,7313
     DECIMAL_SYM 308,7334
     DOUBLE_SYM 309,7358
     ENUM 310,7381
     FAST_SYM 311,7398
     FLOAT_SYM 312,7419
     INT_SYM 313,7441
     LIMIT 314,7461
     LONGBLOB 315,7479
     LONGTEXT 316,7500
     MEDIUMBLOB 317,7521
     MEDIUMINT 318,7544
     MEDIUMTEXT 319,7566
     NUMERIC_SYM 320,7589
     PRECISION 321,7613
     QUICK 322,7635
     REAL 323,7653
     SIGNED_SYM 324,7670
     SMALLINT 325,7693
     STRING_SYM 326,7714
     TEXT_SYM 327,7737
     TIMESTAMP 328,7758
     TIME_SYM 329,7780
     TINYBLOB 330,7801
     TINYINT 331,7822
     TINYTEXT 332,7842
     ULONGLONG_NUM 333,7863
     UNSIGNED 334,7889
     VARBINARY 335,7910
     VARCHAR 336,7932
     VARYING 337,7952
     ZEROFILL 338,7972
     AGAINST 339,7993
     ATAN 340,8013
     BETWEEN_SYM 341,8030
     BIT_AND 342,8054
     BIT_OR 343,8074
     CASE_SYM 344,8093
     CONCAT 345,8114
     CONCAT_WS 346,8133
     CURDATE 347,8155
     CURTIME 348,8175
     DATABASE 349,8195
     DATE_ADD_INTERVAL 350,8216
     DATE_SUB_INTERVAL 351,8246
     DAY_HOUR_SYM 352,8276
     DAY_MINUTE_SYM 353,8301
     DAY_SECOND_SYM 354,8328
     DAY_SYM 355,8355
     DECODE_SYM 356,8375
     DES_ENCRYPT_SYM 357,8398
     DES_DECRYPT_SYM 358,8426
     ELSE 359,8454
     ELT_FUNC 360,8471
     ENCODE_SYM 361,8492
     ENCRYPT 362,8515
     EXPORT_SET 363,8535
     EXTRACT_SYM 364,8558
     FIELD_FUNC 365,8582
     FORMAT_SYM 366,8605
     FOR_SYM 367,8628
     FROM_UNIXTIME 368,8648
     GROUP_UNIQUE_USERS 369,8674
     HOUR_MINUTE_SYM 370,8705
     HOUR_SECOND_SYM 371,8733
     HOUR_SYM 372,8761
     IDENTIFIED_SYM 373,8782
     IF 374,8809
     INSERT_METHOD 375,8824
     INTERVAL_SYM 376,8850
     LAST_INSERT_ID 377,8875
     LEFT 378,8902
     LOCATE 379,8919
     MAKE_SET_SYM 380,8938
     MASTER_POS_WAIT 381,8963
     MINUTE_SECOND_SYM 382,8991
     MINUTE_SYM 383,9021
     MODE_SYM 384,9044
     MODIFY_SYM 385,9065
     MONTH_SYM 386,9088
     NOW_SYM 387,9110
     PASSWORD 388,9130
     POSITION_SYM 389,9151
     PROCEDURE 390,9176
     RAND 391,9198
     REPLACE 392,9215
     RIGHT 393,9235
     ROUND 394,9253
     SECOND_SYM 395,9271
     SHARE_SYM 396,9294
     SUBSTRING 397,9316
     SUBSTRING_INDEX 398,9338
     TRIM 399,9366
     UDA_CHAR_SUM 400,9383
     UDA_FLOAT_SUM 401,9408
     UDA_INT_SUM 402,9434
     UDF_CHAR_FUNC 403,9458
     UDF_FLOAT_FUNC 404,9484
     UDF_INT_FUNC 405,9511
     UNIQUE_USERS 406,9536
     UNIX_TIMESTAMP 407,9561
     USER 408,9588
     WEEK_SYM 409,9605
     WHEN_SYM 410,9626
     WORK_SYM 411,9647
     YEAR_MONTH_SYM 412,9668
     YEAR_SYM 413,9695
     YEARWEEK 414,9716
     BENCHMARK_SYM 415,9737
     END 416,9763
     THEN_SYM 417,9779
     SQL_BIG_RESULT 418,9800
     SQL_CACHE_SYM 419,9827
     SQL_CALC_FOUND_ROWS 420,9853
     SQL_NO_CACHE_SYM 421,9885
     SQL_SMALL_RESULT 422,9914
     SQL_BUFFER_RESULT 423,9943
     ISSUER_SYM 424,9973
     CIPHER_SYM 425,9996
     NEG 426,10019
#define END_OF_INPUT 429,10047
#define CLOSE_SYM 430,10072
#define HANDLER_SYM 431,10094
#define LAST_SYM 432,10118
#define NEXT_SYM 433,10139
#define PREV_SYM 434,10160
#define EQ 435,10181
#define EQUAL_SYM 436,10196
#define GE 437,10218
#define GT_SYM 438,10233
#define LE 439,10252
#define LT 440,10267
#define NE 441,10282
#define IS 442,10297
#define SHIFT_LEFT 443,10312
#define SHIFT_RIGHT 444,10335
#define SET_VAR 445,10359
#define ABORT_SYM 446,10379
#define ADD 447,10401
#define AFTER_SYM 448,10417
#define ALTER 449,10439
#define ANALYZE_SYM 450,10457
#define AVG_SYM 451,10481
#define BEGIN_SYM 452,10501
#define BINLOG_SYM 453,10523
#define CHANGE 454,10546
#define CLIENT_SYM 455,10565
#define COMMENT_SYM 456,10588
#define COMMIT_SYM 457,10612
#define COUNT_SYM 458,10635
#define CREATE 459,10657
#define CROSS 460,10676
#define CUBE_SYM 461,10694
#define DELETE_SYM 462,10715
#define DO_SYM 463,10738
#define DROP 464,10757
#define EVENTS_SYM 465,10774
#define EXECUTE_SYM 466,10797
#define FLUSH_SYM 467,10821
#define INSERT 468,10843
#define IO_THREAD 469,10862
#define KILL_SYM 470,10884
#define LOAD 471,10905
#define LOCKS_SYM 472,10922
#define LOCK_SYM 473,10944
#define MASTER_SYM 474,10965
#define MAX_SYM 475,10988
#define MIN_SYM 476,11008
#define NONE_SYM 477,11028
#define OPTIMIZE 478,11049
#define PURGE 479,11070
#define REPAIR 480,11088
#define REPLICATION 481,11107
#define RESET_SYM 482,11131
#define ROLLBACK_SYM 483,11153
#define ROLLUP_SYM 484,11178
#define SAVEPOINT_SYM 485,11201
#define SELECT_SYM 486,11227
#define SHOW 487,11250
#define SLAVE 488,11267
#define SQL_THREAD 489,11285
#define START_SYM 490,11308
#define STD_SYM 491,11330
#define STOP_SYM 492,11350
#define SUM_SYM 493,11371
#define SUPER_SYM 494,11391
#define TRUNCATE_SYM 495,11413
#define UNLOCK_SYM 496,11438
#define UPDATE_SYM 497,11461
#define ACTION 498,11484
#define AGGREGATE_SYM 499,11503
#define ALL 500,11529
#define AND 501,11545
#define AS 502,11561
#define ASC 503,11576
#define AUTO_INC 504,11592
#define AVG_ROW_LENGTH 505,11613
#define BACKUP_SYM 506,11640
#define BERKELEY_DB_SYM 507,11663
#define BINARY 508,11691
#define BIT_SYM 509,11710
#define BOOL_SYM 510,11730
#define BOOLEAN_SYM 511,11751
#define BOTH 512,11775
#define BY 513,11792
#define CACHE_SYM 514,11807
#define CASCADE 515,11829
#define CAST_SYM 516,11849
#define CHARSET 517,11870
#define CHECKSUM_SYM 518,11890
#define CHECK_SYM 519,11915
#define COMMITTED_SYM 520,11937
#define COLUMNS 521,11963
#define COLUMN_SYM 522,11983
#define CONCURRENT 523,12006
#define CONSTRAINT 524,12029
#define CONVERT_SYM 525,12052
#define DATABASES 526,12076
#define DATA_SYM 527,12098
#define DEFAULT 528,12119
#define DELAYED_SYM 529,12139
#define DELAY_KEY_WRITE_SYM 530,12163
#define DESC 531,12195
#define DESCRIBE 532,12212
#define DES_KEY_FILE 533,12233
#define DISABLE_SYM 534,12258
#define DISTINCT 535,12282
#define DYNAMIC_SYM 536,12303
#define ENABLE_SYM 537,12327
#define ENCLOSED 538,12350
#define ESCAPED 539,12371
#define DIRECTORY_SYM 540,12391
#define ESCAPE_SYM 541,12417
#define EXISTS 542,12440
#define EXTENDED_SYM 543,12459
#define FILE_SYM 544,12484
#define FIRST_SYM 545,12505
#define FIXED_SYM 546,12527
#define FLOAT_NUM 547,12549
#define FORCE_SYM 548,12571
#define FOREIGN 549,12593
#define FROM 550,12613
#define FULL 551,12630
#define FULLTEXT_SYM 552,12647
#define GLOBAL_SYM 553,12672
#define GRANT 554,12695
#define GRANTS 555,12713
#define GREATEST_SYM 556,12732
#define GROUP 557,12757
#define HAVING 558,12775
#define HEAP_SYM 559,12794
#define HEX_NUM 560,12815
#define HIGH_PRIORITY 561,12835
#define HOSTS_SYM 562,12861
#define IDENT 563,12883
#define IGNORE_SYM 564,12901
#define INDEX 565,12924
#define INDEXES 566,12942
#define INFILE 567,12962
#define INNER_SYM 568,12981
#define INNOBASE_SYM 569,13003
#define INTO 570,13028
#define IN_SYM 571,13045
#define ISOLATION 572,13064
#define ISAM_SYM 573,13086
#define JOIN_SYM 574,13107
#define KEYS 575,13128
#define KEY_SYM 576,13145
#define LEADING 577,13165
#define LEAST_SYM 578,13185
#define LEVEL_SYM 579,13207
#define LEX_HOSTNAME 580,13229
#define LIKE 581,13254
#define LINES 582,13271
#define LOCAL_SYM 583,13289
#define LOG_SYM 584,13311
#define LOGS_SYM 585,13331
#define LONG_NUM 586,13352
#define LONG_SYM 587,13373
#define LOW_PRIORITY 588,13394
#define MASTER_HOST_SYM 589,13419
#define MASTER_USER_SYM 590,13447
#define MASTER_LOG_FILE_SYM 591,13475
#define MASTER_LOG_POS_SYM 592,13507
#define MASTER_PASSWORD_SYM 593,13538
#define MASTER_PORT_SYM 594,13570
#define MASTER_CONNECT_RETRY_SYM 595,13598
#define MASTER_SERVER_ID_SYM 596,13635
#define RELAY_LOG_FILE_SYM 597,13668
#define RELAY_LOG_POS_SYM 598,13699
#define MATCH 599,13729
#define MAX_ROWS 600,13747
#define MAX_CONNECTIONS_PER_HOUR 601,13768
#define MAX_QUERIES_PER_HOUR 602,13805
#define MAX_UPDATES_PER_HOUR 603,13838
#define MEDIUM_SYM 604,13871
#define MERGE_SYM 605,13894
#define MEMORY_SYM 606,13916
#define MIN_ROWS 607,13939
#define MYISAM_SYM 608,13960
#define NATIONAL_SYM 609,13983
#define NATURAL 610,14008
#define NEW_SYM 611,14028
#define NCHAR_SYM 612,14048
#define NOT 613,14070
#define NO_SYM 614,14086
#define NULL_SYM 615,14105
#define NUM 616,14126
#define OFFSET_SYM 617,14142
#define ON 618,14165
#define OPEN_SYM 619,14180
#define OPTION 620,14201
#define OPTIONALLY 621,14220
#define OR 622,14243
#define OR_OR_CONCAT 623,14258
#define ORDER_SYM 624,14283
#define OUTER 625,14305
#define OUTFILE 626,14323
#define DUMPFILE 627,14343
#define PACK_KEYS_SYM 628,14364
#define PARTIAL 629,14390
#define PRIMARY_SYM 630,14410
#define PRIVILEGES 631,14434
#define PROCESS 632,14457
#define PROCESSLIST_SYM 633,14477
#define QUERY_SYM 634,14505
#define RAID_0_SYM 635,14527
#define RAID_STRIPED_SYM 636,14550
#define RAID_TYPE 637,14579
#define RAID_CHUNKS 638,14601
#define RAID_CHUNKSIZE 639,14625
#define READ_SYM 640,14652
#define REAL_NUM 641,14673
#define REFERENCES 642,14694
#define REGEXP 643,14717
#define RELOAD 644,14736
#define RENAME 645,14755
#define REPEATABLE_SYM 646,14774
#define REQUIRE_SYM 647,14801
#define RESOURCES 648,14825
#define RESTORE_SYM 649,14847
#define RESTRICT 650,14871
#define REVOKE 651,14892
#define ROWS_SYM 652,14911
#define ROW_FORMAT_SYM 653,14932
#define ROW_SYM 654,14959
#define SET 655,14979
#define SERIALIZABLE_SYM 656,14995
#define SESSION_SYM 657,15024
#define SHUTDOWN 658,15048
#define SSL_SYM 659,15069
#define STARTING 660,15089
#define STATUS_SYM 661,15110
#define STRAIGHT_JOIN 662,15133
#define SUBJECT_SYM 663,15159
#define TABLES 664,15183
#define TABLE_SYM 665,15202
#define TEMPORARY 666,15224
#define TERMINATED 667,15246
#define TEXT_STRING 668,15269
#define TO_SYM 669,15293
#define TRAILING 670,15312
#define TRANSACTION_SYM 671,15333
#define TYPE_SYM 672,15361
#define FUNC_ARG0 673,15382
#define FUNC_ARG1 674,15404
#define FUNC_ARG2 675,15426
#define FUNC_ARG3 676,15448
#define UDF_RETURNS_SYM 677,15470
#define UDF_SONAME_SYM 678,15498
#define UDF_SYM 679,15525
#define UNCOMMITTED_SYM 680,15545
#define UNION_SYM 681,15573
#define UNIQUE_SYM 682,15595
#define USAGE 683,15618
#define USE_FRM 684,15636
#define USE_SYM 685,15656
#define USING 686,15676
#define VALUES 687,15694
#define VARIABLES 688,15713
#define WHERE 689,15735
#define WITH 690,15753
#define WRITE_SYM 691,15770
#define X509_SYM 692,15792
#define XOR 693,15813
#define COMPRESSED_SYM 694,15829
#define BIGINT 695,15856
#define BLOB_SYM 696,15875
#define CHAR_SYM 697,15896
#define CHANGED 698,15917
#define COALESCE 699,15937
#define DATETIME 700,15958
#define DATE_SYM 701,15979
#define DECIMAL_SYM 702,16000
#define DOUBLE_SYM 703,16024
#define ENUM 704,16047
#define FAST_SYM 705,16064
#define FLOAT_SYM 706,16085
#define INT_SYM 707,16107
#define LIMIT 708,16127
#define LONGBLOB 709,16145
#define LONGTEXT 710,16166
#define MEDIUMBLOB 711,16187
#define MEDIUMINT 712,16210
#define MEDIUMTEXT 713,16232
#define NUMERIC_SYM 714,16255
#define PRECISION 715,16279
#define QUICK 716,16301
#define REAL 717,16319
#define SIGNED_SYM 718,16336
#define SMALLINT 719,16359
#define STRING_SYM 720,16380
#define TEXT_SYM 721,16403
#define TIMESTAMP 722,16424
#define TIME_SYM 723,16446
#define TINYBLOB 724,16467
#define TINYINT 725,16488
#define TINYTEXT 726,16508
#define ULONGLONG_NUM 727,16529
#define UNSIGNED 728,16555
#define VARBINARY 729,16576
#define VARCHAR 730,16598
#define VARYING 731,16618
#define ZEROFILL 732,16638
#define AGAINST 733,16659
#define ATAN 734,16679
#define BETWEEN_SYM 735,16696
#define BIT_AND 736,16720
#define BIT_OR 737,16740
#define CASE_SYM 738,16759
#define CONCAT 739,16780
#define CONCAT_WS 740,16799
#define CURDATE 741,16821
#define CURTIME 742,16841
#define DATABASE 743,16861
#define DATE_ADD_INTERVAL 744,16882
#define DATE_SUB_INTERVAL 745,16912
#define DAY_HOUR_SYM 746,16942
#define DAY_MINUTE_SYM 747,16967
#define DAY_SECOND_SYM 748,16994
#define DAY_SYM 749,17021
#define DECODE_SYM 750,17041
#define DES_ENCRYPT_SYM 751,17064
#define DES_DECRYPT_SYM 752,17092
#define ELSE 753,17120
#define ELT_FUNC 754,17137
#define ENCODE_SYM 755,17158
#define ENCRYPT 756,17181
#define EXPORT_SET 757,17201
#define EXTRACT_SYM 758,17224
#define FIELD_FUNC 759,17248
#define FORMAT_SYM 760,17271
#define FOR_SYM 761,17294
#define FROM_UNIXTIME 762,17314
#define GROUP_UNIQUE_USERS 763,17340
#define HOUR_MINUTE_SYM 764,17371
#define HOUR_SECOND_SYM 765,17399
#define HOUR_SYM 766,17427
#define IDENTIFIED_SYM 767,17448
#define IF 768,17475
#define INSERT_METHOD 769,17490
#define INTERVAL_SYM 770,17516
#define LAST_INSERT_ID 771,17541
#define LEFT 772,17568
#define LOCATE 773,17585
#define MAKE_SET_SYM 774,17604
#define MASTER_POS_WAIT 775,17629
#define MINUTE_SECOND_SYM 776,17657
#define MINUTE_SYM 777,17687
#define MODE_SYM 778,17710
#define MODIFY_SYM 779,17731
#define MONTH_SYM 780,17754
#define NOW_SYM 781,17776
#define PASSWORD 782,17796
#define POSITION_SYM 783,17817
#define PROCEDURE 784,17842
#define RAND 785,17864
#define REPLACE 786,17881
#define RIGHT 787,17901
#define ROUND 788,17919
#define SECOND_SYM 789,17937
#define SHARE_SYM 790,17960
#define SUBSTRING 791,17982
#define SUBSTRING_INDEX 792,18004
#define TRIM 793,18032
#define UDA_CHAR_SUM 794,18049
#define UDA_FLOAT_SUM 795,18074
#define UDA_INT_SUM 796,18100
#define UDF_CHAR_FUNC 797,18124
#define UDF_FLOAT_FUNC 798,18150
#define UDF_INT_FUNC 799,18177
#define UNIQUE_USERS 800,18202
#define UNIX_TIMESTAMP 801,18227
#define USER 802,18254
#define WEEK_SYM 803,18271
#define WHEN_SYM 804,18292
#define WORK_SYM 805,18313
#define YEAR_MONTH_SYM 806,18334
#define YEAR_SYM 807,18361
#define YEARWEEK 808,18382
#define BENCHMARK_SYM 809,18403
#define END 810,18429
#define THEN_SYM 811,18445
#define SQL_BIG_RESULT 812,18466
#define SQL_CACHE_SYM 813,18493
#define SQL_CALC_FOUND_ROWS 814,18519
#define SQL_NO_CACHE_SYM 815,18551
#define SQL_SMALL_RESULT 816,18580
#define SQL_BUFFER_RESULT 817,18609
#define ISSUER_SYM 818,18639
#define CIPHER_SYM 819,18662
#define NEG 820,18685

sql_yacc.yy,15
} yystype;71,

y.tab.h,23
# define YYSTYPE 857,

sql/sql_manager.h,0

sql/item_create.h,0

mysys/mysys_priv.h,0

myisammrg/myrg_def.h,0

merge/mrg_def.h,0

libmysqld/embedded_priv.h,0

os2/rint.s,0

strings/strtol.c,0
